{"version":3,"sources":["logo.svg","reducers/authSlice.js","firebase.js","components/Login/GoogleLogin.js","components/GlobalHeader/GlobalHeader.js","pages/About/About.js","pages/Contact/Contact.js","reducers/resumeDataSlice.js","reducers/resumeSettingsSlice.js","globals.js","reducers/userDataSlice.js","components/GlobalResumeSetting/GlobalResumeSetting.js","components/Achievements/AchievementEditor.js","components/Achievements/Achievement.js","components/BasicInfo/BasicInfoEditor.js","components/BasicInfo/BasicInfo.js","components/Education/EducationEditor.js","components/Education/Education.js","components/Experience/ExperienceEditor.js","components/Experience/Experience.js","components/Languages/LanguagesEditor.js","components/Languages/Languages.js","components/ProfessionalSummary/ProfessionalSummaryEditor.js","components/ProfessionalSummary/ProfessionalSummary.js","components/Skills/SkillsEditor.js","components/Skills/Skills.js","components/SkillsWithProgress/SkillsWithProgressEditor.js","components/SkillsWithProgress/SkillsWithProgress.js","components/Social/SocialEditor.js","components/Social/Social.js","components/Divider/DividerEditor.js","components/Divider/Divider.js","pages/Builder/Builder.js","assets/images/resume-2.svg","pages/Resumes/Resumes.js","pages/Home/Home.js","components/App/App.js","theme/index.js","reducers/index.js","index.js"],"names":["INITIAL_STATE","isSignedIn","localStorage","getItem","userId","name","email","authSlice","createSlice","initialState","reducers","signInAction","state","action","payload","signOutAction","actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","GoogleLogin","onAuthChange","isSignedInStatus","props","auth","currentUser","get","getId","getBasicProfile","getName","getEmail","onSignInClick","signIn","then","firestore","collection","doc","exists","setItem","getAuthResponse","id_token","history","replace","set","userResumes","JSON","stringify","catch","error","console","log","onSignOutClick","signOut","removeItem","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","this","className","CircularProgress","size","Button","component","NavLink","to","exact","variant","color","disableElevation","onClick","renderAuthButton","Component","mapDispatchToProps","connect","authReducer","withRouter","GlobalHeader","useLocation","pathname","Box","sx","flexGrow","AppBar","elevation","position","Toolbar","src","logo","alt","React","memo","About","Container","maxWidth","m","textAlign","Contact","getResumeDataByResumeId","createAsyncThunk","resumeId","thunkAPI","a","data","response","parse","resumeJson","updateResumeDataByResumeId","apiData","update","resumeDataSlice","resumeData","loading","updateResumeDataReducer","column","filter","item","componentData","extraReducers","builder","addCase","fulfilled","getResumeSettingsByResumeId","resumeSettings","updateResumeSettingsByResumeId","resumeSettingsSlice","updateSettingsDataReducer","richEditorSettings","toolbar","initialData","bodyFontSize","headingFontSize","subheadingFontSize","bodyFontColor","headingFontColor","subheadingFontColor","headerBackgroundColor","mainBackgroundColor","sidebarBackgroundColor","sidebarHeadingColor","sidebarBodyColor","aboutSectionFontColor","headingAlignment","sidebar","sidebarposition","header","componentType","path","title","items","summary","main","university","date","gpa","showIcon","experienceTitle","company","location","experienceSummary","filled","rounded","socialPlatform","username","pageTwo","componentLibrary","showProficiency","showProficiencyProgress","language","proficiency","styles","type","label","rule","value","unit","options","colors","fontSizes","getUserDataByUserId","updateUserResumeDataByUserId","deleteResumeByResumeId","delete","copyResumeByResumeId","uniqueId","createNewReumseByUserId","userResumeData","resumeName","length","resumeImage","newResumesArr","fullName","userData","website","phone","address","userDataSlice","updateUserDataReducer","GlobalResumeSetting","useState","headerFontColorToggle","headingFontColorToggle","subheadingFontColorToggle","bodyFontToggle","headerBackgroundColorToggle","sidebarBackgroundColorToogle","sidebarHeadingColorToggle","mainBackgroundColorToggle","colorsToggles","setColorsToggles","closeEditor","setShowEditorSection","changeFontColor","property","document","querySelector","style","setProperty","changeHeadingAlignment","e","alignment","setResumeSettings","openColorToggle","colorToggleProp","changeSidebarPosition","sidebarPosition","updateGlobalSetting","backgroundColor","onChangeComplete","hex","triangle","bodyFontColorToggle","sidebarBodyColorToggle","sidebarBackgroundColorToggle","event","map","font","index","AchievementEditor","editorData","setEditorData","firstime","setFirstTime","setTitle","achievementItems","setAchievementItems","setShowIcon","dispatch","useDispatch","setOpen","useEffect","componentName","componentColumn","Dialog","fullWidth","open","onClose","DialogContent","TextField","autoComplete","onChange","newVal","target","Switch","checked","mb","mt","mr","skills","onAchievementChange","multiline","rows","inputProps","fontSize","lineHeight","width","splice","onAddAchievement","onDeleteAchievement","DialogActions","disabled","Achievement","componentItem","BasicInfoEditor","onDataChange","newName","newEditorData","readOnly","currentRole","Item","styled","theme","typography","caption","display","alignItems","BasicInfo","Grid","container","justifyContent","rowSpacing","columnSpacing","xs","sm","md","pl","EducationEditor","educationItems","setEducationItems","newTitle","newEducationItems","onEducationTitleChange","newUniversity","onUniversityChange","newDate","onDateChange","placeholder","newGPA","onGpaChange","onAddEducation","onDeleteEducation","height","Education","ExperienceEditor","experienceItems","setExperienceItems","onFieldChange","newValue","newExperienceItems","defaultValue","modules","val","onSummaryChange","onAddExperience","onDeleteExperience","Experience","dangerouslySetInnerHTML","__html","LanguagesEditor","languageItems","setLanguageItems","setShowProficiency","setShowProficiencyProgress","getProficiencyValue","prof","onShowProficiencyChange","onShowProficiencyProgressChange","languages","onLanguageChange","Slider","step","marks","min","max","onProficiencyChange","onAddLanguage","onDeleteLanguage","Languages","getProgressFromProficiency","LinearProgress","SocialEditor","professionalSummaryItems","setprofessionalSummaryItems","newprofessionalSummaryItems","ProfessionalSummary","ProfessionalSummaryEditor","SkillsEditor","skillItems","setSkillItems","setRounded","setFilled","onSkillChange","onAddSkill","onDeleteSkill","Skills","Chip","SkillsWithProgressEditor","skillsProgressItems","setSkillsProgressItems","newSkillsProgressItems","onskillsProgressItemsChange","Number","onAddSkills","onDeleteSkills","SkillsWithProgress","socialItems","setSocialItems","newSocialItems","onAddSocial","Social","DividerEditor","updateStyle","s","widgetData","find","spacing","select","margin","InputProps","onStyleChange","option","MenuItem","Divider","forEach","Builder","resumeHTML","useSelector","resumeDataReducer","resumeSettingsReducer","userDataReducer","arr","setItems","setPageTwo","isLoading","setIsLoading","showEditorSection","openSnackbar","setopenSnackbar","useParams","updateResumeData","newData","res","setTimeout","checkForPageTwo","root","paperheight","clientHeight","childs","children","i","moveLastComponentToPageTwo","newArr","push","pop","onSidebarSettingClick","updateResumeThumbnail","pageOneElement","html2canvas","canvas","userResumesData","resume","toString","toDataURL","copyComponent","copy","Math","floor","random","Date","now","removeComponent","deleteComponent","getComponent","columnName","onDragEnd","result","destination","source","draggableId","droppableId","Array","from","x","colId","newColumn","sourceId","destId","sourceArr","destArr","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","startIcon","mergedArr","getElementById","scrollIntoView","behavior","print","id","Paper","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","isDragging","draggableProps","key","dragHandleProps","titleAccess","fallback","Autocomplete","renderInput","params","padding","addComponentToResume","Resumes","setUserData","setUserResumes","previewResumeImageSrc","setPreviewResumeImageSrc","useHistory","getUserData","getUniqueId","scroll","backgroundImage","copyFrom","newResumeData","onDeleteResume","direction","resumeSvg","Home","App","createTheme","palette","primary","components","MuiButton","variants","paddingLeft","paddingRight","store","configureStore","reducer","ReactDOM","render","ThemeProvider"],"mappings":"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","file":"static/js/main.36bf3b07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn : (localStorage.getItem('token') == null) ? false : true,\r\n    userId: null,\r\n    name: null,\r\n    email: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        signInAction: (state, action) => {\r\n            state.isSignedIn = true;\r\n            state.userId = action.payload.userId;\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n        },\r\n        signOutAction: (state) => {\r\n            state.isSignedIn = false;\r\n            state.userId = null;\r\n            state.name = null;\r\n            state.email = null;\r\n        },\r\n    },\r\n  });\r\n  \r\nexport const { signInAction, signOutAction } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBjh7R7l6f9rTW8Oll_uzx2q50uJNWRjbU\",\r\n  authDomain: \"resume-builder-c4248.firebaseapp.com\",\r\n  projectId: \"resume-builder-c4248\",\r\n  storageBucket: \"resume-builder-c4248.appspot.com\",\r\n  messagingSenderId: \"790181104761\",\r\n  appId: \"1:790181104761:web:3f3e105c4d46cd7c09d8a8\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAction, signOutAction } from \"../../reducers/authSlice.js\";\r\nimport { withRouter, NavLink } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\n\r\nclass GoogleLogin extends Component {\r\n  // If not using arrow function then we need to bind `this` like below\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {isSignedIn: null};\r\n  //     this.onAuthChange = this.onAuthChange.bind(this)\r\n  // }\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"1051932499833-smce802vivdpiijmo5bg4donrr6n40fg.apps.googleusercontent.com\",\r\n          scope: \"email profile\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // listen for auth changes in future\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedInStatus) => {\r\n    if (isSignedInStatus) {\r\n      this.props.signInAction({\r\n        userId: this.auth.currentUser.get().getId(),\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n    } else {\r\n      this.props.signOutAction();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn().then(() => {\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const name = this.auth.currentUser.get().getBasicProfile().getName();\r\n      const email = this.auth.currentUser.get().getBasicProfile().getEmail();\r\n      this.props.signInAction({\r\n        userId: userId,\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n\r\n      // If first time user then create a new resume\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .get()\r\n        .then((doc) => {\r\n          // Existing user then redirect else create a new resume\r\n          if (doc.exists) {\r\n            localStorage.setItem(\r\n              \"token\",\r\n              this.auth.currentUser.get().getAuthResponse().id_token\r\n            );\r\n            this.props.history.replace(\"resumes\");\r\n          } else {\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(`${userId}`)\r\n              .set({\r\n                userResumes: JSON.stringify([]),\r\n                userId: userId,\r\n                name: name,\r\n                email: email,\r\n              })\r\n              .then(() => {\r\n                localStorage.setItem(\r\n                  \"token\",\r\n                  this.auth.currentUser.get().getAuthResponse().id_token\r\n                );\r\n                this.props.history.replace(`resumes`);\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut().then(() => {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.signOutAction();\r\n    });\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return (\r\n        <div className=\"header-login-button-wrap\">\r\n          <CircularProgress className=\"login-loader\" size={18} />\r\n        </div>\r\n      );\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <>\r\n          <Button\r\n              component={NavLink}\r\n              to=\"/resumes\"\r\n              exact\r\n              variant=\"text\"\r\n              color=\"primary\" \r\n              disableElevation\r\n              className=\"mobile-d-none header-menu-link\">\r\n                  My Resumes\r\n          </Button>\r\n          <Button\r\n            onClick={this.onSignOutClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            className=\"header-login-button\"\r\n          >\r\n            Logout\r\n          </Button>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignInClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Create Resume\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderAuthButton();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { signInAction, signOutAction };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(GoogleLogin));\r\n","import React from \"react\";\r\nimport {AppBar, Box, Toolbar, Button} from '@mui/material';\r\nimport logo from '../../logo.svg';\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport GoogleLogin from '../Login/GoogleLogin'\r\n\r\nimport './GlobalHeader.css'\r\n\r\nconst GlobalHeader = () => {\r\n    return (useLocation().pathname !== '/builder') ? (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar elevation={0} className=\"global-header\" color=\"transparent\" position=\"static\">\r\n                <Toolbar>\r\n                    <img src={logo} className=\"header-logo\" alt=\"Resume Builder\"/>\r\n                    <div className=\"header-logo-text\">\r\n                        <span>Resume Builder</span>\r\n                    </div>\r\n                    <nav>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/\"\r\n                            exact\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Home\r\n                        </Button>\r\n                        \r\n                        {/* <Button \r\n                            component={NavLink}\r\n                            to=\"/about\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                About\r\n                        </Button>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/contact\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Contact\r\n                        </Button> */}\r\n                        <GoogleLogin></GoogleLogin>\r\n                    </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    ) : <span></span>\r\n}\r\n\r\nexport default  React.memo(GlobalHeader);","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>About</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>Contact</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeData: null, loading: 'idle',\r\n};\r\n\r\nexport const getResumeDataByResumeId = createAsyncThunk(\r\n  'resume/getResumeDataByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n    console.log('calling api');\r\n    const response = await (await firebase.firestore().collection('resumes').doc(`${resumeId}`).get()).data();\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeDataByResumeId = createAsyncThunk(\r\n  'resume/updateResumeDataByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"resumes\").doc(`${apiData.resumeId}`).update({resumeJson: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n);\r\n  \r\n\r\nexport const resumeDataSlice = createSlice({\r\n    name: 'resumeDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateResumeDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeData));\r\n            data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getResumeDataByResumeId.fulfilled, (state, action) => {\r\n          console.log(action);\r\n          state.resumeData = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeDataByResumeId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateResumeDataReducer } = resumeDataSlice.actions;  \r\n\r\nexport default resumeDataSlice.reducer;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeSettings: null,\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getResumeSettingsByResumeId = createAsyncThunk(\r\n  'resume/getResumeSettingsByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('resumes').doc(`${resumeId}`).get()).data();\r\n    return JSON.parse(response.resumeSettings);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeSettingsByResumeId = createAsyncThunk(\r\n  'resume/updateResumeSettingsByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"resumes\").doc(`${apiData.resumeId}`).update({resumeSettings: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n)\r\n  \r\n\r\nexport const resumeSettingsSlice = createSlice({\r\n    name: 'resumeSettingsSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateSettingsDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeSettings));\r\n            //data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getResumeSettingsByResumeId.fulfilled, (state, action) => {\r\n            state.resumeSettings = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeSettingsByResumeId.fulfilled, (state, action) => {\r\n          state.resumeSettings = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateSettingsDataReducer } = resumeSettingsSlice.actions;  \r\n\r\nexport default resumeSettingsSlice.reducer;","export const richEditorSettings = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n    [{ 'align': [] }],\r\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n    [{ 'color': [] }, { 'background': [] }],\r\n    ['link', 'image'],\r\n    ['clean']\r\n  ],\r\n};\r\n\r\nexport const initialData = {\r\n  resumeSettings: {\r\n    bodyFontSize: 'small',\r\n    headingFontSize: 'large',\r\n    subheadingFontSize: 'small',\r\n    bodyFontColor: '#000000',\r\n    headingFontColor: '#000000',\r\n    subheadingFontColor: '#000000',\r\n    headerBackgroundColor: '#ffffff',\r\n    mainBackgroundColor: '#ffffff',\r\n    sidebarBackgroundColor: '#ffffff',\r\n    sidebarHeadingColor: '#000000',\r\n    sidebarBodyColor: '#000000',\r\n    aboutSectionFontColor: '#000000',\r\n    headingAlignment: 'left',\r\n    sidebar: true,\r\n    sidebarposition: 'right',\r\n  },\r\n  resumeJson: {\r\n  header: [\r\n      {\r\n          name: \"BasicInfo\",\r\n          componentType: 'BasicInfo',\r\n          path: \"BasicInfo/BasicInfo\"\r\n      },\r\n      {\r\n          name: \"ProfessionalSummary\",\r\n          componentType: 'ProfessionalSummary',\r\n          path: \"ProfessionalSummary/ProfessionalSummary\",\r\n          componentData: {\r\n              title: \"Professional Summary\",\r\n              items: [\r\n                {\r\n                  summary: \"This is summary body.\"\r\n                },\r\n              ],\r\n          }\r\n      }\r\n\r\n  ],\r\n  main: [\r\n    {\r\n      name: \"Education\",\r\n      componentType: 'Education',\r\n      path: \"Education/Education\",\r\n      componentData: {\r\n        title: \"Education\",\r\n        items: [\r\n          {\r\n            title: \"Executive MBA, Engineering Management\",\r\n            university: \"The University of Arizona\",\r\n            date: \"2010 - 2014\",\r\n            gpa: \"CGPA 09/10\",\r\n          },\r\n          {\r\n            title: \"Engineering Management\",\r\n            university: \"The University of California, Berkeley\",\r\n            date: \"2008 - 2010\",\r\n            gpa: \"CGPA 7.5/10\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Achievements\",\r\n      componentType: 'Achievements',\r\n      path: \"Achievements/Achievement\",\r\n      componentData: {\r\n        title: \"Achievements\",\r\n        showIcon: true,\r\n        items: [\r\n          {\r\n            title:\r\n              \"Won Best Employee Award for last 2 consecutive year (2020 & 2021). Won Best Employee Award for last 2 consecutive year (2020 & 2021).\",\r\n          },\r\n          { title: \"Won inter-zone cricket competition (2020). \" },\r\n          {\r\n            title: \"Runner up for state level table tennis competition (2020).\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Experience\",\r\n      componentType: 'Experience',\r\n      path: \"Experience/Experience\",\r\n      componentData: {\r\n        title: \"Experience\",\r\n        items: [\r\n          {\r\n            experienceTitle: \"Android Developer\",\r\n            company: \"Google\",\r\n            date: \"2018 - 2020\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 3 key projects of major clients.\",\r\n          },\r\n          {\r\n            experienceTitle: \"Front End Developer\",\r\n            company: \"Amazon\",\r\n            date: \"2014 - 2018\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 4 key projects of major clients.\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  sidebar: [\r\n    {\r\n      name: \"Skills\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"HTML\" },\r\n          { title: \"CSS\" },\r\n          { title: \"JavaScript\" },\r\n          { title: \"React\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Tools\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Tools\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [{ title: \"Git\" }, { title: \"Webpack\" }, { title: \"Gulp\" }],\r\n      },\r\n    },\r\n    {\r\n      name: \"Hobbies\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Hobbies\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"Reading\" },\r\n          { title: \"Swimming\" },\r\n          { title: \"Hiking\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Social\",\r\n      componentType: 'Social',\r\n      path: \"Social/Social\",\r\n      componentData: {\r\n        title: \"Social\",\r\n        items: [\r\n          {\r\n            socialPlatform: \"Github\",\r\n            username: \"@username\",\r\n          },\r\n          {\r\n            socialPlatform: \"LinkedIn\",\r\n            username: \"@username\",\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n  pageTwo: [],\r\n  componentLibrary: [\r\n    {\r\n      name: \"Languages\",\r\n      componentType: 'Languages',\r\n      path: \"Languages/Languages\",\r\n      componentData: {\r\n        title: \"Languages\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { language: \"English\", proficiency: \"Proficient\" },\r\n          { language: \"Hindi\", proficiency: \"Native\" },\r\n          { language: \"Spanish\", proficiency: \"Beginner\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"SkillsWithProgress\",\r\n      componentType: 'SkillsWithProgress',\r\n      path: \"SkillsWithProgress/SkillsWithProgress\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { title: \"HTML\", proficiency: 80 },\r\n          { title: \"CSS\", proficiency: 80 },\r\n          { title: \"Javascript\", proficiency: \"70\" },\r\n          { title: \"React\", proficiency: 50 },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Divider\",\r\n      componentType: \"Divider\",\r\n      path: \"Divider/Divider\",\r\n      componentData: {\r\n        title: \"Divider\",\r\n        styles: [\r\n          {\r\n            type: \"select\",\r\n            label: \"Style\",\r\n            rule: \"borderStyle\",\r\n            value: \"solid\",\r\n            unit: \"\",\r\n            options: [\r\n              \"dotted\",\r\n              \"dashed\",\r\n              \"solid\",\r\n              \"double\",\r\n              \"groove\",\r\n              \"ridge\",\r\n              \"inset\",\r\n              \"outset\",\r\n              \"hidden\",\r\n            ],\r\n          },\r\n          { type: \"number\", label: \"Width\", rule: \"width\", value: \"100\", unit: \"%\" },\r\n          { type: \"number\", label: \"Height\", rule: \"borderWidth\", value: \"1\", unit: \"px\" },\r\n          { type: \"number\", label: \"Space Above\", rule: \"marginTop\", value: \"5\", unit: \"px\" },\r\n          { type: \"number\", label: \"Space Below\", rule: \"marginBottom\", value: \"5\", unit: \"px\" },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n}\r\n};\r\n\r\nexport const colors = ['#000000', '#ffffff', '#483d8b', '#f0f8ff', '#2f4f4f', '#bdb76b', '#183141', '#ffd700', '#D9E2E9', '#141428', '#94AA9E', '#B5282E', '#808000', '#191970', '#FBECD7', '#dc143c' ];\r\n\r\n\r\nexport const fontSizes = [\r\n  {\r\n    value: \"x-small\",\r\n    label: \"XS\",\r\n  },\r\n  {\r\n    value: \"small\",\r\n    label: \"S\",\r\n  },\r\n  {\r\n    value: \"medium\",\r\n    label: \"M\",\r\n  },\r\n  {\r\n    value: \"large\",\r\n    label: \"L\",\r\n  },\r\n  {\r\n    value: \"larger\",\r\n    label: \"XL\",\r\n  }\r\n];\r\n\r\nexport const headingAlignment = [\r\n  {\r\n    value: \"left\",\r\n    label: \"Left\",\r\n  },\r\n  {\r\n    value: \"center\",\r\n    label: \"Center\",\r\n  },\r\n  {\r\n    value: \"right\",\r\n    label: \"Right\",\r\n  }\r\n];","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\nimport { initialData } from \"../globals\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    userData: null,\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getUserDataByUserId = createAsyncThunk(\r\n  'resume/getUserDataByUserId',\r\n  async (userId, thunkAPI) => {\r\n      \r\n    const response = await (await firebase.firestore().collection('users').doc(userId).get()).data();\r\n    return response;\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateUserResumeDataByUserId = createAsyncThunk(\r\n  'resume/updateUserDataByUserId',\r\n  async (apiData, thunkAPI) => {\r\n      \r\n    await firebase.firestore()\r\n    .collection(\"users\")\r\n    .doc(`${apiData.userId}`)\r\n    .update({\r\n      userResumes: apiData.data,\r\n    });\r\n    return apiData.data;\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const deleteResumeByResumeId = createAsyncThunk(\r\n  'resume/deleteResumeByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n      \r\n    firebase.firestore()\r\n      .collection(\"resumes\")\r\n      .doc(`${resumeId}`)\r\n      .delete();\r\n  }\r\n)\r\n\r\nexport const copyResumeByResumeId = createAsyncThunk(\r\n  'resume/copyResumeByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n\r\n    const response = await (await firebase.firestore().collection('resumes').doc(apiData.resumeId).get()).data();\r\n    await firebase.firestore()\r\n      .collection(\"resumes\")\r\n      .doc(`${apiData.uniqueId}`)\r\n      .set({\r\n        resumeJson: response.resumeJson,\r\n        resumeSettings: response.resumeSettings\r\n    });\r\n\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// create the thunk\r\nexport const createNewReumseByUserId = createAsyncThunk(\r\n  'resume/createNewReumseByUserId',\r\n  async (apiData, thunkAPI) => {\r\n    console.log(apiData);\r\n    const userResumeData = [\r\n      {\r\n        resumeName: `Resume ${apiData.data.length + 1}`,\r\n        resumeId: `${apiData.uniqueId}`,\r\n        resumeImage: \"\"\r\n      }\r\n    ];\r\n\r\n    const newResumesArr = [...apiData.data, ...userResumeData];\r\n\r\n    initialData.resumeJson.header.filter(\r\n      (item) => item.name === \"BasicInfo\"\r\n    )[0].componentData = {\r\n      fullName: apiData.userData.name,\r\n      email: apiData.userData.email,\r\n      website: \"www.example.com\",\r\n      phone: \"1234567890\",\r\n      address: \"123, ABC Street, XYZ City, ABC State, 123456\",\r\n    };\r\n    await firebase.firestore()\r\n      .collection(\"resumes\")\r\n      .doc(`${apiData.uniqueId}`)\r\n      .set({\r\n        resumeJson: JSON.stringify(initialData.resumeJson),\r\n        resumeSettings: JSON.stringify(initialData.resumeSettings)\r\n    });\r\n    await (await firebase.firestore().collection(\"users\").doc(apiData.userData.userId).update({userResumes: JSON.stringify(newResumesArr)}));\r\n    return newResumesArr; \r\n  }\r\n)\r\n  \r\n\r\nexport const userDataSlice = createSlice({\r\n    name: 'userDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateUserDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.userData));\r\n            state.userData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getUserDataByUserId.fulfilled, (state, action) => {\r\n            state.userData = action.payload;\r\n        });\r\n\r\n        builder.addCase(createNewReumseByUserId.fulfilled, (state, action) => {\r\n          state.userData.userResumes = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateUserResumeDataByUserId.fulfilled, (state, action) => {\r\n          state.userData.userResumes = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateUserDataReducer } = userDataSlice.actions;  \r\n\r\nexport default userDataSlice.reducer;","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { GithubPicker } from 'react-color';\r\nimport { fontSizes, colors } from '../../globals.js';\r\nimport FormatAlignLeftOutlinedIcon from '@mui/icons-material/FormatAlignLeftOutlined';\r\nimport FormatAlignCenterOutlinedIcon from '@mui/icons-material/FormatAlignCenterOutlined';\r\nimport FormatAlignRightOutlinedIcon from '@mui/icons-material/FormatAlignRightOutlined';\r\n\r\nimport \"./GlobalResumeSetting.css\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst GlobalResumeSetting = (props) => {\r\n\r\n  const [colorsToggles, setColorsToggles] = useState({\r\n    headerFontColorToggle: false,\r\n    headingFontColorToggle: false,\r\n    subheadingFontColorToggle: false,\r\n    bodyFontToggle: false,\r\n    headerBackgroundColorToggle: false,\r\n    sidebarBackgroundColorToogle: false,\r\n    sidebarHeadingColorToggle: false,\r\n    mainBackgroundColorToggle: false,\r\n  });\r\n\r\n  const closeEditor = () => {\r\n    props.setShowEditorSection(false);\r\n  };\r\n\r\n  const changeFontColor = (property, color) => {\r\n    const root = document.querySelector(\":root\");\r\n    root.style.setProperty(property, color)\r\n  }\r\n\r\n  const changeAboutSectionFontColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, aboutSectionFontColor: color.hex });\r\n    openColorToggle('headerFontColorToggle');\r\n    changeFontColor(\"--color-font-about-section\", color.hex);\r\n  }\r\n\r\n  const changeHeadingFontColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, headingFontColor: color.hex });\r\n    changeFontColor(\"--color-font-heading\", color.hex);\r\n    openColorToggle('headingFontColorToggle');\r\n  }\r\n\r\n  const changeSubheadingFontColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, subheadingFontColor: color.hex });\r\n    changeFontColor(\"--color-font-subheading\", color.hex);\r\n    openColorToggle('subheadingFontColorToggle');\r\n  }\r\n\r\n  const changeBodyFontColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, bodyFontColor: color.hex });\r\n    changeFontColor(\"--color-font-body\", color.hex);\r\n    openColorToggle('bodyFontColorToggle');\r\n  }\r\n\r\n  const changeHeaderBackgroundColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, headerBackgroundColor: color.hex });\r\n    openColorToggle('headerBackgroundColorToggle');\r\n  }\r\n\r\n  const changeSidebarBackgroundColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, sidebarBackgroundColor: color.hex });\r\n    openColorToggle('sidebarBackgroundColorToggle');\r\n  }\r\n\r\n  const changeSidebarBodyColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, sidebarBodyColor: color.hex });\r\n    changeFontColor(\"--color-sidebar-body\", color.hex);\r\n    openColorToggle('sidebarBodyColorToggle');\r\n  }\r\n\r\n  const changeSidebarHeadingColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, sidebarHeadingColor: color.hex });\r\n    changeFontColor(\"--color-sidebar-heading\", color.hex);\r\n    openColorToggle('sidebarHeadingColorToggle');\r\n  }\r\n\r\n  const changeMainBackgroundColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, mainBackgroundColor: color.hex });\r\n    openColorToggle('mainBackgroundColorToggle');\r\n  }\r\n\r\n  const changeHeadingFont = (e, size) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, headingFontSize: size });\r\n  }\r\n\r\n  const changeSubheadingFont = (e, size) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, subheadingFontSize: size });\r\n  }\r\n\r\n  const changeBodyFont = (e, size) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, bodyFontSize: size });\r\n  }\r\n\r\n  const changeHeadingAlignment = (e, alignment) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, headingAlignment: alignment });\r\n  }\r\n\r\n  const onSave = () => {\r\n    props.updateGlobalSetting(props.resumeSettings);\r\n    closeEditor();\r\n  }\r\n\r\n  const openColorToggle = (colorToggleProp) => {\r\n    setColorsToggles({ ...colorsToggles, [colorToggleProp]: !colorsToggles[colorToggleProp] });\r\n  }\r\n\r\n  const changeSidebarPosition = (e, position) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, sidebarPosition: position });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"resume-setting-wrap\">\r\n\r\n      <div className=\"resume-setting-section\">\r\n        <div className=\"resume-setting-section-header\">\r\n          <Button size=\"small\" variant=\"contained\" onClick={onSave}>Save Changes</Button>\r\n          <Button size=\"small\" variant=\"outlined\" onClick={closeEditor}>Cancel</Button>\r\n        </div>\r\n\r\n        {/* ABOUT SECTION SETTING */}\r\n        <div className=\"resume-setting-heading\">\r\n          <span>Resume Header Section</span>\r\n        </div>\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Font Color\r\n            <Box className='resume-setting-selected-color' onClick={() => { openColorToggle('headerFontColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.aboutSectionFontColor }}></Box>\r\n          </span>\r\n          <div className={`resume-setting-item-body ${colorsToggles.headerFontColorToggle === true ? '' : 'd-none'}`}>\r\n            <GithubPicker color={props.resumeSettings.aboutSectionFontColor} onChangeComplete={changeAboutSectionFontColor} colors={colors} triangle=\"hide\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Background Color\r\n            <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headerBackgroundColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.headerBackgroundColor }}></Box>\r\n          </span>\r\n          <div className={`resume-setting-item-body ${colorsToggles.headerBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n            <GithubPicker color={props.resumeSettings.headerBackgroundColor} onChangeComplete={changeHeaderBackgroundColor} colors={colors} triangle=\"hide\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"resume-setting-section\">\r\n        <div className=\"resume-setting-heading\">\r\n          <span>Resume Main Section</span>\r\n        </div>\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Heading Font Color\r\n            <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headingFontColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.headingFontColor }}></Box>\r\n          </span>\r\n          <div className={`resume-setting-item-body ${colorsToggles.headingFontColorToggle === true ? '' : 'd-none'}`}>\r\n            <GithubPicker color={props.resumeSettings.headingFontColor} onChangeComplete={changeHeadingFontColor} colors={colors} triangle=\"hide\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Body Font Color\r\n            <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('bodyFontColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.bodyFontColor }}></Box>\r\n          </span>\r\n          <div className={`resume-setting-item-body ${colorsToggles.bodyFontColorToggle === true ? '' : 'd-none'}`}>\r\n            <GithubPicker color={props.resumeSettings.bodyFontColor} onChangeComplete={changeBodyFontColor} colors={colors} triangle=\"hide\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Background Color\r\n            <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('mainBackgroundColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.mainBackgroundColor }}></Box>\r\n          </span>\r\n          <div className={`resume-setting-item-body ${colorsToggles.mainBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n            <GithubPicker color={props.resumeSettings.mainBackgroundColor} onChangeComplete={changeMainBackgroundColor} colors={colors} triangle=\"hide\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"resume-setting-section\">\r\n        <div className=\"resume-setting-heading\">\r\n          <span>Resume Sidebar Section</span>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Heading Font Color\r\n            <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarHeadingColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.sidebarHeadingColor }}></Box>\r\n          </span>\r\n          <div className={`resume-setting-item-body ${colorsToggles.sidebarHeadingColorToggle === true ? '' : 'd-none'}`}>\r\n            <GithubPicker color={props.resumeSettings.sidebarHeadingColor} onChangeComplete={changeSidebarHeadingColor} colors={colors} triangle=\"hide\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Body Font Color\r\n            <Box className='resume-setting-selected-color' onClick={() => { openColorToggle('sidebarBodyColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.sidebarBodyColor }}></Box>\r\n          </span>\r\n          <div className={`resume-setting-item-body ${colorsToggles.sidebarBodyColorToggle === true ? '' : 'd-none'}`}>\r\n            <GithubPicker color={props.resumeSettings.sidebarBodyColor} onChangeComplete={changeSidebarBodyColor} colors={colors} triangle=\"hide\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Background Color\r\n            <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarBackgroundColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.sidebarBackgroundColor }}></Box>\r\n          </span>\r\n          <div className={`resume-setting-item-body ${colorsToggles.sidebarBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n            <GithubPicker color={props.resumeSettings.sidebarBackgroundColor} onChangeComplete={changeSidebarBackgroundColor} colors={colors} triangle=\"hide\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">Sidebar Position</span>\r\n          <div className=\"resume-setting-item-body\">\r\n            <div className={`font-size-div ${props.resumeSettings.sidebarPosition === 'left' ? 'active' : ''}`} onClick={(event) => changeSidebarPosition(event, 'left')}>Left</div>\r\n            <div className={`font-size-div ${props.resumeSettings.sidebarPosition === 'right' ? 'active' : ''}`} onClick={(event) => changeSidebarPosition(event, 'right')}>Right</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"resume-setting-section\">\r\n        <div className=\"resume-setting-heading\">\r\n          <span>Font Sizes</span>\r\n        </div>\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">Heading Font Size</span>\r\n          <div className=\"resume-setting-item-body\">\r\n            {fontSizes.map((font, index) => {\r\n              return (\r\n                <div key={index} className={`font-size-div ${props.resumeSettings.headingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeHeadingFont(event, font.value)}>{font.label}</div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">SubHeading Font Size</span>\r\n          <div className=\"resume-setting-item-body\">\r\n            {fontSizes.map((font, index) => {\r\n              return (\r\n                <div key={index} className={`font-size-div ${props.resumeSettings.subheadingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeSubheadingFont(event, font.value)}>{font.label}</div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">Body Font Size</span>\r\n          <div className=\"resume-setting-item-body\">\r\n            {fontSizes.map((font, index) => {\r\n              return (\r\n                <div key={index} className={`font-size-div ${props.resumeSettings.bodyFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeBodyFont(event, font.value)}>{font.label}</div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"resume-setting-section\">\r\n        <div className=\"resume-setting-heading\">\r\n          <span>Heading Styles</span>\r\n        </div>\r\n        <div className=\"resume-setting-item\">\r\n          <span className=\"resume-setting-item-label\">\r\n            Heading Alignment\r\n          </span>\r\n          <div className=\"resume-setting-item-body\">\r\n            <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'left' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'left')}>\r\n              <FormatAlignLeftOutlinedIcon></FormatAlignLeftOutlinedIcon>\r\n            </div>\r\n\r\n            <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'center' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'center')}>\r\n              <FormatAlignCenterOutlinedIcon></FormatAlignCenterOutlinedIcon>\r\n            </div>\r\n\r\n            <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'right' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'right')}>\r\n              <FormatAlignRightOutlinedIcon></FormatAlignRightOutlinedIcon>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Font Sizes</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Heading Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.headingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeHeadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headingFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.headingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={ props.resumeSettings.headingFontColor } onChangeComplete={changeHeadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Heading Alignment\r\n              </span>\r\n              <div className=\"resume-setting-item-body\">\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'left' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'left')}>\r\n                    <FormatAlignLeftOutlinedIcon></FormatAlignLeftOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'center' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'center')}>\r\n                    <FormatAlignCenterOutlinedIcon></FormatAlignCenterOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'right' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'right')}>\r\n                    <FormatAlignRightOutlinedIcon></FormatAlignRightOutlinedIcon>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Subheading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.subheadingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeSubheadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('subheadingFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.subheadingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.subheadingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.subheadingFontColor} onChangeComplete={changeSubheadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Body</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.bodyFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeBodyFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('bodyFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.bodyFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.bodyFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.bodyFontColor} onChangeComplete={changeBodyFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resume-setting-heading\">\r\n            <span>Backgrounds</span>\r\n          </div>\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Sidebar Background Color \r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarBackgroundColorToggle'); }} sx={{backgroundColor: props.resumeSettings.sidebarBackgroundColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.sidebarBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.sidebarBackgroundColor} onChangeComplete={changeSidebarBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(GlobalResumeSetting);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nconst AchievementEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [achievementItems, setAchievementItems] = useState(editorData.items);\r\n    const [showIcon, setShowIcon] = useState(editorData.showIcon);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowIconChange = (event) => {\r\n        setShowIcon(event.target.checked);\r\n    }\r\n\r\n\r\n    const onAchievementChange = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills[index] = { title: event.target.value };\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onAddAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setAchievementItems(skills);\r\n    }\r\n    const onDeleteAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index, 1);\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showIcon: showIcon, items: achievementItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Icon: <Switch label=\"Rounded\" onChange={onShowIconChange} checked={showIcon} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {achievementItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                        onChange={(event) => onAchievementChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        multiline\r\n                                        rows={2}\r\n                                        inputProps={{style: {fontSize: 14, lineHeight: 1.2}}}\r\n                                        style = {{width: 380}}\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddAchievement(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteAchievement(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!achievementItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default AchievementEditor;","import React, { useState } from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AchievementEditor from \"./AchievementEditor\";\r\n\r\nimport \"./Achievement.css\";\r\n\r\nconst Achievement = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling achievment', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-achievement\">\r\n      <div className=\"resume-section-title\">\r\n        <span>{props.componentItem.componentData.title}</span>\r\n        <span className=\"edit-component-icon\">\r\n          <EditIcon onClick={openEditor} />\r\n        </span>\r\n      </div> \r\n\r\n      <div className=\"achievement-item-wrap\">\r\n        {props.componentItem.componentData.items.map((item, index) => {\r\n          return (\r\n            <div key={`achievement-${index}`} className=\"achievement-item\">\r\n              <span className={`achievement-icon ${props.componentItem.componentData.showIcon ? '' : 'd-none'}`}>\r\n                <StarIcon />\r\n              </span>\r\n              <span className=\"achievement-summary\">\r\n                {item.title}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <AchievementEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Achievement);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst BasicInfoEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDataChange = (event, property) => {\r\n        const newName = event.target.value;\r\n        let newEditorData = {...editorData};\r\n        newEditorData = {...newEditorData, [property]: newName};\r\n        setEditorData(newEditorData);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth readOnly autoComplete='off' value='Basic Info' variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        <div className='editor-item' >\r\n                            <div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Full Name'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'fullName')}\r\n                                        value={editorData.fullName}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Current Role/Designation'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'currentRole')}\r\n                                        value={editorData.currentRole}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Email'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'email')}\r\n                                        value={editorData.email}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240} }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Phone'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'phone')}\r\n                                        value={editorData.phone}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Website'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'website')}\r\n                                        value={editorData.website}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Address'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'address')}\r\n                                        value={editorData.address}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BasicInfoEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport BasicInfoEditor from \"./BasicInfoEditor\";\r\n\r\nimport './BasicInfo.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }));\r\n\r\nconst BasicInfo = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <div className=\"resume-section resume-section-basic-info\">\r\n            {/* <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n            <span className=\"edit-component-icon\">\r\n                <EditIcon onClick={openEditor} />\r\n            </span> */}\r\n\r\n            <div className=\"basic-section-title\">\r\n                <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>\r\n            <p className=\"basic-info current-role\">{props.componentItem.componentData.currentRole}</p>\r\n            <div>\r\n            <Grid mt={1} \r\n            container \r\n            justifyContent=\"left\" \r\n            alignItems=\"center\" \r\n            rowSpacing={0.5} \r\n            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <PhoneIcon fontSize=\"15\"></PhoneIcon> \r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.phone}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <MailIcon fontSize=\"15\"></MailIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.email}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <LanguageIcon fontSize=\"15\"></LanguageIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.website}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <HomeIcon fontSize=\"15\"></HomeIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.address}</Box>\r\n                    </Item>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n\r\n            <BasicInfoEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(BasicInfo);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onEducationTitleChange = (event, index) => {\r\n        const newTitle = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], title: newTitle};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onUniversityChange = (event, index) => {\r\n        const newUniversity = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], university: newUniversity};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n\r\n    const onDateChange = (event, index) => {\r\n        const newDate = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], date: newDate};\r\n        console.log(educationItems);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onGpaChange = (event, index) => {\r\n        const newGPA = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], gpa: newGPA};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onAddEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index + 1, 0, { title: '', university: '', date: '', gpa: '' });\r\n        setEducationItems(newEducationItems);\r\n    }\r\n    const onDeleteEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index, 1);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        console.log('educationItems', educationItems);\r\n        setEditorData({ ...editorData, title: title,  items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            console.log('props', props);\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onEducationTitleChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onUniversityChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Date (From - To)'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onDateChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                placeholder='YYYY - YYYY'\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onGpaChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon onClick={(event) => onAddEducation(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon onClick={(event) => onDeleteEducation(event, index)}  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!educationItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;","import React, { useState } from \"react\";\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport EducationEditor from \"./EducationEditor\";\r\n\r\nimport './Education.css'\r\n\r\nconst Education = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling education', open);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-education\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>     \r\n            <div className=\"education-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div key={index} className=\"education-item\">\r\n                            <div className=\"resume-section-subtitle\">\r\n                                <span className=\"education-title full-width-field\">{item.title}</span>\r\n                                <span className=\"education-university full-width-field\">{item.university}</span>\r\n                            </div>\r\n                            <div className=\"section-meta\">\r\n                                {item.date && <div className=\"section-meta-item\">\r\n                                    <CalendarTodayIcon className=\"section-meta-icon resume-section-body\"></CalendarTodayIcon> \r\n                                    <div className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.date}</div>\r\n                                </div>}\r\n                                {item.gpa && <div className=\"section-meta-item\">\r\n                                    <SchoolIcon className=\"section-meta-icon resume-section-body\"></SchoolIcon>\r\n                                    <div className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.gpa}</div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <EducationEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(Education);","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst ExperienceEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [experienceItems, setExperienceItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"experienceItems\", experienceItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: experienceItems.filter(\r\n        (item, index) => item.experienceTitle.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onSummaryChange = (val, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      experienceSummary: val,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  }\r\n\r\n  const onAddExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index + 1, 0, {\r\n      experienceTitle: \"\",\r\n      company: \"\",\r\n      date: \"\",\r\n      location: \"\",\r\n      experienceSummary: \"\",\r\n    });\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index, 1);\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {experienceItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Job Role\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceTitle\")\r\n                        }\r\n                        value={item.experienceTitle}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Company\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"company\")\r\n                        }\r\n                        value={item.company}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Date (From - To)\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"date\")\r\n                        }\r\n                        value={item.date}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"location\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"location\")\r\n                        }\r\n                        value={item.location}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n\r\n                      <ReactQuill \r\n                      defaultValue={item.experienceSummary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onSummaryChange(val, index)\r\n                      } />\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddExperience(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!experienceItems.filter(item => item.experienceTitle.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExperienceEditor;\r\n","import React,{useState} from \"react\";\r\nimport {Box} from '@mui/material';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport './Experience.css'\r\nimport ExperienceEditor from \"./ExperienceEditor\";\r\n\r\n\r\nconst Experience = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    console.log('calling experience', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-experience\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n                </div>     \r\n            <div className=\"experience-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"experience-item\">\r\n                        <span className=\"experience-title full-width-field resume-section-subtitle\">{item.experienceTitle}</span>\r\n                        <div className=\"section-meta\">\r\n                            {item.company && <div className=\"section-meta-item\">\r\n                                <BusinessIcon fontSize=\"15\"></BusinessIcon> \r\n                                <Box component=\"span\" sx={{ pl: 1}}>{item.company}</Box>\r\n                            </div>}\r\n                            {item.date && <div className=\"section-meta-item\">\r\n                                <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                <Box component=\"span\" sx={{ pl: 1}}>{item.date}</Box>\r\n                            </div>}\r\n                            {item.location && <div className=\"section-meta-item\">\r\n                                <LocationOnIcon fontSize=\"15\"></LocationOnIcon>\r\n                                <Box component=\"span\" sx={{ pl: 1}}>{item.location}</Box>\r\n                            </div>}\r\n                        </div>\r\n                        <div className=\"experience-summary rich-text-div\" dangerouslySetInnerHTML={{__html: item.experienceSummary}}>\r\n\r\n                        </div>    \r\n                        \r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <ExperienceEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Experience);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst LanguagesEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [languageItems, setLanguageItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onLanguageChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages[index] = { language: event.target.value, proficiency: 'Beginner' };\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onAddLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index + 1, 0, { language: '' });\r\n        setLanguageItems(languages);\r\n    }\r\n    const onDeleteLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index, 1);\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        switch (event.target.value) {\r\n            case 25:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        \r\n            case 50:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Intermediate'};\r\n                break;\r\n            \r\n            case 75:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Proficient'};\r\n                break;\r\n\r\n            case 100:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Native'};\r\n                break;     \r\n            default:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        }\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: languageItems.filter((item, index) => item.language.length > 0) });\r\n        closeEditor();\r\n        setFirstTime(true);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    const getProficiencyValue = (prof) => {\r\n        let val = 25;\r\n        switch (prof) {\r\n            case 'Beginner':\r\n                val = 25;\r\n                break;\r\n        \r\n            case 'Intermediate':\r\n                val = 50;\r\n                break;\r\n            \r\n            case 'Proficient':\r\n                val = 75;\r\n                break;\r\n\r\n            case 'Native':\r\n                val = 100;\r\n                break;     \r\n            default:\r\n                val = 25\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {languageItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onLanguageChange(event, index)}\r\n                                        value={item.language}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ getProficiencyValue(item.proficiency) }\r\n                                            step={25}\r\n                                            marks\r\n                                            min={25}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddLanguage(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteLanguage(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!languageItems.filter(item => item.language.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LanguagesEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport LanguagesEditor from \"./LanguagesEditor\";\r\n\r\nimport \"./Languages.css\";\r\n\r\nconst Languages = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling languages', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  const getProgressFromProficiency = (proficiency) => {\r\n    let val = 25;\r\n    switch (proficiency) {\r\n        case 'Beginner':\r\n            val = 25;\r\n            break;\r\n    \r\n        case 'Intermediate':\r\n            val = 50;\r\n            break;\r\n        \r\n        case 'Proficient':\r\n            val = 75;\r\n            break;\r\n\r\n        case 'Native':\r\n            val = 100;\r\n            break;     \r\n        default:\r\n            val = 25\r\n            break;\r\n    }\r\n    return val;\r\n  }\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n            <EditIcon onClick={openEditor} />\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"language-wrapper\">\r\n          <div className=\"language-header\">\r\n              <div className=\"language-title\">{item.language}</div>\r\n              <div className={`language-level ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"language-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={ getProgressFromProficiency(item.proficiency) } />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n\r\n      <LanguagesEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Languages);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [professionalSummaryItems, setprofessionalSummaryItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"professionalSummaryItems\", professionalSummaryItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: professionalSummaryItems.filter(\r\n        (item, index) => item.summary.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (val, index, property) => {\r\n    const newValue = val;\r\n    let newprofessionalSummaryItems = [...professionalSummaryItems];\r\n    newprofessionalSummaryItems[index] = {\r\n      ...newprofessionalSummaryItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setprofessionalSummaryItems(newprofessionalSummaryItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {professionalSummaryItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n\r\n                    <ReactQuill \r\n                      defaultValue={item.summary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onFieldChange(val, index, \"summary\")\r\n                      } />\r\n                    </div>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!professionalSummaryItems.filter(item => item.summary.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React,{useState} from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport ProfessionalSummaryEditor from \"./ProfessionalSummaryEditor\";\r\n\r\nimport \"./ProfessionalSummary.css\";\r\n\r\nconst ProfessionalSummary = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log(\"calling ProfessionalSummary\", open);\r\n\r\n  const openEditor = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n<div className=\"resume-section resume-section-professional-summary\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"professional-summary-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='professional-summary-item' key={index}>\r\n                             <span className=\"professional-summary-summary-body rich-text-div\" dangerouslySetInnerHTML={{__html: item.summary}}></span>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <ProfessionalSummaryEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(ProfessionalSummary);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillItems, setSkillItems] = useState(editorData.items);\r\n    const [rounded, setRounded] = useState(editorData.rounded);\r\n    const [filled, setFilled] = useState(editorData.filled);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onRoundedChange = (event) => {\r\n        setRounded(event.target.checked);\r\n    }\r\n\r\n    const onFilledChange = (event) => {\r\n        setFilled(event.target.checked);\r\n    }\r\n\r\n    const onSkillChange = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills[index] = { title: event.target.value };\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onAddSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setSkillItems(skills);\r\n    }\r\n    const onDeleteSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index, 1);\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, rounded: rounded, filled: filled, title: title, items: skillItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Rounded: <Switch label=\"Rounded\" onChange={onRoundedChange} checked={rounded} />\r\n                        </div>\r\n                        <div>\r\n                            Filled: <Switch label=\"Filled\" onChange={onFilledChange} checked={filled} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onSkillChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddSkill(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkill(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsEditor;","import React, {useState} from 'react';\r\nimport { Chip } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsEditor from \"./SkillsEditor\";\r\n\r\nimport './Skills.css'\r\nconst Skills = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling skills', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-skills\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"skills-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <Chip key={index} label={item.title} className={`resume-section-body skills-chip ${props.componentItem.componentData.rounded ? '' : 'no-rounded'}`} variant={props.componentItem.componentData.filled ? 'filled' : 'outlined'} />\r\n                );\r\n            })}\r\n            </div>\r\n\r\n\r\n            <SkillsEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Skills);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsWithProgressEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillsProgressItems, setSkillsProgressItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onskillsProgressItemsChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = { title: event.target.value, proficiency: 0 };\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onAddSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index + 1, 0, { title: '', proficiency: 0 });\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n    const onDeleteSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index, 1);\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = {title: newSkillsProgressItems[index].title, proficiency: event.target.value};\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: skillsProgressItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillsProgressItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onskillsProgressItemsChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ Number(item.proficiency) }\r\n                                            step={10}\r\n                                            marks\r\n                                            min={0}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddSkills(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkills(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillsProgressItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsWithProgressEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsWithProgressEditor from \"./SkillsWithProgressEditor\";\r\n\r\nimport \"./SkillsWithProgress.css\";\r\n\r\nconst SkillsWithProgress = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling SkillsWith Progress Bar', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor} />\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className={props.componentItem.componentData.showProficiencyProgress ? 'skill-wrapper' : 'skill-wrapper min-margin'}>\r\n          <div className=\"skill-header\">\r\n              <div className=\"skill-title\">{item.title}</div>\r\n              <div className={`skill-percentage ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"skill-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={Number(item.proficiency)} />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n    <SkillsWithProgressEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(SkillsWithProgress);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [socialItems, setSocialItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"socialItems\", socialItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: socialItems.filter(\r\n        (item, index) => item.socialPlatform.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems[index] = {\r\n      ...newSocialItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onAddSocial = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index + 1, 0, {\r\n        socialPlatform: \"\",\r\n        username: \"\"\r\n    });\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index, 1);\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {socialItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Social Platform\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"socialPlatform\")\r\n                        }\r\n                        value={item.socialPlatform}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Username or URL\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"username\")\r\n                        }\r\n                        value={item.username}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddSocial(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!socialItems.filter(item => item.socialPlatform.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React, {useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SocialEditor from \"./SocialEditor\";\r\n\r\nimport './Social.css'\r\nconst Social = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling Social', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-Social\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"social-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='social-item' key={index}>\r\n                            <div className='social-platform resume-section-subtitle'>{item.socialPlatform}</div>\r\n                            <div className='social-username'>{item.username}</div>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n            <SocialEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Social);","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { TextField, Button, MenuItem, Grid } from \"@mui/material\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nconst DividerEditor = (props) => {\r\n\tconst [editorData, setEditorData] = useState(props.editorData);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onSave = (event) => {\r\n\t\tdispatch(\r\n\t\t\tupdateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData })\r\n\t\t);\r\n\t\tcloseEditor();\r\n\t};\r\n\r\n\tconst closeEditor = () => {\r\n\t\tprops.setOpen(false);\r\n\t};\r\n\r\n\tconst onStyleChange = (style, value) => {\r\n\t\tif (style.type === \"number\") {\r\n\t\t\tif (!value) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t}\r\n\t\t\tif (value >= 0 && value <= 100) {\r\n\t\t\t\tupdateStyle(style, value);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tupdateStyle(style, value);\r\n\t\t}\r\n\t};\r\n\r\n\tfunction updateStyle(s, value) {\r\n\t\tconst widgetData = JSON.parse(JSON.stringify(editorData));\r\n\t\tconst style = widgetData.styles.find((style) => style.rule === s.rule);\r\n\t\tstyle.value = value;\r\n\t\tsetEditorData(widgetData);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog maxWidth=\"sm\" fullWidth={true} open={props.open} onClose={closeEditor}>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<div className=\"editor-wrap\">\r\n\t\t\t\t\t<div className=\"editor-heading-wrap\">\r\n\t\t\t\t\t\t<TextField fullWidth readOnly autoComplete=\"off\" variant=\"standard\" value={editorData.title} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"editor-options-wrap\">\r\n\t\t\t\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t\t\t\t{editorData.styles.map((style) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6} key={style.rule}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\ttype={style.type}\r\n\t\t\t\t\t\t\t\t\t\t\tselect={style.type === \"select\"}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={style.label + (style.unit ? ` (${style.unit})` : \"\")}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={style.value}\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{ inputProps: { min: 0, max: 100 } }}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => onStyleChange(style, event.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{style.type === \"select\" &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle.options.map((option) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={option} value={option}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={closeEditor}>Cancel</Button>\r\n\t\t\t\t<Button onClick={onSave}>Save</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default DividerEditor;\r\n","import React, { useState } from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DividerEditor from \"./DividerEditor\";\r\n\r\nimport \"./Divider.css\";\r\n\r\nconst Divider = (props) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tconst styles = {};\r\n\tprops.componentItem.componentData.styles.forEach((style) => {\r\n\t\tstyles[style.rule] = style.value + style.unit;\r\n\t});\r\n\r\n\tconst title = (\r\n\t\t<div className=\"resume-section-title border-none\">\r\n\t\t\t<span>{props.componentItem.componentData.title}</span>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"resume-section\">\r\n\t\t\t{props.componentColumn === \"componentLibrary\" && title}\r\n\r\n\t\t\t<span className=\"edit-component-icon\">\r\n\t\t\t\t<EditIcon onClick={(open) => setOpen(true)} />\r\n\t\t\t</span>\r\n\r\n\t\t\t<div className=\"divider-wrapper\">\r\n\t\t\t\t<hr style={styles} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<DividerEditor\r\n\t\t\t\topen={open}\r\n\t\t\t\tsetOpen={setOpen}\r\n\t\t\t\tcomponentColumn={props.componentColumn}\r\n\t\t\t\tcomponentName={props.componentItem.name}\r\n\t\t\t\teditorData={props.componentItem.componentData}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Divider);\r\n","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { Button, Box, Paper, Grid, Autocomplete, TextField, CircularProgress, Alert, Snackbar, LinearProgress } from '@mui/material';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getResumeDataByResumeId, updateResumeDataByResumeId } from '../../reducers/resumeDataSlice';\r\nimport { getResumeSettingsByResumeId, updateResumeSettingsByResumeId } from '../../reducers/resumeSettingsSlice';\r\nimport { getUserDataByUserId, updateUserResumeDataByUserId } from '../../reducers/userDataSlice';\r\n\r\nimport WebAssetOutlinedIcon from '@mui/icons-material/WebAssetOutlined';\r\nimport WebOutlinedIcon from '@mui/icons-material/WebOutlined';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@mui/icons-material/RemoveCircleOutlineOutlined';\r\nimport RemoveOutlinedIcon from '@mui/icons-material/RemoveOutlined';\r\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\r\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\r\nimport OpenWithIcon from '@mui/icons-material/OpenWith';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\r\nimport { useParams } from \"react-router-dom\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nimport './Builder.css'\r\nimport GlobalResumeSetting from \"../../components/GlobalResumeSetting/GlobalResumeSetting\";\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Achievement from '../../components/Achievements/Achievement'\r\nimport BasicInfo from '../../components/BasicInfo/BasicInfo'\r\nimport Education from '../../components/Education/Education'\r\nimport Experience from '../../components/Experience/Experience'\r\nimport Languages from '../../components/Languages/Languages';\r\nimport ProfessionalSummary from '../../components/ProfessionalSummary/ProfessionalSummary';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsWithProgress from '../../components/SkillsWithProgress/SkillsWithProgress';\r\nimport Social from '../../components/Social/Social';\r\nimport Divider from \"../../components/Divider/Divider\";\r\n\r\n\r\nfunction Builder() {\r\n  let resumeHTML;\r\n  const { authReducer, resumeDataReducer, resumeSettingsReducer, userDataReducer } = useSelector((state) => state);\r\n  const [arr, setItems] = useState(null);\r\n  const [pageTwo, setPageTwo] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showEditorSection, setShowEditorSection] = useState(false);\r\n  const [openSnackbar, setopenSnackbar] = useState(false);\r\n  const [resumeSettings, setResumeSettings] = useState(null);\r\n\r\n  let { resumeId } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const openEditorSection = () => {\r\n    setShowEditorSection(!showEditorSection);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('calling builder effect');\r\n    setItems(resumeDataReducer.resumeData);\r\n    setResumeSettings(resumeSettingsReducer.resumeSettings);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [resumeDataReducer]);\r\n\r\n  useEffect(() => {\r\n    if (authReducer.userId) {\r\n      console.log('calling builder auth effect');\r\n      getResumeData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n\r\n  function getResumeData() {\r\n    dispatch(getResumeDataByResumeId(resumeId)).then((res) => {\r\n      if (res.payload) {\r\n        setItems(res.payload);\r\n        console.log(res.payload);\r\n        setPageTwo(res.payload.pageTwo && res.payload.pageTwo.length > 0);\r\n      }\r\n    });\r\n\r\n    dispatch(getUserDataByUserId(authReducer.userId));\r\n\r\n    dispatch(getResumeSettingsByResumeId(resumeId)).then((res) => {\r\n      setResumeSettings(res.payload);\r\n      if (res.payload) {\r\n\r\n        // setTimeout(() => {\r\n        //   setopenSnackbar(true);\r\n        // }, 2000);\r\n\r\n        const root = document.querySelector(\":root\");\r\n        root.style.setProperty(\"--color-font-heading\", res.payload.headingFontColor);\r\n        root.style.setProperty(\"--color-font-subheading\", res.payload.subheadingFontColor);\r\n        root.style.setProperty(\"--color-font-body\", res.payload.bodyFontColor);\r\n        root.style.setProperty(\"--color-font-about-section\", res.payload.aboutSectionFontColor);\r\n        root.style.setProperty(\"--color-sidebar-body\", res.payload.sidebarBodyColor);\r\n        root.style.setProperty(\"--color-sidebar-heading\", res.payload.sidebarHeadingColor);\r\n\r\n\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateResumeData(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeDataByResumeId({ data: newData, resumeId: resumeId })).then((res) => {\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      checkForPageTwo(newData);\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  function updateGlobalSetting(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeSettingsByResumeId({ data: newData, resumeId: resumeId }));\r\n    }\r\n  }\r\n\r\n  const checkForPageTwo = (newData) => {\r\n    const paperheight = document.querySelector('#main .resume-paper-content').clientHeight;\r\n    const childs = document.querySelector('#main .resume-paper-content').children;\r\n    let height = 0;\r\n    for (var i = 0; i < childs.length; i++) {\r\n      height += childs[i].clientHeight;\r\n    }\r\n    if (height + 30 > paperheight) {\r\n      console.log('if- need Page two');\r\n      setPageTwo(true);\r\n\r\n      moveLastComponentToPageTwo(newData);\r\n    } else {\r\n      console.log('else-');\r\n      // setPageTwo(false);\r\n      console.log(paperheight, height);\r\n    }\r\n  }\r\n\r\n  const moveLastComponentToPageTwo = (newData) => {\r\n    let newArr = JSON.parse(JSON.stringify(newData));\r\n    newArr.pageTwo.push(newArr.main[newArr.main.length - 1]);\r\n    newArr.main.pop();\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const onSidebarSettingClick = () => {\r\n    if (resumeSettings.sidebar) {\r\n      const newArr = { ...arr, componentLibrary: [...arr['componentLibrary'], ...arr['sidebar']], sidebar: [] };\r\n      setItems(newArr);\r\n    }\r\n\r\n    setResumeSettings({ ...resumeSettings, sidebar: !resumeSettings.sidebar });\r\n    updateGlobalSetting({ ...resumeSettings, sidebar: !resumeSettings.sidebar });\r\n  }\r\n\r\n  const saveChanges = () => {\r\n    setIsLoading(true);\r\n    if (authReducer.userId) {\r\n      updateResumeData(arr);\r\n      updateResumeThumbnail();\r\n    }\r\n  }\r\n\r\n  const updateResumeThumbnail = () => {\r\n    const pageOneElement = document.querySelector(\"#pageOne\");\r\n    html2canvas(pageOneElement).then(function (canvas) {\r\n      const userResumesData = JSON.parse(userDataReducer.userData.userResumes);\r\n      userResumesData.filter(resume => resume.resumeId.toString() === resumeId.toString())[0].resumeImage = canvas.toDataURL(\"image/jpeg\");\r\n      dispatch(updateUserResumeDataByUserId({ userId: authReducer.userId, data: JSON.stringify(userResumesData) }));\r\n    });\r\n  }\r\n\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now())\r\n  }\r\n\r\n  const closeSnackBar = () => {\r\n    setopenSnackbar(false);\r\n  }\r\n\r\n  const copyComponent = (event, item, index, column) => {\r\n    item = { ...item, copy: true, name: `${item.name}-${getUniqueId()}` };\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index + 1, 0, item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const removeComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    newArr.componentLibrary.push(item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const addComponentToResume = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    newArr.main.push(item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const deleteComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n\r\n  const addResumePage = () => {\r\n    setPageTwo(true);\r\n    setTimeout(() => {\r\n      const body = document.getElementById('resumePageSeparator');\r\n      body.scrollIntoView({\r\n        behavior: 'smooth'\r\n      }, 300)\r\n    }, 200);\r\n  }\r\n\r\n  const removeResumePage = () => {\r\n    setPageTwo(false);\r\n\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    const mergedArr = [...newArr.componentLibrary, ...newArr.pageTwo];\r\n    newArr.componentLibrary = mergedArr;\r\n    newArr.pageTwo = [];\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    const { destination, source, draggableId } = result;\r\n    // if canceling the dragNdrop in between\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    // if rearranging in same column\r\n    if (destination.droppableId === source.droppableId) {\r\n      const newArr = Array.from(arr[source.droppableId]);\r\n      newArr.splice(source.index, 1);\r\n      newArr.splice(destination.index, 0, arr[destination.droppableId].filter(x => x.name === draggableId)[0]);\r\n\r\n      const colId = destination.droppableId;\r\n\r\n      const newColumn = {\r\n        ...arr,\r\n        [colId]: newArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    } else {\r\n      // Else if moving from sidebar to main column or vice-versa\r\n      const sourceId = source.droppableId;\r\n      const destId = destination.droppableId;\r\n      const sourceArr = Array.from(arr[source.droppableId]);\r\n      const destArr = Array.from(arr[destination.droppableId]);\r\n      // remove from source\r\n      sourceArr.splice(source.index, 1);\r\n      // add to destination\r\n      destArr.splice(destination.index, 0, arr[source.droppableId].filter(x => x.name === result.draggableId)[0]);\r\n      const newColumn = {\r\n        ...arr,\r\n        [sourceId]: sourceArr,\r\n        [destId]: destArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    }\r\n  }\r\n\r\n  function getComponent(componentType, item, columnName) {\r\n    switch (componentType) {\r\n      case 'Achievements':\r\n        return <Achievement componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'BasicInfo':\r\n        return <BasicInfo componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Experience':\r\n        return <Experience componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Education':\r\n        return <Education componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Languages':\r\n        return <Languages componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'ProfessionalSummary':\r\n        return <ProfessionalSummary componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Skills':\r\n        return <Skills componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'SkillsWithProgress':\r\n        return <SkillsWithProgress componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Social':\r\n        return <Social componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Divider':\r\n        return <Divider componentColumn={columnName} componentItem={item} />;\r\n\r\n        \r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  if (arr && resumeSettings) {\r\n    resumeHTML = <DragDropContext onDragEnd={onDragEnd}>\r\n      <Snackbar open={openSnackbar} autoHideDuration={5000} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} onClose={closeSnackBar} >\r\n        <Alert variant=\"filled\" severity=\"success\" color=\"primary\" sx={{ width: '100%' }}>\r\n          New Widgets Available. Try Out.\r\n        </Alert>\r\n      </Snackbar>\r\n      <div className=\"resume-paper-wrap\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={8}>\r\n            <div className=\"layout-options\">\r\n              <div className=\"layout-option-items\">\r\n                <div className=\"layout-option-item\">\r\n                  {\r\n                    resumeSettings.sidebar ?\r\n                      <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<WebAssetOutlinedIcon />} onClick={onSidebarSettingClick} >Single Column</Button>\r\n                      : <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<WebOutlinedIcon />} onClick={onSidebarSettingClick} >Sidebar</Button>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"layout-option-item\">\r\n                  {\r\n                    pageTwo ?\r\n                      <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<RemoveCircleOutlineOutlinedIcon />} onClick={removeResumePage} >Remove Page</Button>\r\n                      : <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<AddCircleOutlineOutlinedIcon />} onClick={addResumePage} >Add Page</Button>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"layout-option-item\">\r\n                  <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<SettingsOutlinedIcon />} onClick={openEditorSection}>Settings</Button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"layout-option-items\">\r\n                <div className=\"layout-option-item\">\r\n                  <Button\r\n                    onClick={window.print}\r\n                    startIcon={<FileDownloadOutlinedIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    disableElevation>\r\n                    Download\r\n                  </Button>\r\n                </div>\r\n                <div className=\"layout-option-item\">\r\n                  <Button className={isLoading ? 'item-disabled' : ''} color=\"primary\" variant=\"contained\" disableElevation size=\"small\" startIcon={<SaveOutlinedIcon />} onClick={saveChanges} >Save Changes</Button>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"resume-paper-container\" id=\"resumPaperContainer\">\r\n              <Paper className={`resume-paper heading-alignment-${resumeSettings.headingAlignment} heading-font-${resumeSettings.headingFontSize} subheading-font-${resumeSettings.subheadingFontSize} body-font-${resumeSettings.bodyFontSize}`} sx={{ fontSize: resumeSettings.bodyFontSize === 'medium' ? '15px' : resumeSettings.bodyFontSize }} elevation={3} >\r\n                <div id=\"pageOne\">\r\n                  <Grid item xs={12} id=\"header\" className={`${arr.header.length > 0 ? '' : 'no-padding'}`} sx={{ backgroundColor: resumeSettings.headerBackgroundColor, color: resumeSettings.aboutSectionFontColor }}>\r\n                    <Droppable droppableId=\"header\">\r\n                      {(provided, snapshot) => (\r\n                        <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                          {arr.header.map((item, index) => {\r\n                            return (\r\n                              <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                  <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                    {getComponent(item.componentType, item, 'header')}\r\n                                    <div className=\"overlay\">\r\n                                      <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                        <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                      </span>\r\n                                      <span className=\"copy-component\">\r\n                                        <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'header')} />\r\n                                      </span>\r\n                                      <span className=\"remove-component\">\r\n                                        <RemoveOutlinedIcon titleAccess=\"Remove From Resume\" onClick={(event) => removeComponent(event, item, index, 'header')} />\r\n                                      </span>\r\n                                      <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'header')} />\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                            );\r\n                          }\r\n                          )}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  </Grid>\r\n                  <div className={`resume-paper-main-content sidebar-${resumeSettings.sidebarPosition}`}>\r\n                    <Grid item xs={resumeSettings.sidebar ? 7 : 12} id=\"main\" className={`${arr.header.length > 0 ? '' : 'padding'}`} sx={{ backgroundColor: resumeSettings.mainBackgroundColor, color: resumeSettings.bodyFontColor }}>\r\n                      <Droppable droppableId=\"main\">\r\n                        {(provided, snapshot) => (\r\n                          <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                            {arr.main.map((item, index) => {\r\n                              return (\r\n                                <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                  {(provided, snapshot) => (\r\n                                    <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n\r\n                                      {getComponent(item.componentType, item, 'main')}\r\n                                      <div className=\"overlay\">\r\n                                        <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                          <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                        </span>\r\n                                        <span className=\"copy-component\">\r\n                                          <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'main')} />\r\n                                        </span>\r\n                                        <span className=\"remove-component\">\r\n                                          <RemoveOutlinedIcon titleAccess=\"Remove From Resume\" onClick={(event) => removeComponent(event, item, index, 'main')} />\r\n                                        </span>\r\n                                        <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                          <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'main')} />\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            }\r\n                            )}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </Grid>\r\n\r\n                    {resumeSettings.sidebar ?\r\n                      <Grid item xs={5} id=\"sidebar\" sx={{ backgroundColor: resumeSettings.sidebarBackgroundColor, color: resumeSettings.sidebarBodyColor }} className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                        <Droppable droppableId=\"sidebar\">\r\n                          {(provided, snapshot) => (\r\n                            <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content resume-paper-content-draggin-over sidebar-column' : 'resume-paper-content sidebar-column'}>\r\n                              {provided.isDragging}\r\n                              {arr.sidebar.map((item, index) => {\r\n                                return (\r\n                                  <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                      <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        key={item.name}>\r\n                                        {getComponent(item.componentType, item, 'sidebar')}\r\n                                        <div className=\"overlay\">\r\n                                          <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                            <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                          </span>\r\n                                          <span className=\"copy-component\">\r\n                                            <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'sidebar')} />\r\n                                          </span>\r\n                                          <span className=\"remove-component\">\r\n                                            <RemoveOutlinedIcon titleAccess=\"Remove From Resume\" onClick={(event) => removeComponent(event, item, index, 'sidebar')} />\r\n                                          </span>\r\n                                          <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                            <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'sidebar')} />\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n                                    )}\r\n                                  </Draggable>\r\n                                );\r\n                              }\r\n                              )}\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          )}\r\n                        </Droppable>\r\n                      </Grid> : null}\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n              <Box sx={{ height: 30 }} id='resumePageSeparator'></Box>\r\n              {pageTwo ?\r\n                <Paper className={`resume-paper heading-alignment-${resumeSettings.headingAlignment} heading-font-${resumeSettings.headingFontSize} subheading-font-${resumeSettings.subheadingFontSize} body-font-${resumeSettings.bodyFontSize}`} sx={{ fontSize: resumeSettings.bodyFontSize, color: resumeSettings.bodyFontColor }} elevation={3} >\r\n                  <div id=\"pageTwo\">\r\n                    <Grid item xs={12} className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                      <Droppable droppableId=\"pageTwo\">\r\n                        {(provided, snapshot) => (\r\n                          <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                            <Suspense fallback={<div>Loading</div>}>\r\n                              {arr.pageTwo.map((item, index) => {\r\n                                return (\r\n                                  <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                      <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        key={item.name}>\r\n\r\n                                        {getComponent(item.componentType, item, 'pageTwo')}\r\n                                        <div className=\"overlay\">\r\n                                          <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                            <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                          </span>\r\n                                          <span className=\"copy-component\">\r\n                                            <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'pageTwo')} />\r\n                                          </span>\r\n                                          <span className=\"remove-component\">\r\n                                            <RemoveOutlinedIcon titleAccess=\"Remove From Resume\" onClick={(event) => removeComponent(event, item, index, 'pageTwo')} />\r\n                                          </span>\r\n                                          <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                            <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'pageTwo')} />\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n                                    )}\r\n                                  </Draggable>\r\n                                );\r\n                              }\r\n                              )}\r\n                              {provided.placeholder}\r\n                            </Suspense>\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </Grid>\r\n                  </div>\r\n                </Paper>\r\n                : null}\r\n            </div>\r\n          </Grid>\r\n          {!showEditorSection ?<Grid className=\"component-library-wrap\" item xs={4}>\r\n            <div className=\"component-library-header\">\r\n              <div>\r\n                <span className=\"component-library-title\">All Widgets</span>\r\n              </div>\r\n              <Autocomplete\r\n                id=\"component-library-filter\"\r\n                options={[\r\n                  { label: 'Education', id: 1 },\r\n                  { label: 'Skills', id: 2 },\r\n                ]}\r\n                sx={{ width: 150 }}\r\n                renderInput={(params) => <TextField {...params} placeholder=\"Filter\" variant=\"standard\" />}\r\n              />\r\n            </div>\r\n            <Paper style={{ padding: '20px' }} className=\"widget-library\" elevation={0}>\r\n\r\n              <Droppable droppableId=\"componentLibrary\">\r\n                {(provided, snapshot) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                    {provided.isDragging}\r\n                    <Suspense fallback={<div>Loading</div>}>\r\n                      {arr.componentLibrary.map((item, index) => {\r\n                        return (\r\n                          <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                            {(provided, snapshot) => (\r\n                              <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                key={item.name}>\r\n\r\n                                {getComponent(item.componentType, item, 'componentLibrary')}\r\n                                <div className=\"overlay\">\r\n                                  <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                    <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                  </span>\r\n                                  <span className=\"copy-component\">\r\n                                    <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'componentLibrary')} />\r\n                                  </span>\r\n                                  <span className=\"remove-component\">\r\n                                    <AddOutlinedIcon titleAccess=\"Add to Resume\" onClick={(event) => addComponentToResume(event, item, index, 'componentLibrary')} />\r\n                                  </span>\r\n                                  <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                    <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'componentLibrary')} />\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      }\r\n                      )}\r\n                      {provided.placeholder}\r\n                    </Suspense>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </Paper>\r\n          </Grid> : <Grid className=\"setting-editor-container-wrap\" item xs={4}>\r\n            <div className=\"setting-editor-container\">\r\n              <GlobalResumeSetting\r\n                resumeSettings={resumeSettings}\r\n                setResumeSettings={setResumeSettings}\r\n                updateGlobalSetting={updateGlobalSetting}\r\n                setShowEditorSection={setShowEditorSection}>\r\n              </GlobalResumeSetting>\r\n            </div>\r\n          </Grid>\r\n          }\r\n          \r\n        </Grid>\r\n\r\n      </div>\r\n\r\n    </DragDropContext>;\r\n  } else {\r\n    resumeHTML = <div className=\"initial-loader\">\r\n      <CircularProgress />\r\n    </div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"builder-wrap\">\r\n      <LinearProgress className={isLoading ? '' : 'd-none'} color=\"primary\" />\r\n      {resumeHTML}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Builder;","export default __webpack_public_path__ + \"static/media/resume-2.edfc1b35.svg\";","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserDataByUserId, createNewReumseByUserId, updateUserResumeDataByUserId, deleteResumeByResumeId, copyResumeByResumeId } from '../../reducers/userDataSlice';\r\nimport { Button, Grid, CircularProgress, Box, LinearProgress, Dialog, DialogContent } from '@mui/material';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport CopyAllOutlinedIcon from '@mui/icons-material/CopyAllOutlined';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport ShareOutlinedIcon from '@mui/icons-material/ShareOutlined';\r\nimport resumeSvg from '../../assets/images/resume-2.svg';\r\nimport './Resumes.css'\r\n\r\nconst Resumes = () => {\r\n  const {authReducer} = useSelector((state) => state);\r\n  const [userData, setUserData] = useState(null);\r\n  const [userResumes, setUserResumes] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [previewResumeImageSrc, setPreviewResumeImageSrc] = useState('');\r\n  const history = useHistory();\r\n  const maxResumeNumber = 2;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(authReducer.userId) {\r\n      console.log('calling resume auth effect');\r\n      getUserData();\r\n    }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log('calling resume effect');\r\n  //   setUserData(userDataReducer.userData);\r\n  //   //setUserResumes(userDataReducer.userData.userResumes);\r\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [userDataReducer]);\r\n\r\n  const closeEditor = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const previewResume = (resumeImage) => {\r\n    setOpen(true);\r\n    setPreviewResumeImageSrc(resumeImage);\r\n  }\r\n\r\n\r\n  const getUserData = () => {\r\n    dispatch(getUserDataByUserId(authReducer.userId)).then((res) => {\r\n      if (res.payload) {\r\n        setUserData(res.payload);\r\n        setUserResumes(JSON.parse(res.payload.userResumes));\r\n      }\r\n    });\r\n  }\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now());\r\n  }\r\n\r\n  const createNewResume = () => {\r\n    setIsLoading(true);\r\n    const uniqueId = getUniqueId();\r\n\r\n    if (authReducer.userId) {\r\n      dispatch(createNewReumseByUserId({data:userResumes, userData: userData, uniqueId: uniqueId})).then((res) => {\r\n        setUserResumes(res.payload);\r\n        setIsLoading(false);\r\n        history.push(`builder/${uniqueId}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDeleteResume = (resumeId) => {\r\n    setIsLoading(true);\r\n    const userResumeData = JSON.parse(JSON.stringify(userResumes));\r\n    const newResumeData = userResumeData.filter((item) => item.resumeId !== resumeId);\r\n\r\n    dispatch(deleteResumeByResumeId(resumeId));\r\n    \r\n    setUserResumes(newResumeData);\r\n    dispatch(updateUserResumeDataByUserId({userId: authReducer.userId, data: JSON.stringify(newResumeData)})).then((res) => {\r\n      setIsLoading(false);\r\n    });\r\n\r\n  }\r\n\r\n  const onDuplicateResume = (resumeId) => {\r\n    setIsLoading(true);\r\n    dispatch(getUserDataByUserId(authReducer.userId)).then((res) => {\r\n      if (res.payload) {\r\n        if (JSON.parse(res.payload.userResumes).length < maxResumeNumber) {\r\n          const uniqueId = getUniqueId();\r\n          const userResumeData = JSON.parse(JSON.stringify(userResumes));\r\n          const copyFrom = userResumeData.filter((item) => item.resumeId === resumeId)[0];\r\n          userResumeData.push({\r\n            resumeId: uniqueId.toString(),\r\n            resumeName: `${copyFrom.resumeName} (copy)`,\r\n            resumeImage: copyFrom.resumeImage,\r\n          });\r\n          \r\n          dispatch(updateUserResumeDataByUserId({userId: authReducer.userId, data: JSON.stringify(userResumeData)}));\r\n          dispatch(copyResumeByResumeId({resumeId: resumeId, uniqueId: uniqueId})).then((res) => {\r\n            setUserResumes(userResumeData);\r\n            setIsLoading(false);\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n          setUserData(res.payload);\r\n          setUserResumes(JSON.parse(res.payload.userResumes));\r\n        }\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"user-resumes-wrap\">\r\n\r\n      <Dialog open={open} onClose={closeEditor} scroll='body'>\r\n        <DialogContent className=\"preview-dialog-content\">\r\n          <img alt=\"Resume Preview\" className=\"resume-preview\" src={previewResumeImageSrc}/>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n\r\n      <div className=\"resume-header\">\r\n        <h1>My Resumes</h1>\r\n        {userResumes && userResumes.length < maxResumeNumber && <Button\r\n            startIcon={<AddCircleOutlineOutlinedIcon />}\r\n            size=\"small\"\r\n            onClick={createNewResume}\r\n            variant=\"contained\"\r\n            color=\"primary\" \r\n            disableElevation\r\n            className=\"header-create-resume-button\">\r\n                New Resume\r\n        </Button>}\r\n      </div>\r\n      <LinearProgress className={isLoading ? '' : 'd-none'} color=\"primary\" />\r\n\r\n       \r\n      {userResumes ?\r\n        userResumes.length > 0 ?\r\n          <div className=\"user-resume-list-wrap\">\r\n            {\r\n              userResumes.map((item, index) => {\r\n                return (\r\n                    <div className='resume-item' key={index}>\r\n                      \r\n                      <div className=\"resume-thumbnail\" style={{backgroundImage: `url(${item.resumeImage})`}}> </div>\r\n                      <div className=\"resume-actions\">\r\n                        <div className=\"resume-action-item name\">\r\n                          <span>{item.resumeName}</span>\r\n                        </div>\r\n                        <div className=\"resume-action-item date\">\r\n                          <span>Feb 2, 2020 2.45 PM</span>\r\n                        </div>\r\n                        <Box sx={{height: '40px'}}></Box>\r\n                        {/* EDIT ACTION */}\r\n                        <div className=\"resume-action-item link\" onClick={() => { history.push(`builder/${item.resumeId}`); }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <EditOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Edit\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* COPY ACTION */}\r\n                        { userResumes.length < maxResumeNumber && \r\n                        <div className={`resume-action-item link ${isLoading ? 'item-disabled' : ''}`} onClick={() => { onDuplicateResume(item.resumeId); }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <CopyAllOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Duplicate\r\n                          </span>\r\n                        </div>\r\n                        }\r\n\r\n                        {/* PREVIEW ACTION */}\r\n                        <div className=\"resume-action-item link\" onClick={() => { previewResume(item.resumeImage); }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <VisibilityOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Preview\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* SHARE ACTION */}\r\n                        <div className=\"resume-action-item link\">\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <ShareOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Share\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* DELETE ACTION */}\r\n                        <div className=\"resume-action-item link\" onClick={() => { onDeleteResume(item.resumeId) }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <DeleteOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Delete\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n          :\r\n          <Grid\r\n            container\r\n            className=\"no-resume-wrap\"\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid \r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\" item xs={3}>\r\n              <div className=\"no-resume-text\">No resume created, please create one.</div>\r\n              <img className=\"no-resume-img\" alt=\"Create Resume\" src={resumeSvg} />\r\n            </Grid>   \r\n          </Grid>\r\n      :\r\n      <Grid\r\n            container\r\n            className=\"no-resume-wrap\"\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n              <CircularProgress />\r\n      </Grid>\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resumes;","import React from \"react\";\r\nimport { Container, Box } from \"@mui/material\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Box m=\"auto\" textAlign=\"center\">\r\n                <h1>Home</h1>\r\n            </Box> \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;","import './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport GlobalHeader from '../GlobalHeader/GlobalHeader';\r\nimport About from '../../pages/About/About';\r\nimport Contact from '../../pages/Contact/Contact';\r\nimport Builder from '../../pages/Builder/Builder';\r\nimport Resumes from '../../pages/Resumes/Resumes';\r\nimport Home from '../../pages/Home/Home';\r\n\r\nfunction App() {\r\nconst isSignedIn = useSelector(state => state.authReducer.isSignedIn);\r\n  return (\r\n      <Router>\r\n        <GlobalHeader/>\r\n          <Switch>\r\n            <Route path=\"/builder/:resumeId?\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Builder></Builder>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact/>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About/>\r\n            </Route>\r\n            <Route exact path=\"/resumes\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Resumes></Resumes>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home/>\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\n// Or Create your Own theme:\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#09915A'\r\n      },\r\n      // text: {\r\n      //   primary: 'rgba(0, 0, 0, 0.90)',\r\n      //   secondary: 'red',\r\n      // }\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        variants: [\r\n          {\r\n            props: { variant: 'space-40', color: 'primary' },\r\n            style: {\r\n              paddingLeft: '40px',\r\n              paddingRight: '40px'\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  export default theme;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authSlice from \"./authSlice\";\r\nimport userDataSlice from './userDataSlice';\r\nimport resumeDataSlice from \"./resumeDataSlice\";\r\nimport resumeSettingsSlice from \"./resumeSettingsSlice\";\r\n\r\n// export default combineReducers({\r\n//     authReducer: authReducer\r\n// });\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authReducer: authSlice,\r\n    userDataReducer: userDataSlice,\r\n    resumeDataReducer: resumeDataSlice,\r\n    resumeSettingsReducer: resumeSettingsSlice\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme'\nimport {store} from './reducers';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}