{"version":3,"sources":["logo.svg","reducers/authSlice.js","firebase.js","globals.js","components/Login/GoogleLogin.js","components/GlobalHeader/GlobalHeader.js","pages/About/About.js","pages/Contact/Contact.js","reducers/resumeDataSlice.js","reducers/resumeSettingsSlice.js","components/GlobalResumeSetting/GlobalResumeSetting.js","components/Achievements/AchievementEditor.js","components/Achievements/Achievement.js","components/BasicInfo/BasicInfoEditor.js","components/BasicInfo/BasicInfo.js","components/Education/EducationEditor.js","components/Education/Education.js","components/Experience/ExperienceEditor.js","components/Experience/Experience.js","components/Languages/LanguagesEditor.js","components/Languages/Languages.js","components/ProfessionalSummary/ProfessionalSummaryEditor.js","components/ProfessionalSummary/ProfessionalSummary.js","components/Skills/SkillsEditor.js","components/Skills/Skills.js","components/SkillsWithProgress/SkillsWithProgressEditor.js","components/SkillsWithProgress/SkillsWithProgress.js","components/Social/SocialEditor.js","components/Social/Social.js","pages/Builder/Builder.js","components/App/App.js","theme/index.js","reducers/index.js","index.js"],"names":["INITIAL_STATE","isSignedIn","localStorage","getItem","userId","name","email","authSlice","createSlice","initialState","reducers","signInAction","state","action","payload","signOutAction","actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","richEditorSettings","toolbar","initialData","resumeSettings","bodyFontSize","headingFontSize","subheadingFontSize","bodyFontColor","headingFontColor","subheadingFontColor","headerBackgroundColor","sidebarBackgroundColor","aboutSectionFontColor","headingAlignment","resumeJson","header","componentType","path","componentData","title","items","summary","main","university","date","gpa","showIcon","experienceTitle","company","location","experienceSummary","sidebar","filled","rounded","socialPlatform","username","pageTwo","showProficiency","showProficiencyProgress","proficiency","componentLibrary","language","colors","fontSizes","value","label","GoogleLogin","onAuthChange","isSignedInStatus","props","auth","currentUser","get","getId","getBasicProfile","getName","getEmail","getUniqueId","Math","floor","random","Date","now","onSignInClick","signIn","then","uniqueId","firestore","collection","doc","exists","setItem","getAuthResponse","id_token","history","replace","filter","item","fullName","website","phone","address","set","JSON","stringify","userResumes","catch","error","console","log","onSignOutClick","signOut","removeItem","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","this","className","CircularProgress","size","Button","onClick","variant","color","disableElevation","renderAuthButton","Component","mapDispatchToProps","connect","authReducer","withRouter","GlobalHeader","useLocation","pathname","Box","sx","flexGrow","AppBar","elevation","position","Toolbar","src","logo","alt","component","NavLink","to","exact","React","memo","About","Container","maxWidth","m","textAlign","Contact","getResumeDataByUserId","createAsyncThunk","thunkAPI","a","data","response","parse","updateResumeDataByUserId","apiData","update","getResumeDataByResumeId","resumeId","updateResumeDataByResumeId","resumeDataSlice","resumeData","loading","updateResumeDataReducer","column","extraReducers","builder","addCase","fulfilled","getResumeSettingsByResumeId","updateResumeSettingsByResumeId","resumeSettingsSlice","updateSettingsDataReducer","GlobalResumeSetting","useState","headerFontColorToggle","headingFontColorToggle","subheadingFontColorToggle","bodyFontToggle","headerBackgroundColorToggle","sidebarBackgroundColorToogle","colorsToggles","setColorsToggles","closeEditor","setOpen","changeFontColor","property","document","querySelector","style","setProperty","changeHeadingAlignment","e","alignment","setResumeSettings","openColorToggle","colorToggleProp","Dialog","fullWidth","open","onClose","DialogContent","backgroundColor","onChangeComplete","hex","triangle","map","font","index","event","bodyFontColorToggle","sidebarBackgroundColorToggle","DialogActions","updateGlobalSetting","AchievementEditor","editorData","setEditorData","firstime","setFirstTime","setTitle","achievementItems","setAchievementItems","setShowIcon","dispatch","useDispatch","useEffect","componentName","componentColumn","TextField","autoComplete","onChange","newVal","target","Switch","checked","mb","mt","mr","skills","onAchievementChange","multiline","rows","inputProps","fontSize","lineHeight","width","splice","onAddAchievement","onDeleteAchievement","length","disabled","Achievement","componentItem","BasicInfoEditor","onDataChange","newName","newEditorData","readOnly","currentRole","Item","styled","theme","typography","caption","display","alignItems","BasicInfo","Grid","container","justifyContent","rowSpacing","columnSpacing","xs","sm","md","pl","EducationEditor","educationItems","setEducationItems","newTitle","newEducationItems","onEducationTitleChange","newUniversity","onUniversityChange","newDate","onDateChange","placeholder","newGPA","onGpaChange","onAddEducation","onDeleteEducation","height","Divider","palette","text","secondary","Education","ExperienceEditor","experienceItems","setExperienceItems","onFieldChange","newValue","newExperienceItems","defaultValue","modules","val","onSummaryChange","onAddExperience","onDeleteExperience","Experience","dangerouslySetInnerHTML","__html","LanguagesEditor","languageItems","setLanguageItems","setShowProficiency","setShowProficiencyProgress","getProficiencyValue","prof","onShowProficiencyChange","onShowProficiencyProgressChange","languages","onLanguageChange","Slider","step","marks","min","max","onProficiencyChange","onAddLanguage","onDeleteLanguage","Languages","getProgressFromProficiency","LinearProgress","SocialEditor","professionalSummaryItems","setprofessionalSummaryItems","newprofessionalSummaryItems","ProfessionalSummary","ProfessionalSummaryEditor","SkillsEditor","skillItems","setSkillItems","setRounded","setFilled","onSkillChange","onAddSkill","onDeleteSkill","Skills","Chip","SkillsWithProgressEditor","skillsProgressItems","setSkillsProgressItems","newSkillsProgressItems","onskillsProgressItemsChange","Number","onAddSkills","onDeleteSkills","SkillsWithProgress","socialItems","setSocialItems","newSocialItems","onAddSocial","Social","Builder","resumeHTML","useSelector","resumeDataReducer","resumeSettingsReducer","arr","setItems","setSidebar","setPageTwo","openSnackbar","setopenSnackbar","useParams","updateResumeData","newData","res","setTimeout","root","copyComponent","copy","newArr","deleteComponent","getComponent","columnName","onDragEnd","result","destination","source","draggableId","droppableId","Array","from","x","colId","newColumn","sourceId","destId","sourceArr","destArr","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","spacing","icon","mergedArr","getElementById","scrollIntoView","behavior","id","Paper","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","fallback","isDragging","draggableProps","key","dragHandleProps","Autocomplete","options","renderInput","params","padding","Link","underline","href","print","App","createTheme","primary","components","MuiButton","variants","paddingLeft","paddingRight","store","configureStore","reducer","ReactDOM","render","ThemeProvider"],"mappings":"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","file":"static/js/main.0f7d5b1a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn : (localStorage.getItem('token') == null) ? false : true,\r\n    userId: null,\r\n    name: null,\r\n    email: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        signInAction: (state, action) => {\r\n            state.isSignedIn = true;\r\n            state.userId = action.payload.userId;\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n        },\r\n        signOutAction: (state) => {\r\n            state.isSignedIn = false;\r\n            state.userId = null;\r\n            state.name = null;\r\n            state.email = null;\r\n        },\r\n    },\r\n  });\r\n  \r\nexport const { signInAction, signOutAction } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBjh7R7l6f9rTW8Oll_uzx2q50uJNWRjbU\",\r\n  authDomain: \"resume-builder-c4248.firebaseapp.com\",\r\n  projectId: \"resume-builder-c4248\",\r\n  storageBucket: \"resume-builder-c4248.appspot.com\",\r\n  messagingSenderId: \"790181104761\",\r\n  appId: \"1:790181104761:web:3f3e105c4d46cd7c09d8a8\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","export const richEditorSettings = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n    [{ 'color': [] }, { 'background': [] }],\r\n    ['link', 'image'],\r\n    ['clean']\r\n  ],\r\n};\r\n\r\nexport const initialData = {\r\n  resumeSettings: {\r\n    bodyFontSize: 'small',\r\n    headingFontSize: 'large',\r\n    subheadingFontSize: 'small',\r\n    bodyFontColor: '#000000',\r\n    headingFontColor: '#000000',\r\n    subheadingFontColor: '#000000',\r\n    headerBackgroundColor: '#ffffff',\r\n    sidebarBackgroundColor: '#ffffff',\r\n    aboutSectionFontColor: '#000000',\r\n    headingAlignment: 'left',\r\n  },\r\n  resumeJson: {\r\n  header: [\r\n      {\r\n          name: \"BasicInfo\",\r\n          componentType: 'BasicInfo',\r\n          path: \"BasicInfo/BasicInfo\"\r\n      },\r\n      {\r\n          name: \"ProfessionalSummary\",\r\n          componentType: 'ProfessionalSummary',\r\n          path: \"ProfessionalSummary/ProfessionalSummary\",\r\n          componentData: {\r\n              title: \"Professional Summary\",\r\n              items: [\r\n                {\r\n                  summary: \"This is summary body.\"\r\n                },\r\n              ],\r\n          }\r\n      }\r\n\r\n  ],\r\n  main: [\r\n    {\r\n      name: \"Education\",\r\n      componentType: 'Education',\r\n      path: \"Education/Education\",\r\n      componentData: {\r\n        title: \"Education\",\r\n        items: [\r\n          {\r\n            title: \"Executive MBA, Engineering Management\",\r\n            university: \"The University of Arizona\",\r\n            date: \"2010 - 2014\",\r\n            gpa: \"CGPA 09/10\",\r\n          },\r\n          {\r\n            title: \"Engineering Management\",\r\n            university: \"The University of California, Berkeley\",\r\n            date: \"2008 - 2010\",\r\n            gpa: \"CGPA 7.5/10\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Achievements\",\r\n      componentType: 'Achievements',\r\n      path: \"Achievements/Achievement\",\r\n      componentData: {\r\n        title: \"Achievements\",\r\n        showIcon: true,\r\n        items: [\r\n          {\r\n            title:\r\n              \"Won Best Employee Award for last 2 consecutive year (2020 & 2021). Won Best Employee Award for last 2 consecutive year (2020 & 2021).\",\r\n          },\r\n          { title: \"Won inter-zone cricket competition (2020). \" },\r\n          {\r\n            title: \"Runner up for state level table tennis competition (2020).\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Experience\",\r\n      componentType: 'Experience',\r\n      path: \"Experience/Experience\",\r\n      componentData: {\r\n        title: \"Experience\",\r\n        items: [\r\n          {\r\n            experienceTitle: \"Android Developer\",\r\n            company: \"Google\",\r\n            date: \"2018 - 2020\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 3 key projects of major clients.\",\r\n          },\r\n          {\r\n            experienceTitle: \"Front End Developer\",\r\n            company: \"Amazon\",\r\n            date: \"2014 - 2018\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 4 key projects of major clients.\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  sidebar: [\r\n    {\r\n      name: \"Skills\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"HTML\" },\r\n          { title: \"CSS\" },\r\n          { title: \"JavaScript\" },\r\n          { title: \"React\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Tools\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Tools\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [{ title: \"Git\" }, { title: \"Webpack\" }, { title: \"Gulp\" }],\r\n      },\r\n    },\r\n    {\r\n      name: \"Hobbies\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Hobbies\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"Reading\" },\r\n          { title: \"Swimming\" },\r\n          { title: \"Hiking\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Social\",\r\n      componentType: 'Social',\r\n      path: \"Social/Social\",\r\n      componentData: {\r\n        title: \"Social\",\r\n        items: [\r\n          {\r\n            socialPlatform: \"Github\",\r\n            username: \"@username\",\r\n          },\r\n          {\r\n            socialPlatform: \"LinkedIn\",\r\n            username: \"@username\",\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n  pageTwo: [\r\n    {\r\n      name: \"SkillsWithProgress\",\r\n      componentType: 'SkillsWithProgress',\r\n      path: \"SkillsWithProgress/SkillsWithProgress\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { title: \"HTML\", proficiency: 80 },\r\n          { title: \"CSS\", proficiency: 80 },\r\n          { title: \"Javascript\", proficiency: \"70\" },\r\n          { title: \"React\", proficiency: 50 },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n  componentLibrary: [\r\n    {\r\n      name: \"Languages\",\r\n      componentType: 'Languages',\r\n      path: \"Languages/Languages\",\r\n      componentData: {\r\n        title: \"Languages\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { language: \"English\", proficiency: \"Proficient\" },\r\n          { language: \"Hindi\", proficiency: \"Native\" },\r\n          { language: \"Spanish\", proficiency: \"Beginner\" },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n}\r\n};\r\n\r\nexport const colors = ['#000000', '#ffffff', '#483d8b', '#f0f8ff', '#2f4f4f', '#bdb76b', '#183141', '#ffd700', '#D9E2E9', '#141428', '#94AA9E', '#B5282E', '#808000', '#191970', '#FBECD7', '#dc143c' ];\r\n\r\n\r\nexport const fontSizes = [\r\n  {\r\n    value: \"x-small\",\r\n    label: \"XS\",\r\n  },\r\n  {\r\n    value: \"small\",\r\n    label: \"S\",\r\n  },\r\n  {\r\n    value: \"medium\",\r\n    label: \"M\",\r\n  },\r\n  {\r\n    value: \"large\",\r\n    label: \"L\",\r\n  },\r\n  {\r\n    value: \"larger\",\r\n    label: \"XL\",\r\n  }\r\n];\r\n\r\nexport const headingAlignment = [\r\n  {\r\n    value: \"left\",\r\n    label: \"Left\",\r\n  },\r\n  {\r\n    value: \"center\",\r\n    label: \"Center\",\r\n  },\r\n  {\r\n    value: \"right\",\r\n    label: \"Right\",\r\n  }\r\n];","import React, { Component } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAction, signOutAction } from \"../../reducers/authSlice.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport { initialData } from '../../globals.js';\r\n\r\nclass GoogleLogin extends Component {\r\n  // If not using arrow function then we need to bind `this` like below\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {isSignedIn: null};\r\n  //     this.onAuthChange = this.onAuthChange.bind(this)\r\n  // }\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"1051932499833-smce802vivdpiijmo5bg4donrr6n40fg.apps.googleusercontent.com\",\r\n          scope: \"email profile\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // listen for auth changes in future\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedInStatus) => {\r\n    if (isSignedInStatus) {\r\n      this.props.signInAction({\r\n        userId: this.auth.currentUser.get().getId(),\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n    } else {\r\n      this.props.signOutAction();\r\n    }\r\n  };\r\n\r\n  getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now())\r\n  }\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn().then(() => {\r\n      const uniqueId = this.getUniqueId();\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const name = this.auth.currentUser.get().getBasicProfile().getName();\r\n      const email = this.auth.currentUser.get().getBasicProfile().getEmail();\r\n      this.props.signInAction({\r\n        userId: userId,\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n\r\n      // If first time user then create a new resume\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .get()\r\n        .then((doc) => {\r\n          // Existing user then redirect else create a new resume\r\n          if (doc.exists) {\r\n            localStorage.setItem(\r\n              \"token\",\r\n              this.auth.currentUser.get().getAuthResponse().id_token\r\n            );\r\n            this.props.history.replace(\"builder\");\r\n          } else {\r\n            initialData.resumeJson.header.filter(\r\n              (item) => item.name === \"BasicInfo\"\r\n            )[0].componentData = {\r\n              fullName: name,\r\n              email: email,\r\n              website: \"www.example.com\",\r\n              phone: \"1234567890\",\r\n              address: \"123, ABC Street, XYZ City, ABC State, 123456\",\r\n            };\r\n            firebase\r\n              .firestore()\r\n              .collection(\"resumes\")\r\n              .doc(`${uniqueId}`)\r\n              .set({\r\n                resumeJson: JSON.stringify(initialData.resumeJson),\r\n                resumeSettings: JSON.stringify(initialData.resumeSettings)\r\n            });\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(`${userId}`)\r\n              .set({\r\n                userResumes: JSON.stringify([uniqueId]),\r\n                userId: userId,\r\n                name: name,\r\n                email: email,\r\n              })\r\n              .then(() => {\r\n                localStorage.setItem(\r\n                  \"token\",\r\n                  this.auth.currentUser.get().getAuthResponse().id_token\r\n                );\r\n                this.props.history.replace(`builder/${uniqueId}`);\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut().then(() => {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.signOutAction();\r\n    });\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return (\r\n        <div className=\"header-login-button-wrap\">\r\n          <CircularProgress className=\"login-loader\" size={18} />\r\n        </div>\r\n      );\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignOutClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignInClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Create Resume\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderAuthButton();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { signInAction, signOutAction };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(GoogleLogin));\r\n","import React from \"react\";\r\nimport {AppBar, Box, Toolbar, Button} from '@mui/material';\r\nimport logo from '../../logo.svg';\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport GoogleLogin from '../Login/GoogleLogin'\r\n\r\nimport './GlobalHeader.css'\r\n\r\nconst GlobalHeader = () => {\r\n    return (useLocation().pathname !== '/builder') ? (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar elevation={0} className=\"global-header\" color=\"transparent\" position=\"static\">\r\n                <Toolbar>\r\n                    <img src={logo} className=\"header-logo\" alt=\"Resume Builder\"/>\r\n                    <div className=\"header-logo-text\">\r\n                        <span>Resume Builder</span>\r\n                    </div>\r\n                    <nav>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/\"\r\n                            exact\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Home\r\n                        </Button>\r\n                        <Button \r\n                            component={NavLink}\r\n                            to=\"/about\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                About\r\n                        </Button>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/contact\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Contact\r\n                        </Button>\r\n                        <GoogleLogin></GoogleLogin>\r\n                    </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    ) : <span></span>\r\n}\r\n\r\nexport default  React.memo(GlobalHeader);","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>About</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>Contact</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeData: null, loading: 'idle',\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getResumeDataByUserId = createAsyncThunk(\r\n  'resume/getResumeDataByUserId',\r\n  async (userId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('users').doc(userId).get()).data();\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n);\r\n\r\nexport const updateResumeDataByUserId = createAsyncThunk(\r\n  'resume/updateResumeDataByUserId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"users\").doc(apiData.userId).update({resumeJson: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n);\r\n\r\nexport const getResumeDataByResumeId = createAsyncThunk(\r\n  'resume/getResumeDataByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n    console.log('calling api');\r\n    const response = await (await firebase.firestore().collection('resumes').doc(resumeId).get()).data();\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeDataByResumeId = createAsyncThunk(\r\n  'resume/updateResumeDataByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"resumes\").doc(apiData.resumeId).update({resumeJson: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n);\r\n  \r\n\r\nexport const resumeDataSlice = createSlice({\r\n    name: 'resumeDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateResumeDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeData));\r\n            data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getResumeDataByUserId.fulfilled, (state, action) => {\r\n            state.resumeData = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeDataByUserId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n        });\r\n\r\n        builder.addCase(getResumeDataByResumeId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeDataByResumeId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateResumeDataReducer } = resumeDataSlice.actions;  \r\n\r\nexport default resumeDataSlice.reducer;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeSettings: null,\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getResumeSettingsByResumeId = createAsyncThunk(\r\n  'resume/getResumeSettingsByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('resumes').doc(resumeId).get()).data();\r\n    return JSON.parse(response.resumeSettings);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeSettingsByResumeId = createAsyncThunk(\r\n  'resume/updateResumeSettingsByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"resumes\").doc(apiData.resumeId).update({resumeSettings: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n)\r\n  \r\n\r\nexport const resumeSettingsSlice = createSlice({\r\n    name: 'resumeSettingsSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateSettingsDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeSettings));\r\n            //data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getResumeSettingsByResumeId.fulfilled, (state, action) => {\r\n            state.resumeSettings = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeSettingsByResumeId.fulfilled, (state, action) => {\r\n          state.resumeSettings = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateSettingsDataReducer } = resumeSettingsSlice.actions;  \r\n\r\nexport default resumeSettingsSlice.reducer;","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { GithubPicker } from 'react-color';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { fontSizes, colors } from '../../globals.js';\r\nimport FormatAlignLeftOutlinedIcon from '@mui/icons-material/FormatAlignLeftOutlined';\r\nimport FormatAlignCenterOutlinedIcon from '@mui/icons-material/FormatAlignCenterOutlined';\r\nimport FormatAlignRightOutlinedIcon from '@mui/icons-material/FormatAlignRightOutlined';\r\n\r\nimport \"./GlobalResumeSetting.css\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst GlobalResumeSetting = (props) => {\r\n\r\n  const [colorsToggles, setColorsToggles] = useState({\r\n    headerFontColorToggle: false,\r\n    headingFontColorToggle: false,\r\n    subheadingFontColorToggle: false,\r\n    bodyFontToggle: false,\r\n    headerBackgroundColorToggle: false,\r\n    sidebarBackgroundColorToogle: false,\r\n  });\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const changeFontColor = (property, color) => {\r\n    const root = document.querySelector(\":root\");\r\n    root.style.setProperty(property, color)\r\n  }\r\n\r\n  const changeAboutSectionFontColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, aboutSectionFontColor: color.hex});\r\n    openColorToggle('headerFontColorToggle');\r\n    changeFontColor(\"--color-font-about-section\", color.hex);\r\n  }\r\n\r\n  const changeHeadingFontColor = (color) => {\r\n   props.setResumeSettings({...props.resumeSettings, headingFontColor: color.hex});\r\n   changeFontColor(\"--color-font-heading\", color.hex);\r\n   openColorToggle('headingFontColorToggle');\r\n  }\r\n\r\n  const changeSubheadingFontColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, subheadingFontColor: color.hex});\r\n    changeFontColor(\"--color-font-subheading\", color.hex);\r\n    openColorToggle('subheadingFontColorToggle');\r\n  }\r\n\r\n  const changeBodyFontColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, bodyFontColor: color.hex});\r\n    changeFontColor(\"--color-font-body\", color.hex);\r\n    openColorToggle('bodyFontColorToggle');\r\n  }\r\n\r\n  const changeHeaderBackgroundColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, headerBackgroundColor: color.hex});\r\n    openColorToggle('headerBackgroundColorToggle');\r\n  }\r\n\r\n  const changeSidebarBackgroundColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, sidebarBackgroundColor: color.hex});\r\n    openColorToggle('sidebarBackgroundColorToggle');\r\n  }\r\n  \r\n  const changeHeadingFont = (e, size) => {\r\n    props.setResumeSettings({...props.resumeSettings, headingFontSize: size});\r\n  }\r\n\r\n  const changeSubheadingFont = (e, size) => {\r\n    props.setResumeSettings({...props.resumeSettings, subheadingFontSize: size});\r\n  }\r\n\r\n  const changeBodyFont = (e, size) => {\r\n    props.setResumeSettings({...props.resumeSettings, bodyFontSize: size});\r\n  }\r\n\r\n  const changeHeadingAlignment = (e, alignment) => {\r\n    props.setResumeSettings({...props.resumeSettings, headingAlignment: alignment});\r\n  }\r\n\r\n  const onSave = () => {\r\n    props.updateGlobalSetting(props.resumeSettings);\r\n    closeEditor();\r\n  }\r\n\r\n  const openColorToggle = (colorToggleProp) => {\r\n    setColorsToggles({...colorsToggles, [colorToggleProp]: !colorsToggles[colorToggleProp]});\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"resume-setting-wrap\">\r\n\r\n        <div className=\"resume-setting-section\">\r\n          {/* ABOUT SECTION SETTING */}\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Resume Header Section</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className='resume-setting-selected-color'  onClick={() => { openColorToggle('headerFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.aboutSectionFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headerFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={ props.resumeSettings.aboutSectionFontColor } onChangeComplete={changeAboutSectionFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* HEADING FONTS SETTING */} \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Heading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.headingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeHeadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headingFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.headingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={ props.resumeSettings.headingFontColor } onChangeComplete={changeHeadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Heading Alignment\r\n              </span>\r\n              <div className=\"resume-setting-item-body\">\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'left' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'left')}>\r\n                    <FormatAlignLeftOutlinedIcon></FormatAlignLeftOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'center' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'center')}>\r\n                    <FormatAlignCenterOutlinedIcon></FormatAlignCenterOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'right' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'right')}>\r\n                    <FormatAlignRightOutlinedIcon></FormatAlignRightOutlinedIcon>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* SUBHEADING FONTS SETTING */} \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Subheading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.subheadingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeSubheadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('subheadingFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.subheadingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.subheadingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.subheadingFontColor} onChangeComplete={changeSubheadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* BODY FONTS SETTING */}      \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Body</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.bodyFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeBodyFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('bodyFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.bodyFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.bodyFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.bodyFontColor} onChangeComplete={changeBodyFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* BACKGROUNDS SETTING */}\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Backgrounds</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Header Background Color \r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headerBackgroundColorToggle'); }} sx={{backgroundColor: props.resumeSettings.headerBackgroundColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headerBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.headerBackgroundColor} onChangeComplete={changeHeaderBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Sidebar Background Color \r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarBackgroundColorToggle'); }} sx={{backgroundColor: props.resumeSettings.sidebarBackgroundColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.sidebarBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.sidebarBackgroundColor} onChangeComplete={changeSidebarBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave}>Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default  React.memo(GlobalResumeSetting);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nconst AchievementEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [achievementItems, setAchievementItems] = useState(editorData.items);\r\n    const [showIcon, setShowIcon] = useState(editorData.showIcon);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowIconChange = (event) => {\r\n        setShowIcon(event.target.checked);\r\n    }\r\n\r\n\r\n    const onAchievementChange = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills[index] = { title: event.target.value };\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onAddAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setAchievementItems(skills);\r\n    }\r\n    const onDeleteAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index, 1);\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showIcon: showIcon, items: achievementItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Icon: <Switch label=\"Rounded\" onChange={onShowIconChange} checked={showIcon} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {achievementItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                        onChange={(event) => onAchievementChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        multiline\r\n                                        rows={2}\r\n                                        inputProps={{style: {fontSize: 14, lineHeight: 1.2}}}\r\n                                        style = {{width: 380}}\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddAchievement(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteAchievement(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!achievementItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default AchievementEditor;","import React, { useState } from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AchievementEditor from \"./AchievementEditor\";\r\n\r\nimport \"./Achievement.css\";\r\n\r\nconst Achievement = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling achievment', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-achievement\">\r\n      <div className=\"resume-section-title\">\r\n        <span>{props.componentItem.componentData.title}</span>\r\n        <span className=\"edit-component-icon\">\r\n          <EditIcon onClick={openEditor} />\r\n        </span>\r\n      </div> \r\n\r\n      <div className=\"achievement-item-wrap\">\r\n        {props.componentItem.componentData.items.map((item, index) => {\r\n          return (\r\n            <div key={`achievement-${index}`} className=\"achievement-item\">\r\n              <span className={`achievement-icon ${props.componentItem.componentData.showIcon ? '' : 'd-none'}`}>\r\n                <StarIcon />\r\n              </span>\r\n              <span className=\"achievement-summary\">\r\n                {item.title}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <AchievementEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Achievement);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst BasicInfoEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDataChange = (event, property) => {\r\n        const newName = event.target.value;\r\n        let newEditorData = {...editorData};\r\n        newEditorData = {...newEditorData, [property]: newName};\r\n        setEditorData(newEditorData);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth readOnly autoComplete='off' value='Basic Info' variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        <div className='editor-item' >\r\n                            <div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Full Name'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'fullName')}\r\n                                        value={editorData.fullName}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Current Role/Designation'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'currentRole')}\r\n                                        value={editorData.currentRole}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Email'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'email')}\r\n                                        value={editorData.email}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240} }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Phone'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'phone')}\r\n                                        value={editorData.phone}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Website'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'website')}\r\n                                        value={editorData.website}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Address'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'address')}\r\n                                        value={editorData.address}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BasicInfoEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport BasicInfoEditor from \"./BasicInfoEditor\";\r\n\r\nimport './BasicInfo.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }));\r\n\r\nconst BasicInfo = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <div className=\"resume-section resume-section-basic-info\">\r\n            {/* <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n            <span className=\"edit-component-icon\">\r\n                <EditIcon onClick={openEditor} />\r\n            </span> */}\r\n\r\n            <div className=\"basic-section-title\">\r\n                <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>\r\n            <p className=\"basic-info current-role\">{props.componentItem.componentData.currentRole}</p>\r\n            <div>\r\n            <Grid mt={1} \r\n            container \r\n            justifyContent=\"left\" \r\n            alignItems=\"center\" \r\n            rowSpacing={0.5} \r\n            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <PhoneIcon fontSize=\"15\"></PhoneIcon> \r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.phone}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <MailIcon fontSize=\"15\"></MailIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.email}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <LanguageIcon fontSize=\"15\"></LanguageIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.website}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <HomeIcon fontSize=\"15\"></HomeIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.address}</Box>\r\n                    </Item>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n\r\n            <BasicInfoEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(BasicInfo);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onEducationTitleChange = (event, index) => {\r\n        const newTitle = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], title: newTitle};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onUniversityChange = (event, index) => {\r\n        const newUniversity = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], university: newUniversity};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n\r\n    const onDateChange = (event, index) => {\r\n        const newDate = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], date: newDate};\r\n        console.log(educationItems);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onGpaChange = (event, index) => {\r\n        const newGPA = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], gpa: newGPA};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onAddEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index + 1, 0, { title: '', university: '', date: '', gpa: '' });\r\n        setEducationItems(newEducationItems);\r\n    }\r\n    const onDeleteEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index, 1);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        console.log('educationItems', educationItems);\r\n        setEditorData({ ...editorData, title: title,  items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            console.log('props', props);\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onEducationTitleChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onUniversityChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Date (From - To)'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onDateChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                placeholder='YYYY - YYYY'\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onGpaChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon onClick={(event) => onAddEducation(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon onClick={(event) => onDeleteEducation(event, index)}  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!educationItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport EducationEditor from \"./EducationEditor\";\r\n\r\nimport './Education.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst Education = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling education', open);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-education\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>     \r\n            <div className=\"education-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div key={index} className=\"education-item\">\r\n                            <div className=\"resume-section-subtitle\">\r\n                                <span className=\"education-title full-width-field\">{item.title}</span>\r\n                                <span className=\"education-university full-width-field\">{item.university}</span>\r\n                            </div>\r\n                            <Grid\r\n                                container \r\n                                justifyContent=\"start\" \r\n                                alignItems=\"center\" \r\n                                rowSpacing={0.5} \r\n                                columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                                <Grid item md={4} xs={4} justifyContent=\"start\" alignItems=\"center\">\r\n                                    <Item>\r\n                                        <CalendarTodayIcon className=\"resume-section-body\"></CalendarTodayIcon> \r\n                                        <Box className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.date}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                                <Grid item md={4} xs={4} justifyContent=\"start\" alignItems=\"center\" >\r\n                                    <Item>\r\n                                        <SchoolIcon className=\"resume-section-body\"></SchoolIcon>\r\n                                        <Box className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.gpa}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <EducationEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(Education);","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst ExperienceEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [experienceItems, setExperienceItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"experienceItems\", experienceItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: experienceItems.filter(\r\n        (item, index) => item.experienceTitle.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onSummaryChange = (val, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      experienceSummary: val,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  }\r\n\r\n  const onAddExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index + 1, 0, {\r\n      experienceTitle: \"\",\r\n      company: \"\",\r\n      date: \"\",\r\n      location: \"\",\r\n      experienceSummary: \"\",\r\n    });\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index, 1);\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {experienceItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Job Role\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceTitle\")\r\n                        }\r\n                        value={item.experienceTitle}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Company\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"company\")\r\n                        }\r\n                        value={item.company}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Date (From - To)\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"date\")\r\n                        }\r\n                        value={item.date}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"location\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"location\")\r\n                        }\r\n                        value={item.location}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n\r\n                      <ReactQuill \r\n                      defaultValue={item.experienceSummary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onSummaryChange(val, index)\r\n                      } />\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddExperience(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!experienceItems.filter(item => item.experienceTitle.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExperienceEditor;\r\n","import React,{useState} from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport './Experience.css'\r\nimport ExperienceEditor from \"./ExperienceEditor\";\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }));\r\n\r\nconst Experience = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    console.log('calling experience', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-experience\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n                </div>     \r\n            <div className=\"experience-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"experience-item\">\r\n                        <span className=\"experience-title full-width-field resume-section-subtitle\">{item.experienceTitle}</span>\r\n                        <Grid\r\n                            container \r\n                            justifyContent=\"start\" \r\n                            alignItems=\"center\" \r\n                            rowSpacing={0.5} \r\n                            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <BusinessIcon fontSize=\"15\"></BusinessIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.company}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.date}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <LocationOnIcon fontSize=\"15\"></LocationOnIcon>\r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.location}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className=\"experience-summary rich-text-div\" dangerouslySetInnerHTML={{__html: item.experienceSummary}}>\r\n\r\n                        </div>    \r\n                        \r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <ExperienceEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Experience);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst LanguagesEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [languageItems, setLanguageItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onLanguageChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages[index] = { language: event.target.value, proficiency: 'Beginner' };\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onAddLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index + 1, 0, { language: '' });\r\n        setLanguageItems(languages);\r\n    }\r\n    const onDeleteLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index, 1);\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        switch (event.target.value) {\r\n            case 25:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        \r\n            case 50:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Intermediate'};\r\n                break;\r\n            \r\n            case 75:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Proficient'};\r\n                break;\r\n\r\n            case 100:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Native'};\r\n                break;     \r\n            default:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        }\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: languageItems.filter((item, index) => item.language.length > 0) });\r\n        closeEditor();\r\n        setFirstTime(true);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    const getProficiencyValue = (prof) => {\r\n        let val = 25;\r\n        switch (prof) {\r\n            case 'Beginner':\r\n                val = 25;\r\n                break;\r\n        \r\n            case 'Intermediate':\r\n                val = 50;\r\n                break;\r\n            \r\n            case 'Proficient':\r\n                val = 75;\r\n                break;\r\n\r\n            case 'Native':\r\n                val = 100;\r\n                break;     \r\n            default:\r\n                val = 25\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {languageItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onLanguageChange(event, index)}\r\n                                        value={item.language}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ getProficiencyValue(item.proficiency) }\r\n                                            step={25}\r\n                                            marks\r\n                                            min={25}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddLanguage(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteLanguage(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!languageItems.filter(item => item.language.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LanguagesEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport LanguagesEditor from \"./LanguagesEditor\";\r\n\r\nimport \"./Languages.css\";\r\n\r\nconst Languages = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling languages', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  const getProgressFromProficiency = (proficiency) => {\r\n    let val = 25;\r\n    switch (proficiency) {\r\n        case 'Beginner':\r\n            val = 25;\r\n            break;\r\n    \r\n        case 'Intermediate':\r\n            val = 50;\r\n            break;\r\n        \r\n        case 'Proficient':\r\n            val = 75;\r\n            break;\r\n\r\n        case 'Native':\r\n            val = 100;\r\n            break;     \r\n        default:\r\n            val = 25\r\n            break;\r\n    }\r\n    return val;\r\n  }\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"language-wrapper\">\r\n          <div className=\"language-header\">\r\n              <div className=\"language-title\">{item.language}</div>\r\n              <div className={`language-level ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"language-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={ getProgressFromProficiency(item.proficiency) } />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n\r\n      <LanguagesEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Languages);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [professionalSummaryItems, setprofessionalSummaryItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"professionalSummaryItems\", professionalSummaryItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: professionalSummaryItems.filter(\r\n        (item, index) => item.summary.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (val, index, property) => {\r\n    const newValue = val;\r\n    let newprofessionalSummaryItems = [...professionalSummaryItems];\r\n    newprofessionalSummaryItems[index] = {\r\n      ...newprofessionalSummaryItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setprofessionalSummaryItems(newprofessionalSummaryItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {professionalSummaryItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n\r\n                    <ReactQuill \r\n                      defaultValue={item.summary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onFieldChange(val, index, \"summary\")\r\n                      } />\r\n                    </div>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!professionalSummaryItems.filter(item => item.summary.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React,{useState} from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport ProfessionalSummaryEditor from \"./ProfessionalSummaryEditor\";\r\n\r\nimport \"./ProfessionalSummary.css\";\r\n\r\nconst ProfessionalSummary = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log(\"calling ProfessionalSummary\", open);\r\n\r\n  const openEditor = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n<div className=\"resume-section resume-section-professional-summary\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"professional-summary-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='professional-summary-item' key={index}>\r\n                             <span className=\"professional-summary-summary-body rich-text-div\" dangerouslySetInnerHTML={{__html: item.summary}}></span>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <ProfessionalSummaryEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(ProfessionalSummary);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillItems, setSkillItems] = useState(editorData.items);\r\n    const [rounded, setRounded] = useState(editorData.rounded);\r\n    const [filled, setFilled] = useState(editorData.filled);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onRoundedChange = (event) => {\r\n        setRounded(event.target.checked);\r\n    }\r\n\r\n    const onFilledChange = (event) => {\r\n        setFilled(event.target.checked);\r\n    }\r\n\r\n    const onSkillChange = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills[index] = { title: event.target.value };\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onAddSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setSkillItems(skills);\r\n    }\r\n    const onDeleteSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index, 1);\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, rounded: rounded, filled: filled, title: title, items: skillItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Rounded: <Switch label=\"Rounded\" onChange={onRoundedChange} checked={rounded} />\r\n                        </div>\r\n                        <div>\r\n                            Filled: <Switch label=\"Filled\" onChange={onFilledChange} checked={filled} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onSkillChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddSkill(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkill(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsEditor;","import React, {useState} from 'react';\r\nimport {Chip} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsEditor from \"./SkillsEditor\";\r\n\r\nimport './Skills.css'\r\nconst Skills = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling skills', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-skills\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"skills-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <Chip key={index} label={item.title} className={`resume-section-body skills-chip ${props.componentItem.componentData.rounded ? '' : 'no-rounded'}`} variant={props.componentItem.componentData.filled ? 'filled' : 'outlined'} />\r\n                );\r\n            })}\r\n            </div>\r\n\r\n\r\n            <SkillsEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Skills);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsWithProgressEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillsProgressItems, setSkillsProgressItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onskillsProgressItemsChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = { title: event.target.value, proficiency: 0 };\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onAddSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index + 1, 0, { title: '', proficiency: 0 });\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n    const onDeleteSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index, 1);\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = {title: newSkillsProgressItems[index].title, proficiency: event.target.value};\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: skillsProgressItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillsProgressItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onskillsProgressItemsChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ Number(item.proficiency) }\r\n                                            step={10}\r\n                                            marks\r\n                                            min={0}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddSkills(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkills(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillsProgressItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsWithProgressEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsWithProgressEditor from \"./SkillsWithProgressEditor\";\r\n\r\nimport \"./SkillsWithProgress.css\";\r\n\r\nconst SkillsWithProgress = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling SkillsWith Progress Bar', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className={props.componentItem.componentData.showProficiencyProgress ? 'skill-wrapper' : 'skill-wrapper min-margin'}>\r\n          <div className=\"skill-header\">\r\n              <div className=\"skill-title\">{item.title}</div>\r\n              <div className={`skill-percentage ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"skill-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={Number(item.proficiency)} />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n    <SkillsWithProgressEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(SkillsWithProgress);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [socialItems, setSocialItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"socialItems\", socialItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: socialItems.filter(\r\n        (item, index) => item.socialPlatform.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems[index] = {\r\n      ...newSocialItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onAddSocial = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index + 1, 0, {\r\n        socialPlatform: \"\",\r\n        username: \"\"\r\n    });\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index, 1);\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {socialItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Social Platform\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"socialPlatform\")\r\n                        }\r\n                        value={item.socialPlatform}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Username or URL\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"username\")\r\n                        }\r\n                        value={item.username}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddSocial(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!socialItems.filter(item => item.socialPlatform.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React, {useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SocialEditor from \"./SocialEditor\";\r\n\r\nimport './Social.css'\r\nconst Social = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling Social', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-Social\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"social-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='social-item' key={index}>\r\n                            <div className='social-platform resume-section-subtitle'>{item.socialPlatform}</div>\r\n                            <div className='social-username'>{item.username}</div>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n            <SocialEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Social);","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { AppBar, Button, Box, Toolbar, Link, Paper, Grid, Autocomplete, TextField, CircularProgress, Chip, Alert, Snackbar} from '@mui/material';\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport GoogleLogin from '../../components/Login/GoogleLogin'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getResumeDataByResumeId, updateResumeDataByResumeId } from '../../reducers/resumeDataSlice';\r\nimport { getResumeSettingsByResumeId, updateResumeSettingsByResumeId } from '../../reducers/resumeSettingsSlice';\r\nimport WebAssetOutlinedIcon from '@mui/icons-material/WebAssetOutlined';\r\nimport WebOutlinedIcon from '@mui/icons-material/WebOutlined';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@mui/icons-material/RemoveCircleOutlineOutlined';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport './Builder.css'\r\nimport logo from '../../logo.svg';\r\nimport GlobalResumeSetting from \"../../components/GlobalResumeSetting/GlobalResumeSetting\";\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Achievement from '../../components/Achievements/Achievement'\r\nimport BasicInfo from '../../components/BasicInfo/BasicInfo'\r\nimport Education from '../../components/Education/Education'\r\nimport Experience from '../../components/Experience/Experience'\r\nimport Languages from '../../components/Languages/Languages';\r\nimport ProfessionalSummary from '../../components/ProfessionalSummary/ProfessionalSummary';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsWithProgress from '../../components/SkillsWithProgress/SkillsWithProgress';\r\nimport Social from '../../components/Social/Social';\r\n\r\n\r\nfunction Builder() {\r\n  let resumeHTML;\r\n  const {authReducer, resumeDataReducer, resumeSettingsReducer} = useSelector((state) => state);\r\n  const [arr, setItems] = useState(null);\r\n  const [sidebar, setSidebar] = useState(true);\r\n  const [pageTwo, setPageTwo] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [openSnackbar, setopenSnackbar] = useState(false);\r\n  let { resumeId } = useParams();\r\n\r\n\r\n  const [resumeSettings, setResumeSettings] = useState(null);\r\n\r\n  const  openGlobalSetting = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n      console.log('calling builder effect');\r\n      setItems(resumeDataReducer.resumeData);\r\n      setResumeSettings(resumeSettingsReducer.resumeSettings);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resumeDataReducer]);\r\n    \r\n  useEffect(() => {\r\n    if(authReducer.userId) {\r\n      console.log('calling builder auth effect');\r\n      getResumeData();\r\n    }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n\r\n  function getResumeData() {\r\n    dispatch(getResumeDataByResumeId(resumeId)).then((res) => {\r\n      if (res.payload) {\r\n        setItems(res.payload);\r\n        console.log(res.payload);\r\n        setPageTwo(res.payload.pageTwo.length > 0);\r\n      }\r\n    });\r\n\r\n    dispatch(getResumeSettingsByResumeId(resumeId)).then((res) => {\r\n      setResumeSettings(res.payload);\r\n      if (res.payload) {\r\n        \r\n        setTimeout(() => {\r\n          setopenSnackbar(true);\r\n        }, 2000);\r\n\r\n        const root = document.querySelector(\":root\");\r\n        root.style.setProperty(\"--color-font-heading\", res.payload.headingFontColor);\r\n        root.style.setProperty(\"--color-font-subheading\", res.payload.subheadingFontColor);\r\n        root.style.setProperty(\"--color-font-body\", res.payload.bodyFontColor);\r\n        root.style.setProperty(\"--color-font-about-section\", res.payload.aboutSectionFontColor);\r\n      }\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  function updateResumeData(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeDataByResumeId({data:newData, resumeId: resumeId}));\r\n    }\r\n  }\r\n\r\n  function updateGlobalSetting(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeSettingsByResumeId({data:newData, resumeId: resumeId}));\r\n    }\r\n  }\r\n\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now())\r\n  }\r\n\r\n  const closeSnackBar = () => {\r\n    setopenSnackbar(false);\r\n  }\r\n\r\n  const copyComponent = (event, item, index, column) => {\r\n    item = {...item, copy: true, name: `${item.name}-${getUniqueId()}`};\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index + 1, 0, item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const deleteComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n\r\n  const addResumePage = () => {\r\n    setPageTwo(true); \r\n    setTimeout(() => {\r\n    const body = document.getElementById('resumePageSeparator');\r\n    body.scrollIntoView({\r\n        behavior: 'smooth'\r\n    }, 300)\r\n    } , 200);\r\n  }\r\n\r\n  const removeResumePage = () => {\r\n    setPageTwo(false);\r\n\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    const mergedArr = [...newArr.componentLibrary, ...newArr.pageTwo];\r\n    newArr.componentLibrary = mergedArr;\r\n    newArr.pageTwo = [];\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    const { destination, source, draggableId } = result;\r\n    // if canceling the dragNdrop in between\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    // if rearranging in same column\r\n    if (destination.droppableId === source.droppableId) {\r\n        const newArr = Array.from(arr[source.droppableId]);\r\n        newArr.splice(source.index, 1);\r\n        newArr.splice(destination.index, 0, arr[destination.droppableId].filter(x => x.name === draggableId)[0]);\r\n        \r\n        const colId = destination.droppableId;\r\n        \r\n        const newColumn = {\r\n          ...arr,\r\n          [colId]: newArr\r\n        }\r\n        setItems(newColumn);\r\n        updateResumeData(newColumn);\r\n    } else {\r\n      // Else if moving from sidebar to main column or vice-versa\r\n      const sourceId = source.droppableId;\r\n      const destId = destination.droppableId;\r\n      const sourceArr = Array.from(arr[source.droppableId]);\r\n      const destArr = Array.from(arr[destination.droppableId]);\r\n      // remove from source\r\n      sourceArr.splice(source.index, 1);\r\n      // add to destination\r\n      destArr.splice(destination.index, 0, arr[source.droppableId].filter(x => x.name === result.draggableId)[0]);\r\n      const newColumn = {\r\n        ...arr,\r\n        [sourceId]: sourceArr,\r\n        [destId]: destArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    }\r\n  }\r\n\r\n  function getComponent(componentType, item, columnName) {\r\n      switch (componentType) {\r\n        case 'Achievements':\r\n            return <Achievement componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'BasicInfo':\r\n          return <BasicInfo componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Experience':\r\n            return <Experience componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Education':\r\n            return <Education componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Languages':\r\n            return <Languages componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'ProfessionalSummary':\r\n          return <ProfessionalSummary componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Skills':\r\n          return <Skills componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'SkillsWithProgress':\r\n          return <SkillsWithProgress componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Social':\r\n            return <Social componentColumn={columnName} componentItem={item} />;\r\n            \r\n        default:\r\n            return null;\r\n    }\r\n  }\r\n\r\n\r\n  if (arr && resumeSettings) {\r\n    resumeHTML = <DragDropContext onDragEnd={onDragEnd}>\r\n      <Snackbar open={openSnackbar} autoHideDuration={5000} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} onClose={closeSnackBar} >\r\n        <Alert variant=\"filled\" severity=\"success\" color=\"primary\" sx={{ width: '100%' }}>\r\n          New Widgets Available. Try Out.\r\n        </Alert>\r\n      </Snackbar>\r\n    <div className=\"resume-paper-wrap\">\r\n    <GlobalResumeSetting \r\n      resumeSettings={resumeSettings}\r\n      setResumeSettings={setResumeSettings}\r\n      updateGlobalSetting={updateGlobalSetting}\r\n      open={open} \r\n      setOpen={setOpen}>\r\n    </GlobalResumeSetting>\r\n\r\n      <Grid container spacing={2}>\r\n          <Grid item xs={8}>\r\n            <div className=\"layout-options\">\r\n              <div className=\"layout-option-item\">\r\n                <Chip  color=\"primary\" icon={<SettingsOutlinedIcon />} onClick={openGlobalSetting} label=\"Settings\" />\r\n              </div>\r\n              \r\n              <div className=\"layout-option-item\">\r\n                <Chip color=\"primary\" icon={<WebAssetOutlinedIcon />} onClick={() => {\r\n                setSidebar(false)\r\n                const newArr = {...arr, main: [...arr['main'], ...arr['sidebar']], sidebar: []};\r\n                setItems(newArr);\r\n                }} label=\"Single Column\" />\r\n              </div>\r\n\r\n              <div className=\"layout-option-item\">\r\n              <Chip color=\"primary\" icon={<WebOutlinedIcon />} onClick={() => { setSidebar(true) }} label=\"Sidebar\" />\r\n              </div>\r\n\r\n              <div className=\"layout-option-item\">\r\n                {\r\n                  pageTwo ? \r\n                  <Chip color=\"primary\" icon={<RemoveCircleOutlineOutlinedIcon />} onClick={removeResumePage} label=\"Remove Page\" /> \r\n                  : <Chip color=\"primary\" icon={<AddCircleOutlineOutlinedIcon />} onClick={addResumePage} label=\"Add Page\" />\r\n                }\r\n                \r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"resume-paper-container\" id=\"resumPaperContainer\">\r\n            <Paper className={`resume-paper heading-alignment-${resumeSettings.headingAlignment} heading-font-${resumeSettings.headingFontSize} subheading-font-${resumeSettings.subheadingFontSize} body-font-${resumeSettings.bodyFontSize}`} sx={{fontSize: resumeSettings.bodyFontSize, color: resumeSettings.bodyFontColor}} elevation={3} >\r\n              <Grid container>\r\n                <Grid item xs={12} id=\"header\" className={`${arr.header.length > 0 ? '' : 'no-padding'}`} sx={{backgroundColor: resumeSettings.headerBackgroundColor, color: resumeSettings.aboutSectionFontColor}}>\r\n                  <Droppable droppableId=\"header\">\r\n                    {(provided, snapshot) => (\r\n                      <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                        <Suspense fallback={<div>Loading</div>}>\r\n                          {arr.header.map((item, index) => {\r\n                            return (\r\n                              <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                  <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'} \r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                    { getComponent(item.componentType, item, 'header') }\r\n                                    <div className=\"overlay\">\r\n                                      <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                        <DragIndicatorIcon/>\r\n                                      </span>\r\n                                      <span className=\"copy-component\">\r\n                                        <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                      <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                            );\r\n                          }\r\n                          )}\r\n                          {provided.placeholder}\r\n                        </Suspense>\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </Grid>\r\n                <Grid item xs={sidebar ? 7 : 12} id=\"main\" className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"main\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.main.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'} \r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                  \r\n                                  { getComponent(item.componentType, item, 'main') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'main')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'main')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid>\r\n                \r\n                {sidebar ? \r\n                <Grid item xs={5} id=\"sidebar\" sx={{backgroundColor: resumeSettings.sidebarBackgroundColor}} className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"sidebar\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over sidebar-column' : 'resume-paper-content sidebar-column'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.sidebar.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                  { getComponent(item.componentType, item, 'sidebar') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'sidebar')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'sidebar')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid> : null}\r\n              </Grid>\r\n            </Paper>\r\n            <Box sx={{height: 30}} id='resumePageSeparator'></Box>             \r\n            {pageTwo ?\r\n            <Paper className={`resume-paper heading-alignment-${resumeSettings.headingAlignment} heading-font-${resumeSettings.headingFontSize} subheading-font-${resumeSettings.subheadingFontSize} body-font-${resumeSettings.bodyFontSize}`} sx={{fontSize: resumeSettings.bodyFontSize, color: resumeSettings.bodyFontColor}} elevation={3} >\r\n              <Grid container>\r\n                <Grid item xs={12} id=\"pageTwo\" className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"pageTwo\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.pageTwo.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'} \r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                  \r\n                                  { getComponent(item.componentType, item, 'pageTwo') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'pageTwo')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'pageTwo')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            : null}\r\n            </div>     \r\n          </Grid>\r\n          <Grid className=\"component-library-wrap\" item xs={4}>\r\n            <div className=\"component-library-header\">\r\n              <div>\r\n                <span className=\"component-library-title\">All Widgets</span>\r\n              </div>\r\n              <Autocomplete\r\n                id=\"component-library-filter\"\r\n                options={[\r\n                  { label: 'Education', id: 1 },\r\n                  { label: 'Skills', id: 2 },\r\n                ]}\r\n                sx={{ width: 150 }}\r\n                renderInput={(params) => <TextField {...params} placeholder=\"Filter\"  variant=\"standard\" />}\r\n              />\r\n            </div>            \r\n            <Paper style={{padding: '20px'}} className=\"widget-library\" elevation={0}>\r\n\r\n            <Droppable droppableId=\"componentLibrary\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.componentLibrary.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n\r\n                                  { getComponent(item.componentType, item, 'componentLibrary') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'componentLibrary')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'componentLibrary')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n\r\n  </DragDropContext>;\r\n  } else {\r\n    resumeHTML = <div className=\"initial-loader\">\r\n                    <CircularProgress />\r\n                </div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"builder-wrap\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <AppBar elevation={0} className=\"global-header\" color=\"inherit\" position=\"fixed\">\r\n            <Toolbar className=\"builder-header\">\r\n              <div className=\"header-filters\">\r\n                <img src={logo} className=\"header-logo\" alt=\"Resume Builder\" />\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link active\" href=\"#\">About</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Experience</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Education</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Skills</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Languages</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Achievement</Link>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                    onClick={window.print}\r\n                    variant=\"contained\"\r\n                    color=\"primary\" \r\n                    disableElevation\r\n                    className=\"header-download-button\">\r\n                        Download Resume\r\n                </Button>\r\n                <GoogleLogin></GoogleLogin>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n      \r\n      {resumeHTML}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Builder;","import './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport { Container, Box } from '@mui/material';\r\n\r\nimport GlobalHeader from '../GlobalHeader/GlobalHeader';\r\nimport About from '../../pages/About/About';\r\nimport Contact from '../../pages/Contact/Contact';\r\nimport Builder from '../../pages/Builder/Builder';\r\n\r\nfunction App() {\r\nconst isSignedIn = useSelector(state => state.authReducer.isSignedIn);\r\n  return (\r\n      <Router>\r\n        <GlobalHeader/>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/builder/:resumeId?\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Builder></Builder>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact></Contact>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About/>\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                  <h1>Home Page</h1>\r\n                </Box> \r\n              </Container>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\n// Or Create your Own theme:\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#09915A'\r\n      },\r\n      // text: {\r\n      //   primary: 'rgba(0, 0, 0, 0.90)',\r\n      //   secondary: 'red',\r\n      // }\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        variants: [\r\n          {\r\n            props: { variant: 'space-40', color: 'primary' },\r\n            style: {\r\n              paddingLeft: '40px',\r\n              paddingRight: '40px'\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  export default theme;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authSlice from \"./authSlice\";\r\nimport resumeDataSlice from \"./resumeDataSlice\";\r\nimport resumeSettingsSlice from \"./resumeSettingsSlice\";\r\n\r\n// export default combineReducers({\r\n//     authReducer: authReducer\r\n// });\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authReducer: authSlice,\r\n    resumeDataReducer: resumeDataSlice,\r\n    resumeSettingsReducer: resumeSettingsSlice\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme'\nimport {store} from './reducers';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}