{"version":3,"sources":["components/Languages/LanguagesEditor.js"],"names":["LanguagesEditor","props","useState","editorData","setEditorData","firstime","setFirstTime","title","setTitle","items","languageItems","setLanguageItems","showProficiency","setShowProficiency","showProficiencyProgress","setShowProficiencyProgress","dispatch","useDispatch","closeEditor","setOpen","useEffect","updateResumeDataReducer","name","componentName","column","componentColumn","data","getProficiencyValue","prof","val","maxWidth","fullWidth","open","onClose","className","autoComplete","onChange","event","newVal","target","value","variant","label","checked","onShowProficiencyChange","onShowProficiencyProgressChange","map","item","index","sx","mb","mt","mr","languages","language","proficiency","onLanguageChange","size","step","marks","min","max","onProficiencyChange","onClick","splice","onAddLanguage","onDeleteLanguage","filter","length","disabled"],"mappings":"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","file":"static/js/14.d0e5d10a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst LanguagesEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [languageItems, setLanguageItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onLanguageChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages[index] = { language: event.target.value, proficiency: 'Beginner' };\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onAddLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index + 1, 0, { language: '' });\r\n        setLanguageItems(languages);\r\n    }\r\n    const onDeleteLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index, 1);\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        switch (event.target.value) {\r\n            case 25:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        \r\n            case 50:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Intermediate'};\r\n                break;\r\n            \r\n            case 75:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Proficient'};\r\n                break;\r\n\r\n            case 100:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Native'};\r\n                break;     \r\n            default:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        }\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: languageItems.filter((item, index) => item.language.length > 0) });\r\n        setFirstTime(true);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    const getProficiencyValue = (prof) => {\r\n        let val = 25;\r\n        switch (prof) {\r\n            case 'Beginner':\r\n                val = 25;\r\n                break;\r\n        \r\n            case 'Intermediate':\r\n                val = 50;\r\n                break;\r\n            \r\n            case 'Proficient':\r\n                val = 75;\r\n                break;\r\n\r\n            case 'Native':\r\n                val = 100;\r\n                break;     \r\n            default:\r\n                val = 25\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {languageItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onLanguageChange(event, index)}\r\n                                        value={item.language}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ getProficiencyValue(item.proficiency) }\r\n                                            step={25}\r\n                                            marks\r\n                                            min={25}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddLanguage(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteLanguage(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!languageItems.filter(item => item.language.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LanguagesEditor;"],"sourceRoot":""}