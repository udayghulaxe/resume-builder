{"version":3,"sources":["components/Education/EducationEditor.js"],"names":["EducationEditor","props","useState","editorData","setEditorData","firstime","setFirstTime","title","setTitle","items","educationItems","setEducationItems","dispatch","useDispatch","closeEditor","setOpen","useEffect","console","log","updateResumeDataReducer","name","componentName","column","componentColumn","data","maxWidth","fullWidth","open","onClose","className","autoComplete","onChange","event","newVal","target","value","variant","map","item","index","label","sx","mb","mt","mr","newTitle","newEducationItems","onEducationTitleChange","inputProps","style","fontSize","size","newUniversity","university","onUniversityChange","newDate","date","onDateChange","placeholder","newGPA","gpa","onGpaChange","onClick","splice","onAddEducation","onDeleteEducation","height","filter","length","disabled"],"mappings":"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","file":"static/js/12.391d81e8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onEducationTitleChange = (event, index) => {\r\n        const newTitle = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], title: newTitle};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onUniversityChange = (event, index) => {\r\n        const newUniversity = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], university: newUniversity};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n\r\n    const onDateChange = (event, index) => {\r\n        const newDate = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], date: newDate};\r\n        console.log(educationItems);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onGpaChange = (event, index) => {\r\n        const newGPA = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], gpa: newGPA};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onAddEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index + 1, 0, { title: '', university: '', date: '', gpa: '' });\r\n        setEducationItems(newEducationItems);\r\n    }\r\n    const onDeleteEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index, 1);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        console.log('educationItems', educationItems);\r\n        setEditorData({ ...editorData, title: title,  items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            console.log('props', props);\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onEducationTitleChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onUniversityChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Year'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onDateChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                placeholder='YYYY - YYYY'\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onGpaChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon onClick={(event) => onAddEducation(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon onClick={(event) => onDeleteEducation(event, index)}  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!educationItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;"],"sourceRoot":""}