{"version":3,"sources":["components/Skills/SkillsEditor.js","components/Skills/Skills.js","../node_modules/@mui/icons-material/Edit.js"],"names":["SkillsEditor","props","useState","editorData","setEditorData","firstime","setFirstTime","title","setTitle","items","skillItems","setSkillItems","rounded","setRounded","filled","setFilled","dispatch","useDispatch","closeEditor","setOpen","useEffect","updateResumeDataReducer","name","componentName","column","componentColumn","data","maxWidth","fullWidth","open","onClose","className","autoComplete","onChange","event","newVal","target","value","variant","label","checked","map","item","index","sx","mb","mt","mr","skills","onSkillChange","size","onClick","splice","onAddSkill","onDeleteSkill","filter","length","console","log","disabled","Skills","componentItem","componentData","React","memo","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/8.19b9fa43.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillItems, setSkillItems] = useState(editorData.items);\r\n    const [rounded, setRounded] = useState(editorData.rounded);\r\n    const [filled, setFilled] = useState(editorData.filled);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onRoundedChange = (event) => {\r\n        setRounded(event.target.checked);\r\n    }\r\n\r\n    const onFilledChange = (event) => {\r\n        setFilled(event.target.checked);\r\n    }\r\n\r\n    const onSkillChange = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills[index] = { title: event.target.value };\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onAddSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setSkillItems(skills);\r\n    }\r\n    const onDeleteSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index, 1);\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, rounded: rounded, filled: filled, title: title, items: skillItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Rounded: <Switch label=\"Rounded\" onChange={onRoundedChange} checked={rounded} />\r\n                        </div>\r\n                        <div>\r\n                            Filled: <Switch label=\"Filled\" onChange={onFilledChange} checked={filled} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onSkillChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddSkill(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkill(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsEditor;","import React, {useState} from 'react';\r\nimport {Chip} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsEditor from \"./SkillsEditor\";\r\n\r\nimport './Skills.css'\r\nconst Skills = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling skills', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-skills\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"skills-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <Chip key={index} label={item.title} className={`skills-chip ${props.componentItem.componentData.rounded ? '' : 'no-rounded'}`} variant={props.componentItem.componentData.filled ? 'filled' : 'outlined'} />\r\n                );\r\n            })}\r\n            </div>\r\n\r\n\r\n            <SkillsEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Skills);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}