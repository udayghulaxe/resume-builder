{"version":3,"sources":["components/Education/EducationEditor.js"],"names":["EducationEditor","props","useState","editorData","title","setTitle","items","educationItems","closeEditor","useDispatch","setOpen","maxWidth","fullWidth","open","onClose","className","autoComplete","onChange","event","newVal","target","value","variant","map","item","index","label","sx","mb","mt","mr","inputProps","style","fontSize","width","size","university","date","gpa","height","onClick"],"mappings":"4QAwHeA,UA5GS,SAACC,GACrB,MAAoCC,mBAASD,EAAME,YAAnD,mBAAOA,EAAP,KACA,GADA,KAC0BD,mBAASC,EAAWC,QAA9C,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA4CH,mBAASC,EAAWG,OAAhE,mBAAOC,EAAP,KAcMC,GAdN,KACiBC,cAaG,WAChBR,EAAMS,SAAQ,KAIlB,OACI,eAAC,IAAD,CAAQC,SAAS,KAAKC,WAAW,EAAMC,KAAMZ,EAAMY,KAAMC,QAASN,EAAlE,UACI,cAAC,IAAD,UACI,sBAAKO,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CAAWH,WAAS,EAACI,aAAa,MAAMC,SArBtC,SAACC,GACnB,IAAMC,EAASD,EAAME,OAAOC,MAC5BhB,EAASc,IAmBwEE,MAAOjB,EAAOkB,QAAQ,eAE3F,qBAAKP,UAAU,oBAAf,SACKR,EAAegB,KAAI,SAACC,EAAMC,GACvB,OACI,gCACI,sBAAKV,UAAU,cAAf,UACI,gCACI,cAAC,IAAD,CACIW,MAAM,0BACNC,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAExBT,MAAOG,EAAKpB,MACZ,WAAUqB,EACVM,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BD,MAAS,CAACE,MAAO,KACjBC,KAAK,UAET,cAAC,IAAD,CACIT,MAAM,uBACNC,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAExBT,MAAOG,EAAKY,WACZ,WAAUX,EACVM,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BD,MAAS,CAACE,MAAO,KACjBC,KAAK,UAET,cAAC,IAAD,CACIT,MAAM,YACNC,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAExBT,MAAOG,EAAKa,KACZ,WAAUZ,EACVM,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BD,MAAS,CAACE,MAAO,KACjBC,KAAK,UAET,cAAC,IAAD,CACIT,MAAM,UACNC,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAExBT,MAAOG,EAAKa,KACZ,WAAUZ,EACVM,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BD,MAAS,CAACE,MAAO,KACjBC,KAAK,UAET,cAAC,IAAD,CACIT,MAAM,qBACNC,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAExBT,MAAOG,EAAKc,IACZ,WAAUb,EACVM,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BD,MAAS,CAACE,MAAO,KACjBC,KAAK,aAIb,cAAC,IAAD,CAAepB,UAAU,kBACzB,cAAC,IAAD,CAAoBA,UAAS,2BAAgC,IAAVU,EAAc,SAAW,SAEhF,cAAC,IAAD,CAAKE,GAAI,CAACY,OAAQ,MAClB,cAAC,IAAD,IACA,cAAC,IAAD,CAAKZ,GAAI,CAACY,OAAQ,QA5DZd,aAoE9B,eAAC,IAAD,WACI,cAAC,IAAD,CAAQe,QAAShC,EAAjB,oBACA,cAAC,IAAD,CAAQgC,QA3FL,SAACtB,KA2FJ","file":"static/js/10.0193a3fa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        // setEditorData({ ...editorData, title: title, showIcon: showIcon, items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        // setFirstTime(true);\r\n        // console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                // onChange={(event) => onAchievementChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                style = {{width: 215}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                // onChange={(event) => onAchievementChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                style = {{width: 210}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Year From'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                // onChange={(event) => onAchievementChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                style = {{width: 140}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Year To'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                // onChange={(event) => onAchievementChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                style = {{width: 140}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                // onChange={(event) => onAchievementChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                style = {{width: 140}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;"],"sourceRoot":""}