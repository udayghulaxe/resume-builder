{"version":3,"sources":["logo.svg","reducers/authSlice.js","firebase.js","components/Login/GoogleLogin.js","components/GlobalHeader/GlobalHeader.js","pages/About/About.js","pages/Contact/Contact.js","reducers/resumeDataSlice.js","reducers/resumeSettingsSlice.js","globals.js","reducers/userDataSlice.js","components/GlobalResumeSetting/GlobalResumeSetting.js","components/Achievements/AchievementEditor.js","components/Achievements/Achievement.js","components/BasicInfo/BasicInfoEditor.js","components/BasicInfo/BasicInfo.js","components/Education/EducationEditor.js","components/Education/Education.js","components/Experience/ExperienceEditor.js","components/Experience/Experience.js","components/Languages/LanguagesEditor.js","components/Languages/Languages.js","components/ProfessionalSummary/ProfessionalSummaryEditor.js","components/ProfessionalSummary/ProfessionalSummary.js","components/Skills/SkillsEditor.js","components/Skills/Skills.js","components/SkillsWithProgress/SkillsWithProgressEditor.js","components/SkillsWithProgress/SkillsWithProgress.js","components/Social/SocialEditor.js","components/Social/Social.js","pages/Builder/Builder.js","assets/images/resume-2.svg","pages/Resumes/Resumes.js","pages/Home/Home.js","components/App/App.js","theme/index.js","reducers/index.js","index.js"],"names":["INITIAL_STATE","isSignedIn","localStorage","getItem","userId","name","email","authSlice","createSlice","initialState","reducers","signInAction","state","action","payload","signOutAction","actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","GoogleLogin","onAuthChange","isSignedInStatus","props","auth","currentUser","get","getId","getBasicProfile","getName","getEmail","onSignInClick","signIn","then","firestore","collection","doc","exists","setItem","getAuthResponse","id_token","history","replace","set","userResumes","JSON","stringify","catch","error","console","log","onSignOutClick","signOut","removeItem","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","this","className","CircularProgress","size","Button","component","NavLink","to","exact","variant","color","disableElevation","onClick","renderAuthButton","Component","mapDispatchToProps","connect","authReducer","withRouter","GlobalHeader","useLocation","pathname","Box","sx","flexGrow","AppBar","elevation","position","Toolbar","src","logo","alt","React","memo","About","Container","maxWidth","m","textAlign","Contact","getResumeDataByResumeId","createAsyncThunk","resumeId","thunkAPI","a","data","response","parse","resumeJson","updateResumeDataByResumeId","apiData","update","resumeDataSlice","resumeData","loading","updateResumeDataReducer","column","filter","item","componentData","extraReducers","builder","addCase","fulfilled","getResumeSettingsByResumeId","resumeSettings","updateResumeSettingsByResumeId","resumeSettingsSlice","updateSettingsDataReducer","richEditorSettings","toolbar","initialData","bodyFontSize","headingFontSize","subheadingFontSize","bodyFontColor","headingFontColor","subheadingFontColor","headerBackgroundColor","mainBackgroundColor","sidebarBackgroundColor","sidebarHeadingColor","sidebarBodyColor","aboutSectionFontColor","headingAlignment","sidebar","sidebarposition","header","componentType","path","title","items","summary","main","university","date","gpa","showIcon","experienceTitle","company","location","experienceSummary","filled","rounded","socialPlatform","username","pageTwo","componentLibrary","showProficiency","showProficiencyProgress","language","proficiency","colors","fontSizes","value","label","getUserDataByUserId","updateUserResumeDataByUserId","deleteResumeByResumeId","delete","copyResumeByResumeId","uniqueId","createNewReumseByUserId","userResumeData","resumeName","length","resumeImage","newResumesArr","fullName","userData","website","phone","address","userDataSlice","updateUserDataReducer","GlobalResumeSetting","useState","headerFontColorToggle","headingFontColorToggle","subheadingFontColorToggle","bodyFontToggle","headerBackgroundColorToggle","sidebarBackgroundColorToogle","sidebarHeadingColorToggle","mainBackgroundColorToggle","colorsToggles","setColorsToggles","closeEditor","setOpen","changeFontColor","property","document","querySelector","style","setProperty","changeHeadingAlignment","e","alignment","setResumeSettings","openColorToggle","colorToggleProp","changeSidebarPosition","sidebarPosition","Dialog","fullWidth","open","hideBackdrop","DialogContent","backgroundColor","onChangeComplete","hex","triangle","bodyFontColorToggle","sidebarBodyColorToggle","sidebarBackgroundColorToggle","event","map","font","index","DialogActions","updateGlobalSetting","marginRight","AchievementEditor","editorData","setEditorData","firstime","setFirstTime","setTitle","achievementItems","setAchievementItems","setShowIcon","dispatch","useDispatch","useEffect","componentName","componentColumn","onClose","TextField","autoComplete","onChange","newVal","target","Switch","checked","mb","mt","mr","skills","onAchievementChange","multiline","rows","inputProps","fontSize","lineHeight","width","splice","onAddAchievement","onDeleteAchievement","disabled","Achievement","componentItem","BasicInfoEditor","onDataChange","newName","newEditorData","readOnly","currentRole","Item","styled","theme","typography","caption","display","alignItems","BasicInfo","Grid","container","justifyContent","rowSpacing","columnSpacing","xs","sm","md","pl","EducationEditor","educationItems","setEducationItems","newTitle","newEducationItems","onEducationTitleChange","newUniversity","onUniversityChange","newDate","onDateChange","placeholder","newGPA","onGpaChange","onAddEducation","onDeleteEducation","height","Divider","Education","ExperienceEditor","experienceItems","setExperienceItems","onFieldChange","newValue","newExperienceItems","defaultValue","modules","val","onSummaryChange","onAddExperience","onDeleteExperience","Experience","dangerouslySetInnerHTML","__html","LanguagesEditor","languageItems","setLanguageItems","setShowProficiency","setShowProficiencyProgress","getProficiencyValue","prof","onShowProficiencyChange","onShowProficiencyProgressChange","languages","onLanguageChange","Slider","step","marks","min","max","onProficiencyChange","onAddLanguage","onDeleteLanguage","Languages","getProgressFromProficiency","LinearProgress","SocialEditor","professionalSummaryItems","setprofessionalSummaryItems","newprofessionalSummaryItems","ProfessionalSummary","ProfessionalSummaryEditor","SkillsEditor","skillItems","setSkillItems","setRounded","setFilled","onSkillChange","onAddSkill","onDeleteSkill","Skills","Chip","SkillsWithProgressEditor","skillsProgressItems","setSkillsProgressItems","newSkillsProgressItems","onskillsProgressItemsChange","Number","onAddSkills","onDeleteSkills","SkillsWithProgress","socialItems","setSocialItems","newSocialItems","onAddSocial","Social","Builder","resumeHTML","useSelector","resumeDataReducer","resumeSettingsReducer","userDataReducer","arr","setItems","setPageTwo","isLoading","setIsLoading","openSnackbar","setopenSnackbar","useParams","updateResumeData","newData","res","setTimeout","checkForPageTwo","root","paperheight","clientHeight","childs","children","i","moveLastComponentToPageTwo","newArr","push","pop","onSidebarSettingClick","updateResumeThumbnail","pageOneElement","html2canvas","canvas","userResumesData","resume","toString","toDataURL","copyComponent","copy","Math","floor","random","Date","now","removeComponent","deleteComponent","getComponent","columnName","onDragEnd","result","destination","source","draggableId","droppableId","Array","from","x","colId","newColumn","sourceId","destId","sourceArr","destArr","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","spacing","startIcon","mergedArr","getElementById","scrollIntoView","behavior","print","id","Paper","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","isDragging","draggableProps","key","dragHandleProps","titleAccess","fallback","Autocomplete","options","renderInput","params","padding","addComponentToResume","Resumes","setUserData","setUserResumes","previewResumeImageSrc","setPreviewResumeImageSrc","useHistory","getUserData","getUniqueId","scroll","backgroundImage","copyFrom","newResumeData","onDeleteResume","direction","resumeSvg","Home","App","createTheme","palette","primary","components","MuiButton","variants","paddingLeft","paddingRight","store","configureStore","reducer","ReactDOM","render","ThemeProvider"],"mappings":"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","file":"static/js/main.85aea692.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn : (localStorage.getItem('token') == null) ? false : true,\r\n    userId: null,\r\n    name: null,\r\n    email: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        signInAction: (state, action) => {\r\n            state.isSignedIn = true;\r\n            state.userId = action.payload.userId;\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n        },\r\n        signOutAction: (state) => {\r\n            state.isSignedIn = false;\r\n            state.userId = null;\r\n            state.name = null;\r\n            state.email = null;\r\n        },\r\n    },\r\n  });\r\n  \r\nexport const { signInAction, signOutAction } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBjh7R7l6f9rTW8Oll_uzx2q50uJNWRjbU\",\r\n  authDomain: \"resume-builder-c4248.firebaseapp.com\",\r\n  projectId: \"resume-builder-c4248\",\r\n  storageBucket: \"resume-builder-c4248.appspot.com\",\r\n  messagingSenderId: \"790181104761\",\r\n  appId: \"1:790181104761:web:3f3e105c4d46cd7c09d8a8\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAction, signOutAction } from \"../../reducers/authSlice.js\";\r\nimport { withRouter, NavLink } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\n\r\nclass GoogleLogin extends Component {\r\n  // If not using arrow function then we need to bind `this` like below\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {isSignedIn: null};\r\n  //     this.onAuthChange = this.onAuthChange.bind(this)\r\n  // }\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"1051932499833-smce802vivdpiijmo5bg4donrr6n40fg.apps.googleusercontent.com\",\r\n          scope: \"email profile\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // listen for auth changes in future\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedInStatus) => {\r\n    if (isSignedInStatus) {\r\n      this.props.signInAction({\r\n        userId: this.auth.currentUser.get().getId(),\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n    } else {\r\n      this.props.signOutAction();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn().then(() => {\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const name = this.auth.currentUser.get().getBasicProfile().getName();\r\n      const email = this.auth.currentUser.get().getBasicProfile().getEmail();\r\n      this.props.signInAction({\r\n        userId: userId,\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n\r\n      // If first time user then create a new resume\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .get()\r\n        .then((doc) => {\r\n          // Existing user then redirect else create a new resume\r\n          if (doc.exists) {\r\n            localStorage.setItem(\r\n              \"token\",\r\n              this.auth.currentUser.get().getAuthResponse().id_token\r\n            );\r\n            this.props.history.replace(\"resumes\");\r\n          } else {\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(`${userId}`)\r\n              .set({\r\n                userResumes: JSON.stringify([]),\r\n                userId: userId,\r\n                name: name,\r\n                email: email,\r\n              })\r\n              .then(() => {\r\n                localStorage.setItem(\r\n                  \"token\",\r\n                  this.auth.currentUser.get().getAuthResponse().id_token\r\n                );\r\n                this.props.history.replace(`resumes`);\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut().then(() => {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.signOutAction();\r\n    });\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return (\r\n        <div className=\"header-login-button-wrap\">\r\n          <CircularProgress className=\"login-loader\" size={18} />\r\n        </div>\r\n      );\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <>\r\n          <Button\r\n              component={NavLink}\r\n              to=\"/resumes\"\r\n              exact\r\n              variant=\"text\"\r\n              color=\"primary\" \r\n              disableElevation\r\n              className=\"mobile-d-none header-menu-link\">\r\n                  My Resumes\r\n          </Button>\r\n          <Button\r\n            onClick={this.onSignOutClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            className=\"header-login-button\"\r\n          >\r\n            Logout\r\n          </Button>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignInClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Create Resume\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderAuthButton();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { signInAction, signOutAction };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(GoogleLogin));\r\n","import React from \"react\";\r\nimport {AppBar, Box, Toolbar, Button} from '@mui/material';\r\nimport logo from '../../logo.svg';\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport GoogleLogin from '../Login/GoogleLogin'\r\n\r\nimport './GlobalHeader.css'\r\n\r\nconst GlobalHeader = () => {\r\n    return (useLocation().pathname !== '/builder') ? (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar elevation={0} className=\"global-header\" color=\"transparent\" position=\"static\">\r\n                <Toolbar>\r\n                    <img src={logo} className=\"header-logo\" alt=\"Resume Builder\"/>\r\n                    <div className=\"header-logo-text\">\r\n                        <span>Resume Builder</span>\r\n                    </div>\r\n                    <nav>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/\"\r\n                            exact\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Home\r\n                        </Button>\r\n                        \r\n                        {/* <Button \r\n                            component={NavLink}\r\n                            to=\"/about\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                About\r\n                        </Button>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/contact\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Contact\r\n                        </Button> */}\r\n                        <GoogleLogin></GoogleLogin>\r\n                    </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    ) : <span></span>\r\n}\r\n\r\nexport default  React.memo(GlobalHeader);","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>About</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>Contact</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeData: null, loading: 'idle',\r\n};\r\n\r\nexport const getResumeDataByResumeId = createAsyncThunk(\r\n  'resume/getResumeDataByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n    console.log('calling api');\r\n    const response = await (await firebase.firestore().collection('resumes').doc(`${resumeId}`).get()).data();\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeDataByResumeId = createAsyncThunk(\r\n  'resume/updateResumeDataByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"resumes\").doc(`${apiData.resumeId}`).update({resumeJson: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n);\r\n  \r\n\r\nexport const resumeDataSlice = createSlice({\r\n    name: 'resumeDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateResumeDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeData));\r\n            data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getResumeDataByResumeId.fulfilled, (state, action) => {\r\n          console.log(action);\r\n          state.resumeData = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeDataByResumeId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateResumeDataReducer } = resumeDataSlice.actions;  \r\n\r\nexport default resumeDataSlice.reducer;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeSettings: null,\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getResumeSettingsByResumeId = createAsyncThunk(\r\n  'resume/getResumeSettingsByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('resumes').doc(`${resumeId}`).get()).data();\r\n    return JSON.parse(response.resumeSettings);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeSettingsByResumeId = createAsyncThunk(\r\n  'resume/updateResumeSettingsByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"resumes\").doc(`${apiData.resumeId}`).update({resumeSettings: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n)\r\n  \r\n\r\nexport const resumeSettingsSlice = createSlice({\r\n    name: 'resumeSettingsSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateSettingsDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeSettings));\r\n            //data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getResumeSettingsByResumeId.fulfilled, (state, action) => {\r\n            state.resumeSettings = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeSettingsByResumeId.fulfilled, (state, action) => {\r\n          state.resumeSettings = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateSettingsDataReducer } = resumeSettingsSlice.actions;  \r\n\r\nexport default resumeSettingsSlice.reducer;","export const richEditorSettings = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n    [{ 'align': [] }],\r\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n    [{ 'color': [] }, { 'background': [] }],\r\n    ['link', 'image'],\r\n    ['clean']\r\n  ],\r\n};\r\n\r\nexport const initialData = {\r\n  resumeSettings: {\r\n    bodyFontSize: 'small',\r\n    headingFontSize: 'large',\r\n    subheadingFontSize: 'small',\r\n    bodyFontColor: '#000000',\r\n    headingFontColor: '#000000',\r\n    subheadingFontColor: '#000000',\r\n    headerBackgroundColor: '#ffffff',\r\n    mainBackgroundColor: '#ffffff',\r\n    sidebarBackgroundColor: '#ffffff',\r\n    sidebarHeadingColor: '#000000',\r\n    sidebarBodyColor: '#000000',\r\n    aboutSectionFontColor: '#000000',\r\n    headingAlignment: 'left',\r\n    sidebar: true,\r\n    sidebarposition: 'right',\r\n  },\r\n  resumeJson: {\r\n  header: [\r\n      {\r\n          name: \"BasicInfo\",\r\n          componentType: 'BasicInfo',\r\n          path: \"BasicInfo/BasicInfo\"\r\n      },\r\n      {\r\n          name: \"ProfessionalSummary\",\r\n          componentType: 'ProfessionalSummary',\r\n          path: \"ProfessionalSummary/ProfessionalSummary\",\r\n          componentData: {\r\n              title: \"Professional Summary\",\r\n              items: [\r\n                {\r\n                  summary: \"This is summary body.\"\r\n                },\r\n              ],\r\n          }\r\n      }\r\n\r\n  ],\r\n  main: [\r\n    {\r\n      name: \"Education\",\r\n      componentType: 'Education',\r\n      path: \"Education/Education\",\r\n      componentData: {\r\n        title: \"Education\",\r\n        items: [\r\n          {\r\n            title: \"Executive MBA, Engineering Management\",\r\n            university: \"The University of Arizona\",\r\n            date: \"2010 - 2014\",\r\n            gpa: \"CGPA 09/10\",\r\n          },\r\n          {\r\n            title: \"Engineering Management\",\r\n            university: \"The University of California, Berkeley\",\r\n            date: \"2008 - 2010\",\r\n            gpa: \"CGPA 7.5/10\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Achievements\",\r\n      componentType: 'Achievements',\r\n      path: \"Achievements/Achievement\",\r\n      componentData: {\r\n        title: \"Achievements\",\r\n        showIcon: true,\r\n        items: [\r\n          {\r\n            title:\r\n              \"Won Best Employee Award for last 2 consecutive year (2020 & 2021). Won Best Employee Award for last 2 consecutive year (2020 & 2021).\",\r\n          },\r\n          { title: \"Won inter-zone cricket competition (2020). \" },\r\n          {\r\n            title: \"Runner up for state level table tennis competition (2020).\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Experience\",\r\n      componentType: 'Experience',\r\n      path: \"Experience/Experience\",\r\n      componentData: {\r\n        title: \"Experience\",\r\n        items: [\r\n          {\r\n            experienceTitle: \"Android Developer\",\r\n            company: \"Google\",\r\n            date: \"2018 - 2020\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 3 key projects of major clients.\",\r\n          },\r\n          {\r\n            experienceTitle: \"Front End Developer\",\r\n            company: \"Amazon\",\r\n            date: \"2014 - 2018\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 4 key projects of major clients.\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  sidebar: [\r\n    {\r\n      name: \"Skills\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"HTML\" },\r\n          { title: \"CSS\" },\r\n          { title: \"JavaScript\" },\r\n          { title: \"React\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Tools\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Tools\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [{ title: \"Git\" }, { title: \"Webpack\" }, { title: \"Gulp\" }],\r\n      },\r\n    },\r\n    {\r\n      name: \"Hobbies\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Hobbies\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"Reading\" },\r\n          { title: \"Swimming\" },\r\n          { title: \"Hiking\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Social\",\r\n      componentType: 'Social',\r\n      path: \"Social/Social\",\r\n      componentData: {\r\n        title: \"Social\",\r\n        items: [\r\n          {\r\n            socialPlatform: \"Github\",\r\n            username: \"@username\",\r\n          },\r\n          {\r\n            socialPlatform: \"LinkedIn\",\r\n            username: \"@username\",\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n  pageTwo: [],\r\n  componentLibrary: [\r\n    {\r\n      name: \"Languages\",\r\n      componentType: 'Languages',\r\n      path: \"Languages/Languages\",\r\n      componentData: {\r\n        title: \"Languages\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { language: \"English\", proficiency: \"Proficient\" },\r\n          { language: \"Hindi\", proficiency: \"Native\" },\r\n          { language: \"Spanish\", proficiency: \"Beginner\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"SkillsWithProgress\",\r\n      componentType: 'SkillsWithProgress',\r\n      path: \"SkillsWithProgress/SkillsWithProgress\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { title: \"HTML\", proficiency: 80 },\r\n          { title: \"CSS\", proficiency: 80 },\r\n          { title: \"Javascript\", proficiency: \"70\" },\r\n          { title: \"React\", proficiency: 50 },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n}\r\n};\r\n\r\nexport const colors = ['#000000', '#ffffff', '#483d8b', '#f0f8ff', '#2f4f4f', '#bdb76b', '#183141', '#ffd700', '#D9E2E9', '#141428', '#94AA9E', '#B5282E', '#808000', '#191970', '#FBECD7', '#dc143c' ];\r\n\r\n\r\nexport const fontSizes = [\r\n  {\r\n    value: \"x-small\",\r\n    label: \"XS\",\r\n  },\r\n  {\r\n    value: \"small\",\r\n    label: \"S\",\r\n  },\r\n  {\r\n    value: \"medium\",\r\n    label: \"M\",\r\n  },\r\n  {\r\n    value: \"large\",\r\n    label: \"L\",\r\n  },\r\n  {\r\n    value: \"larger\",\r\n    label: \"XL\",\r\n  }\r\n];\r\n\r\nexport const headingAlignment = [\r\n  {\r\n    value: \"left\",\r\n    label: \"Left\",\r\n  },\r\n  {\r\n    value: \"center\",\r\n    label: \"Center\",\r\n  },\r\n  {\r\n    value: \"right\",\r\n    label: \"Right\",\r\n  }\r\n];","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\nimport { initialData } from \"../globals\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    userData: null,\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getUserDataByUserId = createAsyncThunk(\r\n  'resume/getUserDataByUserId',\r\n  async (userId, thunkAPI) => {\r\n      \r\n    const response = await (await firebase.firestore().collection('users').doc(userId).get()).data();\r\n    return response;\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateUserResumeDataByUserId = createAsyncThunk(\r\n  'resume/updateUserDataByUserId',\r\n  async (apiData, thunkAPI) => {\r\n      \r\n    await firebase.firestore()\r\n    .collection(\"users\")\r\n    .doc(`${apiData.userId}`)\r\n    .update({\r\n      userResumes: apiData.data,\r\n    });\r\n    return apiData.data;\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const deleteResumeByResumeId = createAsyncThunk(\r\n  'resume/deleteResumeByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n      \r\n    firebase.firestore()\r\n      .collection(\"resumes\")\r\n      .doc(`${resumeId}`)\r\n      .delete();\r\n  }\r\n)\r\n\r\nexport const copyResumeByResumeId = createAsyncThunk(\r\n  'resume/copyResumeByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n\r\n    const response = await (await firebase.firestore().collection('resumes').doc(apiData.resumeId).get()).data();\r\n    await firebase.firestore()\r\n      .collection(\"resumes\")\r\n      .doc(`${apiData.uniqueId}`)\r\n      .set({\r\n        resumeJson: response.resumeJson,\r\n        resumeSettings: response.resumeSettings\r\n    });\r\n\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// create the thunk\r\nexport const createNewReumseByUserId = createAsyncThunk(\r\n  'resume/createNewReumseByUserId',\r\n  async (apiData, thunkAPI) => {\r\n    console.log(apiData);\r\n    const userResumeData = [\r\n      {\r\n        resumeName: `Resume ${apiData.data.length + 1}`,\r\n        resumeId: `${apiData.uniqueId}`,\r\n        resumeImage: \"\"\r\n      }\r\n    ];\r\n\r\n    const newResumesArr = [...apiData.data, ...userResumeData];\r\n\r\n    initialData.resumeJson.header.filter(\r\n      (item) => item.name === \"BasicInfo\"\r\n    )[0].componentData = {\r\n      fullName: apiData.userData.name,\r\n      email: apiData.userData.email,\r\n      website: \"www.example.com\",\r\n      phone: \"1234567890\",\r\n      address: \"123, ABC Street, XYZ City, ABC State, 123456\",\r\n    };\r\n    await firebase.firestore()\r\n      .collection(\"resumes\")\r\n      .doc(`${apiData.uniqueId}`)\r\n      .set({\r\n        resumeJson: JSON.stringify(initialData.resumeJson),\r\n        resumeSettings: JSON.stringify(initialData.resumeSettings)\r\n    });\r\n    await (await firebase.firestore().collection(\"users\").doc(apiData.userData.userId).update({userResumes: JSON.stringify(newResumesArr)}));\r\n    return newResumesArr; \r\n  }\r\n)\r\n  \r\n\r\nexport const userDataSlice = createSlice({\r\n    name: 'userDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateUserDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.userData));\r\n            state.userData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getUserDataByUserId.fulfilled, (state, action) => {\r\n            state.userData = action.payload;\r\n        });\r\n\r\n        builder.addCase(createNewReumseByUserId.fulfilled, (state, action) => {\r\n          state.userData.userResumes = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateUserResumeDataByUserId.fulfilled, (state, action) => {\r\n          state.userData.userResumes = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateUserDataReducer } = userDataSlice.actions;  \r\n\r\nexport default userDataSlice.reducer;","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { GithubPicker } from 'react-color';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { fontSizes, colors } from '../../globals.js';\r\nimport FormatAlignLeftOutlinedIcon from '@mui/icons-material/FormatAlignLeftOutlined';\r\nimport FormatAlignCenterOutlinedIcon from '@mui/icons-material/FormatAlignCenterOutlined';\r\nimport FormatAlignRightOutlinedIcon from '@mui/icons-material/FormatAlignRightOutlined';\r\n\r\nimport \"./GlobalResumeSetting.css\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst GlobalResumeSetting = (props) => {\r\n\r\n  const [colorsToggles, setColorsToggles] = useState({\r\n    headerFontColorToggle: false,\r\n    headingFontColorToggle: false,\r\n    subheadingFontColorToggle: false,\r\n    bodyFontToggle: false,\r\n    headerBackgroundColorToggle: false,\r\n    sidebarBackgroundColorToogle: false,\r\n    sidebarHeadingColorToggle: false,\r\n    mainBackgroundColorToggle: false,\r\n  });\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const changeFontColor = (property, color) => {\r\n    const root = document.querySelector(\":root\");\r\n    root.style.setProperty(property, color)\r\n  }\r\n\r\n  const changeAboutSectionFontColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, aboutSectionFontColor: color.hex });\r\n    openColorToggle('headerFontColorToggle');\r\n    changeFontColor(\"--color-font-about-section\", color.hex);\r\n  }\r\n\r\n  const changeHeadingFontColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, headingFontColor: color.hex });\r\n    changeFontColor(\"--color-font-heading\", color.hex);\r\n    openColorToggle('headingFontColorToggle');\r\n  }\r\n\r\n  const changeSubheadingFontColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, subheadingFontColor: color.hex });\r\n    changeFontColor(\"--color-font-subheading\", color.hex);\r\n    openColorToggle('subheadingFontColorToggle');\r\n  }\r\n\r\n  const changeBodyFontColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, bodyFontColor: color.hex });\r\n    changeFontColor(\"--color-font-body\", color.hex);\r\n    openColorToggle('bodyFontColorToggle');\r\n  }\r\n\r\n  const changeHeaderBackgroundColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, headerBackgroundColor: color.hex });\r\n    openColorToggle('headerBackgroundColorToggle');\r\n  }\r\n\r\n  const changeSidebarBackgroundColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, sidebarBackgroundColor: color.hex });\r\n    openColorToggle('sidebarBackgroundColorToggle');\r\n  }\r\n\r\n  const changeSidebarBodyColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, sidebarBodyColor: color.hex });\r\n    changeFontColor(\"--color-sidebar-body\", color.hex);\r\n    openColorToggle('sidebarBodyColorToggle');\r\n  }\r\n\r\n  const changeSidebarHeadingColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, sidebarHeadingColor: color.hex });\r\n    changeFontColor(\"--color-sidebar-heading\", color.hex);\r\n    openColorToggle('sidebarHeadingColorToggle');\r\n  }\r\n\r\n  const changeMainBackgroundColor = (color) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, mainBackgroundColor: color.hex });\r\n    openColorToggle('mainBackgroundColorToggle');\r\n  }\r\n\r\n  const changeHeadingFont = (e, size) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, headingFontSize: size });\r\n  }\r\n\r\n  const changeSubheadingFont = (e, size) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, subheadingFontSize: size });\r\n  }\r\n\r\n  const changeBodyFont = (e, size) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, bodyFontSize: size });\r\n  }\r\n\r\n  const changeHeadingAlignment = (e, alignment) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, headingAlignment: alignment });\r\n  }\r\n\r\n  const onSave = () => {\r\n    props.updateGlobalSetting(props.resumeSettings);\r\n    closeEditor();\r\n  }\r\n\r\n  const openColorToggle = (colorToggleProp) => {\r\n    setColorsToggles({ ...colorsToggles, [colorToggleProp]: !colorsToggles[colorToggleProp] });\r\n  }\r\n\r\n  const changeSidebarPosition = (e, position) => {\r\n    props.setResumeSettings({ ...props.resumeSettings, sidebarPosition: position });\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      className=\"global-resume-setting\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      hideBackdrop\r\n    >\r\n      <DialogContent>\r\n        <div className=\"resume-setting-wrap\">\r\n\r\n          <div className=\"resume-setting-section\">\r\n            {/* ABOUT SECTION SETTING */}\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Resume Header Section</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className='resume-setting-selected-color' onClick={() => { openColorToggle('headerFontColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.aboutSectionFontColor }}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headerFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.aboutSectionFontColor} onChangeComplete={changeAboutSectionFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Background Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headerBackgroundColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.headerBackgroundColor }}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headerBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.headerBackgroundColor} onChangeComplete={changeHeaderBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Resume Main Section</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Heading Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headingFontColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.headingFontColor }}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.headingFontColor} onChangeComplete={changeHeadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Body Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('bodyFontColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.bodyFontColor }}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.bodyFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.bodyFontColor} onChangeComplete={changeBodyFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Background Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('mainBackgroundColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.mainBackgroundColor }}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.mainBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.mainBackgroundColor} onChangeComplete={changeMainBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Resume Sidebar Section</span>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Heading Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarHeadingColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.sidebarHeadingColor }}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.sidebarHeadingColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.sidebarHeadingColor} onChangeComplete={changeSidebarHeadingColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Body Font Color\r\n                <Box className='resume-setting-selected-color' onClick={() => { openColorToggle('sidebarBodyColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.sidebarBodyColor }}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.sidebarBodyColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.sidebarBodyColor} onChangeComplete={changeSidebarBodyColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Background Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarBackgroundColorToggle'); }} sx={{ backgroundColor: props.resumeSettings.sidebarBackgroundColor }}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.sidebarBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.sidebarBackgroundColor} onChangeComplete={changeSidebarBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Sidebar Position</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                <div className={`font-size-div ${props.resumeSettings.sidebarPosition === 'left' ? 'active' : ''}`} onClick={(event) => changeSidebarPosition(event, 'left')}>Left</div>\r\n                <div className={`font-size-div ${props.resumeSettings.sidebarPosition === 'right' ? 'active' : ''}`} onClick={(event) => changeSidebarPosition(event, 'right')}>Right</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Font Sizes</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Heading Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.headingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeHeadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">SubHeading Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.subheadingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeSubheadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Body Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.bodyFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeBodyFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Heading Styles</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Heading Alignment\r\n              </span>\r\n              <div className=\"resume-setting-item-body\">\r\n                <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'left' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'left')}>\r\n                  <FormatAlignLeftOutlinedIcon></FormatAlignLeftOutlinedIcon>\r\n                </div>\r\n\r\n                <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'center' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'center')}>\r\n                  <FormatAlignCenterOutlinedIcon></FormatAlignCenterOutlinedIcon>\r\n                </div>\r\n\r\n                <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'right' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'right')}>\r\n                  <FormatAlignRightOutlinedIcon></FormatAlignRightOutlinedIcon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Font Sizes</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Heading Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.headingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeHeadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headingFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.headingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={ props.resumeSettings.headingFontColor } onChangeComplete={changeHeadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Heading Alignment\r\n              </span>\r\n              <div className=\"resume-setting-item-body\">\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'left' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'left')}>\r\n                    <FormatAlignLeftOutlinedIcon></FormatAlignLeftOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'center' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'center')}>\r\n                    <FormatAlignCenterOutlinedIcon></FormatAlignCenterOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'right' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'right')}>\r\n                    <FormatAlignRightOutlinedIcon></FormatAlignRightOutlinedIcon>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Subheading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.subheadingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeSubheadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('subheadingFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.subheadingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.subheadingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.subheadingFontColor} onChangeComplete={changeSubheadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Body</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.bodyFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeBodyFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('bodyFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.bodyFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.bodyFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.bodyFontColor} onChangeComplete={changeBodyFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resume-setting-heading\">\r\n            <span>Backgrounds</span>\r\n          </div>\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Sidebar Background Color \r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarBackgroundColorToggle'); }} sx={{backgroundColor: props.resumeSettings.sidebarBackgroundColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.sidebarBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.sidebarBackgroundColor} onChangeComplete={changeSidebarBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions >\r\n        \r\n        <Button size=\"small\" variant=\"contained\" onClick={onSave}>Save Changes</Button>\r\n        <Box sx={{marginRight: '15px'}}></Box>\r\n        <Button size=\"small\" variant=\"outlined\" onClick={closeEditor}>Cancel</Button>\r\n        <Box sx={{marginRight: '15px'}}></Box>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(GlobalResumeSetting);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nconst AchievementEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [achievementItems, setAchievementItems] = useState(editorData.items);\r\n    const [showIcon, setShowIcon] = useState(editorData.showIcon);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowIconChange = (event) => {\r\n        setShowIcon(event.target.checked);\r\n    }\r\n\r\n\r\n    const onAchievementChange = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills[index] = { title: event.target.value };\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onAddAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setAchievementItems(skills);\r\n    }\r\n    const onDeleteAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index, 1);\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showIcon: showIcon, items: achievementItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Icon: <Switch label=\"Rounded\" onChange={onShowIconChange} checked={showIcon} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {achievementItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                        onChange={(event) => onAchievementChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        multiline\r\n                                        rows={2}\r\n                                        inputProps={{style: {fontSize: 14, lineHeight: 1.2}}}\r\n                                        style = {{width: 380}}\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddAchievement(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteAchievement(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!achievementItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default AchievementEditor;","import React, { useState } from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AchievementEditor from \"./AchievementEditor\";\r\n\r\nimport \"./Achievement.css\";\r\n\r\nconst Achievement = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling achievment', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-achievement\">\r\n      <div className=\"resume-section-title\">\r\n        <span>{props.componentItem.componentData.title}</span>\r\n        <span className=\"edit-component-icon\">\r\n          <EditIcon onClick={openEditor} />\r\n        </span>\r\n      </div> \r\n\r\n      <div className=\"achievement-item-wrap\">\r\n        {props.componentItem.componentData.items.map((item, index) => {\r\n          return (\r\n            <div key={`achievement-${index}`} className=\"achievement-item\">\r\n              <span className={`achievement-icon ${props.componentItem.componentData.showIcon ? '' : 'd-none'}`}>\r\n                <StarIcon />\r\n              </span>\r\n              <span className=\"achievement-summary\">\r\n                {item.title}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <AchievementEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Achievement);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst BasicInfoEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDataChange = (event, property) => {\r\n        const newName = event.target.value;\r\n        let newEditorData = {...editorData};\r\n        newEditorData = {...newEditorData, [property]: newName};\r\n        setEditorData(newEditorData);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth readOnly autoComplete='off' value='Basic Info' variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        <div className='editor-item' >\r\n                            <div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Full Name'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'fullName')}\r\n                                        value={editorData.fullName}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Current Role/Designation'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'currentRole')}\r\n                                        value={editorData.currentRole}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Email'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'email')}\r\n                                        value={editorData.email}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240} }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Phone'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'phone')}\r\n                                        value={editorData.phone}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Website'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'website')}\r\n                                        value={editorData.website}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Address'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'address')}\r\n                                        value={editorData.address}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BasicInfoEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport BasicInfoEditor from \"./BasicInfoEditor\";\r\n\r\nimport './BasicInfo.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }));\r\n\r\nconst BasicInfo = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <div className=\"resume-section resume-section-basic-info\">\r\n            {/* <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n            <span className=\"edit-component-icon\">\r\n                <EditIcon onClick={openEditor} />\r\n            </span> */}\r\n\r\n            <div className=\"basic-section-title\">\r\n                <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>\r\n            <p className=\"basic-info current-role\">{props.componentItem.componentData.currentRole}</p>\r\n            <div>\r\n            <Grid mt={1} \r\n            container \r\n            justifyContent=\"left\" \r\n            alignItems=\"center\" \r\n            rowSpacing={0.5} \r\n            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <PhoneIcon fontSize=\"15\"></PhoneIcon> \r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.phone}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <MailIcon fontSize=\"15\"></MailIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.email}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <LanguageIcon fontSize=\"15\"></LanguageIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.website}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <HomeIcon fontSize=\"15\"></HomeIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.address}</Box>\r\n                    </Item>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n\r\n            <BasicInfoEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(BasicInfo);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onEducationTitleChange = (event, index) => {\r\n        const newTitle = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], title: newTitle};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onUniversityChange = (event, index) => {\r\n        const newUniversity = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], university: newUniversity};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n\r\n    const onDateChange = (event, index) => {\r\n        const newDate = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], date: newDate};\r\n        console.log(educationItems);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onGpaChange = (event, index) => {\r\n        const newGPA = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], gpa: newGPA};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onAddEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index + 1, 0, { title: '', university: '', date: '', gpa: '' });\r\n        setEducationItems(newEducationItems);\r\n    }\r\n    const onDeleteEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index, 1);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        console.log('educationItems', educationItems);\r\n        setEditorData({ ...editorData, title: title,  items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            console.log('props', props);\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onEducationTitleChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onUniversityChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Date (From - To)'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onDateChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                placeholder='YYYY - YYYY'\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onGpaChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon onClick={(event) => onAddEducation(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon onClick={(event) => onDeleteEducation(event, index)}  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!educationItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;","import React, { useState } from \"react\";\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport EducationEditor from \"./EducationEditor\";\r\n\r\nimport './Education.css'\r\n\r\nconst Education = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling education', open);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-education\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>     \r\n            <div className=\"education-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div key={index} className=\"education-item\">\r\n                            <div className=\"resume-section-subtitle\">\r\n                                <span className=\"education-title full-width-field\">{item.title}</span>\r\n                                <span className=\"education-university full-width-field\">{item.university}</span>\r\n                            </div>\r\n                            <div className=\"section-meta\">\r\n                                {item.date && <div className=\"section-meta-item\">\r\n                                    <CalendarTodayIcon className=\"section-meta-icon resume-section-body\"></CalendarTodayIcon> \r\n                                    <div className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.date}</div>\r\n                                </div>}\r\n                                {item.gpa && <div className=\"section-meta-item\">\r\n                                    <SchoolIcon className=\"section-meta-icon resume-section-body\"></SchoolIcon>\r\n                                    <div className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.gpa}</div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <EducationEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(Education);","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst ExperienceEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [experienceItems, setExperienceItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"experienceItems\", experienceItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: experienceItems.filter(\r\n        (item, index) => item.experienceTitle.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onSummaryChange = (val, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      experienceSummary: val,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  }\r\n\r\n  const onAddExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index + 1, 0, {\r\n      experienceTitle: \"\",\r\n      company: \"\",\r\n      date: \"\",\r\n      location: \"\",\r\n      experienceSummary: \"\",\r\n    });\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index, 1);\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {experienceItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Job Role\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceTitle\")\r\n                        }\r\n                        value={item.experienceTitle}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Company\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"company\")\r\n                        }\r\n                        value={item.company}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Date (From - To)\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"date\")\r\n                        }\r\n                        value={item.date}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"location\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"location\")\r\n                        }\r\n                        value={item.location}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n\r\n                      <ReactQuill \r\n                      defaultValue={item.experienceSummary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onSummaryChange(val, index)\r\n                      } />\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddExperience(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!experienceItems.filter(item => item.experienceTitle.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExperienceEditor;\r\n","import React,{useState} from \"react\";\r\nimport {Box} from '@mui/material';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport './Experience.css'\r\nimport ExperienceEditor from \"./ExperienceEditor\";\r\n\r\n\r\nconst Experience = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    console.log('calling experience', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-experience\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n                </div>     \r\n            <div className=\"experience-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"experience-item\">\r\n                        <span className=\"experience-title full-width-field resume-section-subtitle\">{item.experienceTitle}</span>\r\n                        <div className=\"section-meta\">\r\n                            {item.company && <div className=\"section-meta-item\">\r\n                                <BusinessIcon fontSize=\"15\"></BusinessIcon> \r\n                                <Box component=\"span\" sx={{ pl: 1}}>{item.company}</Box>\r\n                            </div>}\r\n                            {item.date && <div className=\"section-meta-item\">\r\n                                <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                <Box component=\"span\" sx={{ pl: 1}}>{item.date}</Box>\r\n                            </div>}\r\n                            {item.location && <div className=\"section-meta-item\">\r\n                                <LocationOnIcon fontSize=\"15\"></LocationOnIcon>\r\n                                <Box component=\"span\" sx={{ pl: 1}}>{item.location}</Box>\r\n                            </div>}\r\n                        </div>\r\n                        <div className=\"experience-summary rich-text-div\" dangerouslySetInnerHTML={{__html: item.experienceSummary}}>\r\n\r\n                        </div>    \r\n                        \r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <ExperienceEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Experience);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst LanguagesEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [languageItems, setLanguageItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onLanguageChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages[index] = { language: event.target.value, proficiency: 'Beginner' };\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onAddLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index + 1, 0, { language: '' });\r\n        setLanguageItems(languages);\r\n    }\r\n    const onDeleteLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index, 1);\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        switch (event.target.value) {\r\n            case 25:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        \r\n            case 50:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Intermediate'};\r\n                break;\r\n            \r\n            case 75:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Proficient'};\r\n                break;\r\n\r\n            case 100:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Native'};\r\n                break;     \r\n            default:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        }\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: languageItems.filter((item, index) => item.language.length > 0) });\r\n        closeEditor();\r\n        setFirstTime(true);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    const getProficiencyValue = (prof) => {\r\n        let val = 25;\r\n        switch (prof) {\r\n            case 'Beginner':\r\n                val = 25;\r\n                break;\r\n        \r\n            case 'Intermediate':\r\n                val = 50;\r\n                break;\r\n            \r\n            case 'Proficient':\r\n                val = 75;\r\n                break;\r\n\r\n            case 'Native':\r\n                val = 100;\r\n                break;     \r\n            default:\r\n                val = 25\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {languageItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onLanguageChange(event, index)}\r\n                                        value={item.language}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ getProficiencyValue(item.proficiency) }\r\n                                            step={25}\r\n                                            marks\r\n                                            min={25}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddLanguage(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteLanguage(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!languageItems.filter(item => item.language.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LanguagesEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport LanguagesEditor from \"./LanguagesEditor\";\r\n\r\nimport \"./Languages.css\";\r\n\r\nconst Languages = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling languages', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  const getProgressFromProficiency = (proficiency) => {\r\n    let val = 25;\r\n    switch (proficiency) {\r\n        case 'Beginner':\r\n            val = 25;\r\n            break;\r\n    \r\n        case 'Intermediate':\r\n            val = 50;\r\n            break;\r\n        \r\n        case 'Proficient':\r\n            val = 75;\r\n            break;\r\n\r\n        case 'Native':\r\n            val = 100;\r\n            break;     \r\n        default:\r\n            val = 25\r\n            break;\r\n    }\r\n    return val;\r\n  }\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n            <EditIcon onClick={openEditor} />\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"language-wrapper\">\r\n          <div className=\"language-header\">\r\n              <div className=\"language-title\">{item.language}</div>\r\n              <div className={`language-level ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"language-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={ getProgressFromProficiency(item.proficiency) } />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n\r\n      <LanguagesEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Languages);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [professionalSummaryItems, setprofessionalSummaryItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"professionalSummaryItems\", professionalSummaryItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: professionalSummaryItems.filter(\r\n        (item, index) => item.summary.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (val, index, property) => {\r\n    const newValue = val;\r\n    let newprofessionalSummaryItems = [...professionalSummaryItems];\r\n    newprofessionalSummaryItems[index] = {\r\n      ...newprofessionalSummaryItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setprofessionalSummaryItems(newprofessionalSummaryItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {professionalSummaryItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n\r\n                    <ReactQuill \r\n                      defaultValue={item.summary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onFieldChange(val, index, \"summary\")\r\n                      } />\r\n                    </div>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!professionalSummaryItems.filter(item => item.summary.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React,{useState} from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport ProfessionalSummaryEditor from \"./ProfessionalSummaryEditor\";\r\n\r\nimport \"./ProfessionalSummary.css\";\r\n\r\nconst ProfessionalSummary = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log(\"calling ProfessionalSummary\", open);\r\n\r\n  const openEditor = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n<div className=\"resume-section resume-section-professional-summary\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"professional-summary-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='professional-summary-item' key={index}>\r\n                             <span className=\"professional-summary-summary-body rich-text-div\" dangerouslySetInnerHTML={{__html: item.summary}}></span>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <ProfessionalSummaryEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(ProfessionalSummary);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillItems, setSkillItems] = useState(editorData.items);\r\n    const [rounded, setRounded] = useState(editorData.rounded);\r\n    const [filled, setFilled] = useState(editorData.filled);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onRoundedChange = (event) => {\r\n        setRounded(event.target.checked);\r\n    }\r\n\r\n    const onFilledChange = (event) => {\r\n        setFilled(event.target.checked);\r\n    }\r\n\r\n    const onSkillChange = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills[index] = { title: event.target.value };\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onAddSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setSkillItems(skills);\r\n    }\r\n    const onDeleteSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index, 1);\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, rounded: rounded, filled: filled, title: title, items: skillItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Rounded: <Switch label=\"Rounded\" onChange={onRoundedChange} checked={rounded} />\r\n                        </div>\r\n                        <div>\r\n                            Filled: <Switch label=\"Filled\" onChange={onFilledChange} checked={filled} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onSkillChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddSkill(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkill(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsEditor;","import React, {useState} from 'react';\r\nimport { Chip } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsEditor from \"./SkillsEditor\";\r\n\r\nimport './Skills.css'\r\nconst Skills = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling skills', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-skills\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"skills-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <Chip key={index} label={item.title} className={`resume-section-body skills-chip ${props.componentItem.componentData.rounded ? '' : 'no-rounded'}`} variant={props.componentItem.componentData.filled ? 'filled' : 'outlined'} />\r\n                );\r\n            })}\r\n            </div>\r\n\r\n\r\n            <SkillsEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Skills);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsWithProgressEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillsProgressItems, setSkillsProgressItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onskillsProgressItemsChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = { title: event.target.value, proficiency: 0 };\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onAddSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index + 1, 0, { title: '', proficiency: 0 });\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n    const onDeleteSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index, 1);\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = {title: newSkillsProgressItems[index].title, proficiency: event.target.value};\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: skillsProgressItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillsProgressItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onskillsProgressItemsChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ Number(item.proficiency) }\r\n                                            step={10}\r\n                                            marks\r\n                                            min={0}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddSkills(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkills(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillsProgressItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsWithProgressEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsWithProgressEditor from \"./SkillsWithProgressEditor\";\r\n\r\nimport \"./SkillsWithProgress.css\";\r\n\r\nconst SkillsWithProgress = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling SkillsWith Progress Bar', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor} />\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className={props.componentItem.componentData.showProficiencyProgress ? 'skill-wrapper' : 'skill-wrapper min-margin'}>\r\n          <div className=\"skill-header\">\r\n              <div className=\"skill-title\">{item.title}</div>\r\n              <div className={`skill-percentage ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"skill-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={Number(item.proficiency)} />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n    <SkillsWithProgressEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(SkillsWithProgress);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [socialItems, setSocialItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"socialItems\", socialItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: socialItems.filter(\r\n        (item, index) => item.socialPlatform.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems[index] = {\r\n      ...newSocialItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onAddSocial = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index + 1, 0, {\r\n        socialPlatform: \"\",\r\n        username: \"\"\r\n    });\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index, 1);\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {socialItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Social Platform\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"socialPlatform\")\r\n                        }\r\n                        value={item.socialPlatform}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Username or URL\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"username\")\r\n                        }\r\n                        value={item.username}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddSocial(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!socialItems.filter(item => item.socialPlatform.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React, {useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SocialEditor from \"./SocialEditor\";\r\n\r\nimport './Social.css'\r\nconst Social = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling Social', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-Social\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"social-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='social-item' key={index}>\r\n                            <div className='social-platform resume-section-subtitle'>{item.socialPlatform}</div>\r\n                            <div className='social-username'>{item.username}</div>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n            <SocialEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Social);","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { Button, Box, Paper, Grid, Autocomplete, TextField, CircularProgress, Alert, Snackbar, LinearProgress } from '@mui/material';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getResumeDataByResumeId, updateResumeDataByResumeId } from '../../reducers/resumeDataSlice';\r\nimport { getResumeSettingsByResumeId, updateResumeSettingsByResumeId } from '../../reducers/resumeSettingsSlice';\r\nimport { getUserDataByUserId, updateUserResumeDataByUserId } from '../../reducers/userDataSlice';\r\n\r\nimport WebAssetOutlinedIcon from '@mui/icons-material/WebAssetOutlined';\r\nimport WebOutlinedIcon from '@mui/icons-material/WebOutlined';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@mui/icons-material/RemoveCircleOutlineOutlined';\r\nimport RemoveOutlinedIcon from '@mui/icons-material/RemoveOutlined';\r\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\r\nimport SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\r\nimport OpenWithIcon from '@mui/icons-material/OpenWith';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\r\nimport { useParams } from \"react-router-dom\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nimport './Builder.css'\r\nimport GlobalResumeSetting from \"../../components/GlobalResumeSetting/GlobalResumeSetting\";\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Achievement from '../../components/Achievements/Achievement'\r\nimport BasicInfo from '../../components/BasicInfo/BasicInfo'\r\nimport Education from '../../components/Education/Education'\r\nimport Experience from '../../components/Experience/Experience'\r\nimport Languages from '../../components/Languages/Languages';\r\nimport ProfessionalSummary from '../../components/ProfessionalSummary/ProfessionalSummary';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsWithProgress from '../../components/SkillsWithProgress/SkillsWithProgress';\r\nimport Social from '../../components/Social/Social';\r\n\r\n\r\nfunction Builder() {\r\n  let resumeHTML;\r\n  const { authReducer, resumeDataReducer, resumeSettingsReducer, userDataReducer } = useSelector((state) => state);\r\n  const [arr, setItems] = useState(null);\r\n  const [pageTwo, setPageTwo] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [openSnackbar, setopenSnackbar] = useState(false);\r\n  const [resumeSettings, setResumeSettings] = useState(null);\r\n\r\n  let { resumeId } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const openGlobalSetting = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('calling builder effect');\r\n    setItems(resumeDataReducer.resumeData);\r\n    setResumeSettings(resumeSettingsReducer.resumeSettings);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [resumeDataReducer]);\r\n\r\n  useEffect(() => {\r\n    if (authReducer.userId) {\r\n      console.log('calling builder auth effect');\r\n      getResumeData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n\r\n  function getResumeData() {\r\n    dispatch(getResumeDataByResumeId(resumeId)).then((res) => {\r\n      if (res.payload) {\r\n        setItems(res.payload);\r\n        console.log(res.payload);\r\n        setPageTwo(res.payload.pageTwo && res.payload.pageTwo.length > 0);\r\n      }\r\n    });\r\n\r\n    dispatch(getUserDataByUserId(authReducer.userId));\r\n\r\n    dispatch(getResumeSettingsByResumeId(resumeId)).then((res) => {\r\n      setResumeSettings(res.payload);\r\n      if (res.payload) {\r\n\r\n        // setTimeout(() => {\r\n        //   setopenSnackbar(true);\r\n        // }, 2000);\r\n\r\n        const root = document.querySelector(\":root\");\r\n        root.style.setProperty(\"--color-font-heading\", res.payload.headingFontColor);\r\n        root.style.setProperty(\"--color-font-subheading\", res.payload.subheadingFontColor);\r\n        root.style.setProperty(\"--color-font-body\", res.payload.bodyFontColor);\r\n        root.style.setProperty(\"--color-font-about-section\", res.payload.aboutSectionFontColor);\r\n        root.style.setProperty(\"--color-sidebar-body\", res.payload.sidebarBodyColor);\r\n        root.style.setProperty(\"--color-sidebar-heading\", res.payload.sidebarHeadingColor);\r\n\r\n\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateResumeData(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeDataByResumeId({ data: newData, resumeId: resumeId })).then((res) => {\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      checkForPageTwo(newData);\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  function updateGlobalSetting(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeSettingsByResumeId({ data: newData, resumeId: resumeId }));\r\n    }\r\n  }\r\n\r\n  const checkForPageTwo = (newData) => {\r\n    const paperheight = document.querySelector('#main .resume-paper-content').clientHeight;\r\n    const childs = document.querySelector('#main .resume-paper-content').children;\r\n    let height = 0;\r\n    for (var i = 0; i < childs.length; i++) {\r\n      height += childs[i].clientHeight;\r\n    }\r\n    if (height + 30 > paperheight) {\r\n      console.log('if- need Page two');\r\n      setPageTwo(true);\r\n\r\n      moveLastComponentToPageTwo(newData);\r\n    } else {\r\n      console.log('else-');\r\n      // setPageTwo(false);\r\n      console.log(paperheight, height);\r\n    }\r\n  }\r\n\r\n  const moveLastComponentToPageTwo = (newData) => {\r\n    let newArr = JSON.parse(JSON.stringify(newData));\r\n    newArr.pageTwo.push(newArr.main[newArr.main.length - 1]);\r\n    newArr.main.pop();\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const onSidebarSettingClick = () => {\r\n    if (resumeSettings.sidebar) {\r\n      const newArr = { ...arr, componentLibrary: [...arr['componentLibrary'], ...arr['sidebar']], sidebar: [] };\r\n      setItems(newArr);\r\n    }\r\n\r\n    setResumeSettings({ ...resumeSettings, sidebar: !resumeSettings.sidebar });\r\n    updateGlobalSetting({ ...resumeSettings, sidebar: !resumeSettings.sidebar });\r\n  }\r\n\r\n  const saveChanges = () => {\r\n    setIsLoading(true);\r\n    if (authReducer.userId) {\r\n      updateResumeData(arr);\r\n      updateResumeThumbnail();\r\n    }\r\n  }\r\n\r\n  const updateResumeThumbnail = () => {\r\n    const pageOneElement = document.querySelector(\"#pageOne\");\r\n    html2canvas(pageOneElement).then(function (canvas) {\r\n      const userResumesData = JSON.parse(userDataReducer.userData.userResumes);\r\n      userResumesData.filter(resume => resume.resumeId.toString() === resumeId.toString())[0].resumeImage = canvas.toDataURL(\"image/jpeg\");\r\n      dispatch(updateUserResumeDataByUserId({ userId: authReducer.userId, data: JSON.stringify(userResumesData) }));\r\n    });\r\n  }\r\n\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now())\r\n  }\r\n\r\n  const closeSnackBar = () => {\r\n    setopenSnackbar(false);\r\n  }\r\n\r\n  const copyComponent = (event, item, index, column) => {\r\n    item = { ...item, copy: true, name: `${item.name}-${getUniqueId()}` };\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index + 1, 0, item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const removeComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    newArr.componentLibrary.push(item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const addComponentToResume = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    newArr.main.push(item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const deleteComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n\r\n  const addResumePage = () => {\r\n    setPageTwo(true);\r\n    setTimeout(() => {\r\n      const body = document.getElementById('resumePageSeparator');\r\n      body.scrollIntoView({\r\n        behavior: 'smooth'\r\n      }, 300)\r\n    }, 200);\r\n  }\r\n\r\n  const removeResumePage = () => {\r\n    setPageTwo(false);\r\n\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    const mergedArr = [...newArr.componentLibrary, ...newArr.pageTwo];\r\n    newArr.componentLibrary = mergedArr;\r\n    newArr.pageTwo = [];\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    const { destination, source, draggableId } = result;\r\n    // if canceling the dragNdrop in between\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    // if rearranging in same column\r\n    if (destination.droppableId === source.droppableId) {\r\n      const newArr = Array.from(arr[source.droppableId]);\r\n      newArr.splice(source.index, 1);\r\n      newArr.splice(destination.index, 0, arr[destination.droppableId].filter(x => x.name === draggableId)[0]);\r\n\r\n      const colId = destination.droppableId;\r\n\r\n      const newColumn = {\r\n        ...arr,\r\n        [colId]: newArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    } else {\r\n      // Else if moving from sidebar to main column or vice-versa\r\n      const sourceId = source.droppableId;\r\n      const destId = destination.droppableId;\r\n      const sourceArr = Array.from(arr[source.droppableId]);\r\n      const destArr = Array.from(arr[destination.droppableId]);\r\n      // remove from source\r\n      sourceArr.splice(source.index, 1);\r\n      // add to destination\r\n      destArr.splice(destination.index, 0, arr[source.droppableId].filter(x => x.name === result.draggableId)[0]);\r\n      const newColumn = {\r\n        ...arr,\r\n        [sourceId]: sourceArr,\r\n        [destId]: destArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    }\r\n  }\r\n\r\n  function getComponent(componentType, item, columnName) {\r\n    switch (componentType) {\r\n      case 'Achievements':\r\n        return <Achievement componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'BasicInfo':\r\n        return <BasicInfo componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Experience':\r\n        return <Experience componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Education':\r\n        return <Education componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Languages':\r\n        return <Languages componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'ProfessionalSummary':\r\n        return <ProfessionalSummary componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Skills':\r\n        return <Skills componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'SkillsWithProgress':\r\n        return <SkillsWithProgress componentColumn={columnName} componentItem={item} />;\r\n\r\n      case 'Social':\r\n        return <Social componentColumn={columnName} componentItem={item} />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  if (arr && resumeSettings) {\r\n    resumeHTML = <DragDropContext onDragEnd={onDragEnd}>\r\n      <Snackbar open={openSnackbar} autoHideDuration={5000} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} onClose={closeSnackBar} >\r\n        <Alert variant=\"filled\" severity=\"success\" color=\"primary\" sx={{ width: '100%' }}>\r\n          New Widgets Available. Try Out.\r\n        </Alert>\r\n      </Snackbar>\r\n      <div className=\"resume-paper-wrap\">\r\n        <GlobalResumeSetting\r\n          resumeSettings={resumeSettings}\r\n          setResumeSettings={setResumeSettings}\r\n          updateGlobalSetting={updateGlobalSetting}\r\n          open={open}\r\n          setOpen={setOpen}>\r\n        </GlobalResumeSetting>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={8}>\r\n            <div className=\"layout-options\">\r\n              <div className=\"layout-option-items\">\r\n                <div className=\"layout-option-item\">\r\n                  {\r\n                    resumeSettings.sidebar ?\r\n                      <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<WebAssetOutlinedIcon />} onClick={onSidebarSettingClick} >Single Column</Button>\r\n                      : <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<WebOutlinedIcon />} onClick={onSidebarSettingClick} >Sidebar</Button>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"layout-option-item\">\r\n                  {\r\n                    pageTwo ?\r\n                      <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<RemoveCircleOutlineOutlinedIcon />} onClick={removeResumePage} >Remove Page</Button>\r\n                      : <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<AddCircleOutlineOutlinedIcon />} onClick={addResumePage} >Add Page</Button>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"layout-option-item\">\r\n                  <Button variant=\"outlined\" color=\"primary\" size=\"small\" startIcon={<SettingsOutlinedIcon />} onClick={openGlobalSetting}>Settings</Button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"layout-option-items\">\r\n                <div className=\"layout-option-item\">\r\n                  <Button\r\n                    onClick={window.print}\r\n                    startIcon={<FileDownloadOutlinedIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    disableElevation>\r\n                    Download\r\n                  </Button>\r\n                </div>\r\n                <div className=\"layout-option-item\">\r\n                  <Button className={isLoading ? 'item-disabled' : ''} color=\"primary\" variant=\"contained\" disableElevation size=\"small\" startIcon={<SaveOutlinedIcon />} onClick={saveChanges} >Save Changes</Button>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"resume-paper-container\" id=\"resumPaperContainer\">\r\n              <Paper className={`resume-paper heading-alignment-${resumeSettings.headingAlignment} heading-font-${resumeSettings.headingFontSize} subheading-font-${resumeSettings.subheadingFontSize} body-font-${resumeSettings.bodyFontSize}`} sx={{ fontSize: resumeSettings.bodyFontSize === 'medium' ? '15px' : resumeSettings.bodyFontSize }} elevation={3} >\r\n                <div id=\"pageOne\">\r\n                  <Grid item xs={12} id=\"header\" className={`${arr.header.length > 0 ? '' : 'no-padding'}`} sx={{ backgroundColor: resumeSettings.headerBackgroundColor, color: resumeSettings.aboutSectionFontColor }}>\r\n                    <Droppable droppableId=\"header\">\r\n                      {(provided, snapshot) => (\r\n                        <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                          {arr.header.map((item, index) => {\r\n                            return (\r\n                              <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                  <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                    {getComponent(item.componentType, item, 'header')}\r\n                                    <div className=\"overlay\">\r\n                                      <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                        <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                      </span>\r\n                                      <span className=\"copy-component\">\r\n                                        <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'header')} />\r\n                                      </span>\r\n                                      <span className=\"remove-component\">\r\n                                        <RemoveOutlinedIcon titleAccess=\"Remove From Resume\" onClick={(event) => removeComponent(event, item, index, 'header')} />\r\n                                      </span>\r\n                                      <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'header')} />\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                            );\r\n                          }\r\n                          )}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      )}\r\n                    </Droppable>\r\n                  </Grid>\r\n                  <div className={`resume-paper-main-content sidebar-${resumeSettings.sidebarPosition}`}>\r\n                    <Grid item xs={resumeSettings.sidebar ? 7 : 12} id=\"main\" className={`${arr.header.length > 0 ? '' : 'padding'}`} sx={{ backgroundColor: resumeSettings.mainBackgroundColor, color: resumeSettings.bodyFontColor }}>\r\n                      <Droppable droppableId=\"main\">\r\n                        {(provided, snapshot) => (\r\n                          <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                            {arr.main.map((item, index) => {\r\n                              return (\r\n                                <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                  {(provided, snapshot) => (\r\n                                    <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n\r\n                                      {getComponent(item.componentType, item, 'main')}\r\n                                      <div className=\"overlay\">\r\n                                        <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                          <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                        </span>\r\n                                        <span className=\"copy-component\">\r\n                                          <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'main')} />\r\n                                        </span>\r\n                                        <span className=\"remove-component\">\r\n                                          <RemoveOutlinedIcon titleAccess=\"Remove From Resume\" onClick={(event) => removeComponent(event, item, index, 'main')} />\r\n                                        </span>\r\n                                        <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                          <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'main')} />\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              );\r\n                            }\r\n                            )}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </Grid>\r\n\r\n                    {resumeSettings.sidebar ?\r\n                      <Grid item xs={5} id=\"sidebar\" sx={{ backgroundColor: resumeSettings.sidebarBackgroundColor, color: resumeSettings.sidebarBodyColor }} className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                        <Droppable droppableId=\"sidebar\">\r\n                          {(provided, snapshot) => (\r\n                            <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content resume-paper-content-draggin-over sidebar-column' : 'resume-paper-content sidebar-column'}>\r\n                              {provided.isDragging}\r\n                              {arr.sidebar.map((item, index) => {\r\n                                return (\r\n                                  <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                      <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        key={item.name}>\r\n                                        {getComponent(item.componentType, item, 'sidebar')}\r\n                                        <div className=\"overlay\">\r\n                                          <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                            <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                          </span>\r\n                                          <span className=\"copy-component\">\r\n                                            <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'sidebar')} />\r\n                                          </span>\r\n                                          <span className=\"remove-component\">\r\n                                            <RemoveOutlinedIcon titleAccess=\"Remove From Resume\" onClick={(event) => removeComponent(event, item, index, 'sidebar')} />\r\n                                          </span>\r\n                                          <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                            <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'sidebar')} />\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n                                    )}\r\n                                  </Draggable>\r\n                                );\r\n                              }\r\n                              )}\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          )}\r\n                        </Droppable>\r\n                      </Grid> : null}\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n              <Box sx={{ height: 30 }} id='resumePageSeparator'></Box>\r\n              {pageTwo ?\r\n                <Paper className={`resume-paper heading-alignment-${resumeSettings.headingAlignment} heading-font-${resumeSettings.headingFontSize} subheading-font-${resumeSettings.subheadingFontSize} body-font-${resumeSettings.bodyFontSize}`} sx={{ fontSize: resumeSettings.bodyFontSize, color: resumeSettings.bodyFontColor }} elevation={3} >\r\n                  <div id=\"pageTwo\">\r\n                    <Grid item xs={12} className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                      <Droppable droppableId=\"pageTwo\">\r\n                        {(provided, snapshot) => (\r\n                          <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                            <Suspense fallback={<div>Loading</div>}>\r\n                              {arr.pageTwo.map((item, index) => {\r\n                                return (\r\n                                  <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                      <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        key={item.name}>\r\n\r\n                                        {getComponent(item.componentType, item, 'pageTwo')}\r\n                                        <div className=\"overlay\">\r\n                                          <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                            <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                          </span>\r\n                                          <span className=\"copy-component\">\r\n                                            <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'pageTwo')} />\r\n                                          </span>\r\n                                          <span className=\"remove-component\">\r\n                                            <RemoveOutlinedIcon titleAccess=\"Remove From Resume\" onClick={(event) => removeComponent(event, item, index, 'pageTwo')} />\r\n                                          </span>\r\n                                          <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                            <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'pageTwo')} />\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n                                    )}\r\n                                  </Draggable>\r\n                                );\r\n                              }\r\n                              )}\r\n                              {provided.placeholder}\r\n                            </Suspense>\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </Grid>\r\n                  </div>\r\n                </Paper>\r\n                : null}\r\n            </div>\r\n          </Grid>\r\n          <Grid className=\"component-library-wrap\" item xs={4}>\r\n            <div className=\"component-library-header\">\r\n              <div>\r\n                <span className=\"component-library-title\">All Widgets</span>\r\n              </div>\r\n              <Autocomplete\r\n                id=\"component-library-filter\"\r\n                options={[\r\n                  { label: 'Education', id: 1 },\r\n                  { label: 'Skills', id: 2 },\r\n                ]}\r\n                sx={{ width: 150 }}\r\n                renderInput={(params) => <TextField {...params} placeholder=\"Filter\" variant=\"standard\" />}\r\n              />\r\n            </div>\r\n            <Paper style={{ padding: '20px' }} className=\"widget-library\" elevation={0}>\r\n\r\n              <Droppable droppableId=\"componentLibrary\">\r\n                {(provided, snapshot) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                    {provided.isDragging}\r\n                    <Suspense fallback={<div>Loading</div>}>\r\n                      {arr.componentLibrary.map((item, index) => {\r\n                        return (\r\n                          <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                            {(provided, snapshot) => (\r\n                              <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                key={item.name}>\r\n\r\n                                {getComponent(item.componentType, item, 'componentLibrary')}\r\n                                <div className=\"overlay\">\r\n                                  <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                    <OpenWithIcon titleAccess=\"Grab & Move\" />\r\n                                  </span>\r\n                                  <span className=\"copy-component\">\r\n                                    <ContentCopyOutlinedIcon titleAccess=\"Copy\" onClick={(event) => copyComponent(event, item, index, 'componentLibrary')} />\r\n                                  </span>\r\n                                  <span className=\"remove-component\">\r\n                                    <AddOutlinedIcon titleAccess=\"Add to Resume\" onClick={(event) => addComponentToResume(event, item, index, 'componentLibrary')} />\r\n                                  </span>\r\n                                  <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                    <DeleteOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'componentLibrary')} />\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      }\r\n                      )}\r\n                      {provided.placeholder}\r\n                    </Suspense>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </div>\r\n\r\n    </DragDropContext>;\r\n  } else {\r\n    resumeHTML = <div className=\"initial-loader\">\r\n      <CircularProgress />\r\n    </div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"builder-wrap\">\r\n      <LinearProgress className={isLoading ? '' : 'd-none'} color=\"primary\" />\r\n      {resumeHTML}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Builder;","export default __webpack_public_path__ + \"static/media/resume-2.edfc1b35.svg\";","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserDataByUserId, createNewReumseByUserId, updateUserResumeDataByUserId, deleteResumeByResumeId, copyResumeByResumeId } from '../../reducers/userDataSlice';\r\nimport { Button, Grid, CircularProgress, Box, LinearProgress, Dialog, DialogContent } from '@mui/material';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport CopyAllOutlinedIcon from '@mui/icons-material/CopyAllOutlined';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport ShareOutlinedIcon from '@mui/icons-material/ShareOutlined';\r\nimport resumeSvg from '../../assets/images/resume-2.svg';\r\nimport './Resumes.css'\r\n\r\nconst Resumes = () => {\r\n  const {authReducer} = useSelector((state) => state);\r\n  const [userData, setUserData] = useState(null);\r\n  const [userResumes, setUserResumes] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [previewResumeImageSrc, setPreviewResumeImageSrc] = useState('');\r\n  const history = useHistory();\r\n  const maxResumeNumber = 2;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(authReducer.userId) {\r\n      console.log('calling resume auth effect');\r\n      getUserData();\r\n    }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log('calling resume effect');\r\n  //   setUserData(userDataReducer.userData);\r\n  //   //setUserResumes(userDataReducer.userData.userResumes);\r\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [userDataReducer]);\r\n\r\n  const closeEditor = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const previewResume = (resumeImage) => {\r\n    setOpen(true);\r\n    setPreviewResumeImageSrc(resumeImage);\r\n  }\r\n\r\n\r\n  const getUserData = () => {\r\n    dispatch(getUserDataByUserId(authReducer.userId)).then((res) => {\r\n      if (res.payload) {\r\n        setUserData(res.payload);\r\n        setUserResumes(JSON.parse(res.payload.userResumes));\r\n      }\r\n    });\r\n  }\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now());\r\n  }\r\n\r\n  const createNewResume = () => {\r\n    setIsLoading(true);\r\n    const uniqueId = getUniqueId();\r\n\r\n    if (authReducer.userId) {\r\n      dispatch(createNewReumseByUserId({data:userResumes, userData: userData, uniqueId: uniqueId})).then((res) => {\r\n        setUserResumes(res.payload);\r\n        setIsLoading(false);\r\n        history.push(`builder/${uniqueId}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDeleteResume = (resumeId) => {\r\n    setIsLoading(true);\r\n    const userResumeData = JSON.parse(JSON.stringify(userResumes));\r\n    const newResumeData = userResumeData.filter((item) => item.resumeId !== resumeId);\r\n\r\n    dispatch(deleteResumeByResumeId(resumeId));\r\n    \r\n    setUserResumes(newResumeData);\r\n    dispatch(updateUserResumeDataByUserId({userId: authReducer.userId, data: JSON.stringify(newResumeData)})).then((res) => {\r\n      setIsLoading(false);\r\n    });\r\n\r\n  }\r\n\r\n  const onDuplicateResume = (resumeId) => {\r\n    setIsLoading(true);\r\n    dispatch(getUserDataByUserId(authReducer.userId)).then((res) => {\r\n      if (res.payload) {\r\n        if (JSON.parse(res.payload.userResumes).length < maxResumeNumber) {\r\n          const uniqueId = getUniqueId();\r\n          const userResumeData = JSON.parse(JSON.stringify(userResumes));\r\n          const copyFrom = userResumeData.filter((item) => item.resumeId === resumeId)[0];\r\n          userResumeData.push({\r\n            resumeId: uniqueId.toString(),\r\n            resumeName: `${copyFrom.resumeName} (copy)`,\r\n            resumeImage: copyFrom.resumeImage,\r\n          });\r\n          \r\n          dispatch(updateUserResumeDataByUserId({userId: authReducer.userId, data: JSON.stringify(userResumeData)}));\r\n          dispatch(copyResumeByResumeId({resumeId: resumeId, uniqueId: uniqueId})).then((res) => {\r\n            setUserResumes(userResumeData);\r\n            setIsLoading(false);\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n          setUserData(res.payload);\r\n          setUserResumes(JSON.parse(res.payload.userResumes));\r\n        }\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"user-resumes-wrap\">\r\n\r\n      <Dialog open={open} onClose={closeEditor} scroll='body'>\r\n        <DialogContent className=\"preview-dialog-content\">\r\n          <img alt=\"Resume Preview\" className=\"resume-preview\" src={previewResumeImageSrc}/>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n\r\n      <div className=\"resume-header\">\r\n        <h1>My Resumes</h1>\r\n        {userResumes && userResumes.length < maxResumeNumber && <Button\r\n            startIcon={<AddCircleOutlineOutlinedIcon />}\r\n            size=\"small\"\r\n            onClick={createNewResume}\r\n            variant=\"contained\"\r\n            color=\"primary\" \r\n            disableElevation\r\n            className=\"header-create-resume-button\">\r\n                New Resume\r\n        </Button>}\r\n      </div>\r\n      <LinearProgress className={isLoading ? '' : 'd-none'} color=\"primary\" />\r\n\r\n       \r\n      {userResumes ?\r\n        userResumes.length > 0 ?\r\n          <div className=\"user-resume-list-wrap\">\r\n            {\r\n              userResumes.map((item, index) => {\r\n                return (\r\n                    <div className='resume-item' key={index}>\r\n                      \r\n                      <div className=\"resume-thumbnail\" style={{backgroundImage: `url(${item.resumeImage})`}}> </div>\r\n                      <div className=\"resume-actions\">\r\n                        <div className=\"resume-action-item name\">\r\n                          <span>{item.resumeName}</span>\r\n                        </div>\r\n                        <div className=\"resume-action-item date\">\r\n                          <span>Feb 2, 2020 2.45 PM</span>\r\n                        </div>\r\n                        <Box sx={{height: '40px'}}></Box>\r\n                        {/* EDIT ACTION */}\r\n                        <div className=\"resume-action-item link\" onClick={() => { history.push(`builder/${item.resumeId}`); }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <EditOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Edit\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* COPY ACTION */}\r\n                        { userResumes.length < maxResumeNumber && \r\n                        <div className={`resume-action-item link ${isLoading ? 'item-disabled' : ''}`} onClick={() => { onDuplicateResume(item.resumeId); }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <CopyAllOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Duplicate\r\n                          </span>\r\n                        </div>\r\n                        }\r\n\r\n                        {/* PREVIEW ACTION */}\r\n                        <div className=\"resume-action-item link\" onClick={() => { previewResume(item.resumeImage); }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <VisibilityOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Preview\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* SHARE ACTION */}\r\n                        <div className=\"resume-action-item link\">\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <ShareOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Share\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* DELETE ACTION */}\r\n                        <div className=\"resume-action-item link\" onClick={() => { onDeleteResume(item.resumeId) }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <DeleteOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Delete\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n          :\r\n          <Grid\r\n            container\r\n            className=\"no-resume-wrap\"\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid \r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\" item xs={3}>\r\n              <div className=\"no-resume-text\">No resume created, please create one.</div>\r\n              <img className=\"no-resume-img\" alt=\"Create Resume\" src={resumeSvg} />\r\n            </Grid>   \r\n          </Grid>\r\n      :\r\n      <Grid\r\n            container\r\n            className=\"no-resume-wrap\"\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n              <CircularProgress />\r\n      </Grid>\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resumes;","import React from \"react\";\r\nimport { Container, Box } from \"@mui/material\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Box m=\"auto\" textAlign=\"center\">\r\n                <h1>Home</h1>\r\n            </Box> \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;","import './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport GlobalHeader from '../GlobalHeader/GlobalHeader';\r\nimport About from '../../pages/About/About';\r\nimport Contact from '../../pages/Contact/Contact';\r\nimport Builder from '../../pages/Builder/Builder';\r\nimport Resumes from '../../pages/Resumes/Resumes';\r\nimport Home from '../../pages/Home/Home';\r\n\r\nfunction App() {\r\nconst isSignedIn = useSelector(state => state.authReducer.isSignedIn);\r\n  return (\r\n      <Router>\r\n        <GlobalHeader/>\r\n          <Switch>\r\n            <Route path=\"/builder/:resumeId?\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Builder></Builder>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact/>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About/>\r\n            </Route>\r\n            <Route exact path=\"/resumes\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Resumes></Resumes>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home/>\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\n// Or Create your Own theme:\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#09915A'\r\n      },\r\n      // text: {\r\n      //   primary: 'rgba(0, 0, 0, 0.90)',\r\n      //   secondary: 'red',\r\n      // }\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        variants: [\r\n          {\r\n            props: { variant: 'space-40', color: 'primary' },\r\n            style: {\r\n              paddingLeft: '40px',\r\n              paddingRight: '40px'\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  export default theme;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authSlice from \"./authSlice\";\r\nimport userDataSlice from './userDataSlice';\r\nimport resumeDataSlice from \"./resumeDataSlice\";\r\nimport resumeSettingsSlice from \"./resumeSettingsSlice\";\r\n\r\n// export default combineReducers({\r\n//     authReducer: authReducer\r\n// });\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authReducer: authSlice,\r\n    userDataReducer: userDataSlice,\r\n    resumeDataReducer: resumeDataSlice,\r\n    resumeSettingsReducer: resumeSettingsSlice\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme'\nimport {store} from './reducers';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}