{"version":3,"sources":["logo.svg","reducers/authSlice.js","firebase.js","components/Login/GoogleLogin.js","components/GlobalHeader/GlobalHeader.js","pages/About/About.js","pages/Contact/Contact.js","reducers/resumeDataSlice.js","reducers/resumeSettingsSlice.js","globals.js","components/GlobalResumeSetting/GlobalResumeSetting.js","components/Achievements/AchievementEditor.js","components/Achievements/Achievement.js","components/BasicInfo/BasicInfoEditor.js","components/BasicInfo/BasicInfo.js","components/Education/EducationEditor.js","components/Education/Education.js","components/Experience/ExperienceEditor.js","components/Experience/Experience.js","components/Languages/LanguagesEditor.js","components/Languages/Languages.js","components/ProfessionalSummary/ProfessionalSummaryEditor.js","components/ProfessionalSummary/ProfessionalSummary.js","components/Skills/SkillsEditor.js","components/Skills/Skills.js","components/SkillsWithProgress/SkillsWithProgressEditor.js","components/SkillsWithProgress/SkillsWithProgress.js","components/Social/SocialEditor.js","components/Social/Social.js","pages/Builder/Builder.js","reducers/userDataSlice.js","assets/images/resume-2.svg","pages/Resumes/Resumes.js","pages/Home/Home.js","components/App/App.js","theme/index.js","reducers/index.js","index.js"],"names":["INITIAL_STATE","isSignedIn","localStorage","getItem","userId","name","email","authSlice","createSlice","initialState","reducers","signInAction","state","action","payload","signOutAction","actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","GoogleLogin","onAuthChange","isSignedInStatus","props","auth","currentUser","get","getId","getBasicProfile","getName","getEmail","onSignInClick","signIn","then","firestore","collection","doc","exists","setItem","getAuthResponse","id_token","history","replace","set","userResumes","JSON","stringify","catch","error","console","log","onSignOutClick","signOut","removeItem","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","this","className","CircularProgress","size","Button","component","NavLink","to","exact","variant","color","disableElevation","onClick","renderAuthButton","Component","mapDispatchToProps","connect","authReducer","withRouter","GlobalHeader","useLocation","pathname","Box","sx","flexGrow","AppBar","elevation","position","Toolbar","src","logo","alt","React","memo","About","Container","maxWidth","m","textAlign","Contact","getResumeDataByResumeId","createAsyncThunk","resumeId","thunkAPI","a","data","response","parse","resumeJson","updateResumeDataByResumeId","apiData","update","resumeDataSlice","resumeData","loading","updateResumeDataReducer","column","filter","item","componentData","extraReducers","builder","addCase","fulfilled","getResumeSettingsByResumeId","resumeSettings","updateResumeSettingsByResumeId","resumeSettingsSlice","updateSettingsDataReducer","richEditorSettings","toolbar","initialData","bodyFontSize","headingFontSize","subheadingFontSize","bodyFontColor","headingFontColor","subheadingFontColor","headerBackgroundColor","sidebarBackgroundColor","aboutSectionFontColor","headingAlignment","header","componentType","path","title","items","summary","main","university","date","gpa","showIcon","experienceTitle","company","location","experienceSummary","sidebar","filled","rounded","socialPlatform","username","pageTwo","componentLibrary","showProficiency","showProficiencyProgress","language","proficiency","colors","fontSizes","value","label","GlobalResumeSetting","useState","headerFontColorToggle","headingFontColorToggle","subheadingFontColorToggle","bodyFontToggle","headerBackgroundColorToggle","sidebarBackgroundColorToogle","colorsToggles","setColorsToggles","closeEditor","setOpen","changeFontColor","property","document","querySelector","style","setProperty","changeHeadingAlignment","e","alignment","setResumeSettings","openColorToggle","colorToggleProp","Dialog","fullWidth","open","onClose","DialogContent","backgroundColor","onChangeComplete","hex","triangle","map","font","index","event","bodyFontColorToggle","sidebarBackgroundColorToggle","DialogActions","updateGlobalSetting","AchievementEditor","editorData","setEditorData","firstime","setFirstTime","setTitle","achievementItems","setAchievementItems","setShowIcon","dispatch","useDispatch","useEffect","componentName","componentColumn","TextField","autoComplete","onChange","newVal","target","Switch","checked","mb","mt","mr","skills","onAchievementChange","multiline","rows","inputProps","fontSize","lineHeight","width","splice","onAddAchievement","onDeleteAchievement","length","disabled","Achievement","componentItem","BasicInfoEditor","onDataChange","newName","newEditorData","readOnly","fullName","currentRole","phone","website","address","Item","styled","theme","typography","caption","display","alignItems","BasicInfo","Grid","container","justifyContent","rowSpacing","columnSpacing","xs","sm","md","pl","EducationEditor","educationItems","setEducationItems","newTitle","newEducationItems","onEducationTitleChange","newUniversity","onUniversityChange","newDate","onDateChange","placeholder","newGPA","onGpaChange","onAddEducation","onDeleteEducation","height","Divider","palette","text","secondary","Education","ExperienceEditor","experienceItems","setExperienceItems","onFieldChange","newValue","newExperienceItems","defaultValue","modules","val","onSummaryChange","onAddExperience","onDeleteExperience","Experience","dangerouslySetInnerHTML","__html","LanguagesEditor","languageItems","setLanguageItems","setShowProficiency","setShowProficiencyProgress","getProficiencyValue","prof","onShowProficiencyChange","onShowProficiencyProgressChange","languages","onLanguageChange","Slider","step","marks","min","max","onProficiencyChange","onAddLanguage","onDeleteLanguage","Languages","getProgressFromProficiency","LinearProgress","SocialEditor","professionalSummaryItems","setprofessionalSummaryItems","newprofessionalSummaryItems","ProfessionalSummary","ProfessionalSummaryEditor","SkillsEditor","skillItems","setSkillItems","setRounded","setFilled","onSkillChange","onAddSkill","onDeleteSkill","Skills","Chip","SkillsWithProgressEditor","skillsProgressItems","setSkillsProgressItems","newSkillsProgressItems","onskillsProgressItemsChange","Number","onAddSkills","onDeleteSkills","SkillsWithProgress","socialItems","setSocialItems","newSocialItems","onAddSocial","Social","Builder","resumeHTML","useSelector","resumeDataReducer","resumeSettingsReducer","arr","setItems","setSidebar","setPageTwo","openSnackbar","setopenSnackbar","useParams","updateResumeData","newData","res","setTimeout","root","copyComponent","copy","Math","floor","random","Date","now","newArr","deleteComponent","getComponent","columnName","onDragEnd","result","destination","source","draggableId","droppableId","Array","from","x","colId","newColumn","sourceId","destId","sourceArr","destArr","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","spacing","icon","mergedArr","getElementById","scrollIntoView","behavior","test","html2canvas","canvas","dir","toDataURL","id","Paper","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","fallback","isDragging","draggableProps","key","dragHandleProps","Autocomplete","options","renderInput","params","padding","Link","underline","href","print","getUserDataByUserId","updateUserDataByUserId","userResumeData","resumeName","uniqueId","resumeImage","newResumesArr","userData","userDataSlice","updateUserDataReducer","Resumes","userDataReducer","setUserData","setUserResumes","useHistory","getUserData","startIcon","push","backgroundImage","newResumeData","delete","onDeleteResume","direction","resumeSvg","Home","App","createTheme","primary","components","MuiButton","variants","paddingLeft","paddingRight","store","configureStore","reducer","ReactDOM","render","ThemeProvider"],"mappings":"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","file":"static/js/main.c905481c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn : (localStorage.getItem('token') == null) ? false : true,\r\n    userId: null,\r\n    name: null,\r\n    email: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        signInAction: (state, action) => {\r\n            state.isSignedIn = true;\r\n            state.userId = action.payload.userId;\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n        },\r\n        signOutAction: (state) => {\r\n            state.isSignedIn = false;\r\n            state.userId = null;\r\n            state.name = null;\r\n            state.email = null;\r\n        },\r\n    },\r\n  });\r\n  \r\nexport const { signInAction, signOutAction } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBjh7R7l6f9rTW8Oll_uzx2q50uJNWRjbU\",\r\n  authDomain: \"resume-builder-c4248.firebaseapp.com\",\r\n  projectId: \"resume-builder-c4248\",\r\n  storageBucket: \"resume-builder-c4248.appspot.com\",\r\n  messagingSenderId: \"790181104761\",\r\n  appId: \"1:790181104761:web:3f3e105c4d46cd7c09d8a8\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAction, signOutAction } from \"../../reducers/authSlice.js\";\r\nimport { withRouter, NavLink } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\n\r\nclass GoogleLogin extends Component {\r\n  // If not using arrow function then we need to bind `this` like below\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {isSignedIn: null};\r\n  //     this.onAuthChange = this.onAuthChange.bind(this)\r\n  // }\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"1051932499833-smce802vivdpiijmo5bg4donrr6n40fg.apps.googleusercontent.com\",\r\n          scope: \"email profile\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // listen for auth changes in future\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedInStatus) => {\r\n    if (isSignedInStatus) {\r\n      this.props.signInAction({\r\n        userId: this.auth.currentUser.get().getId(),\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n    } else {\r\n      this.props.signOutAction();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn().then(() => {\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const name = this.auth.currentUser.get().getBasicProfile().getName();\r\n      const email = this.auth.currentUser.get().getBasicProfile().getEmail();\r\n      this.props.signInAction({\r\n        userId: userId,\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n\r\n      // If first time user then create a new resume\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .get()\r\n        .then((doc) => {\r\n          // Existing user then redirect else create a new resume\r\n          if (doc.exists) {\r\n            localStorage.setItem(\r\n              \"token\",\r\n              this.auth.currentUser.get().getAuthResponse().id_token\r\n            );\r\n            this.props.history.replace(\"resumes\");\r\n          } else {\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(`${userId}`)\r\n              .set({\r\n                userResumes: JSON.stringify([]),\r\n                userId: userId,\r\n                name: name,\r\n                email: email,\r\n              })\r\n              .then(() => {\r\n                localStorage.setItem(\r\n                  \"token\",\r\n                  this.auth.currentUser.get().getAuthResponse().id_token\r\n                );\r\n                this.props.history.replace(`resumes`);\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut().then(() => {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.signOutAction();\r\n    });\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return (\r\n        <div className=\"header-login-button-wrap\">\r\n          <CircularProgress className=\"login-loader\" size={18} />\r\n        </div>\r\n      );\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <>\r\n          <Button\r\n              component={NavLink}\r\n              to=\"/resumes\"\r\n              exact\r\n              variant=\"text\"\r\n              color=\"primary\" \r\n              disableElevation\r\n              className=\"mobile-d-none header-menu-link\">\r\n                  My Resumes\r\n          </Button>\r\n          <Button\r\n            onClick={this.onSignOutClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            className=\"header-login-button\"\r\n          >\r\n            Logout\r\n          </Button>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignInClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Create Resume\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderAuthButton();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { signInAction, signOutAction };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(GoogleLogin));\r\n","import React from \"react\";\r\nimport {AppBar, Box, Toolbar, Button} from '@mui/material';\r\nimport logo from '../../logo.svg';\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport GoogleLogin from '../Login/GoogleLogin'\r\n\r\nimport './GlobalHeader.css'\r\n\r\nconst GlobalHeader = () => {\r\n    return (useLocation().pathname !== '/builder') ? (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar elevation={0} className=\"global-header\" color=\"transparent\" position=\"static\">\r\n                <Toolbar>\r\n                    <img src={logo} className=\"header-logo\" alt=\"Resume Builder\"/>\r\n                    <div className=\"header-logo-text\">\r\n                        <span>Resume Builder</span>\r\n                    </div>\r\n                    <nav>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/\"\r\n                            exact\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Home\r\n                        </Button>\r\n                        \r\n                        {/* <Button \r\n                            component={NavLink}\r\n                            to=\"/about\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                About\r\n                        </Button>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/contact\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Contact\r\n                        </Button> */}\r\n                        <GoogleLogin></GoogleLogin>\r\n                    </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    ) : <span></span>\r\n}\r\n\r\nexport default  React.memo(GlobalHeader);","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>About</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>Contact</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeData: null, loading: 'idle',\r\n};\r\n\r\nexport const getResumeDataByResumeId = createAsyncThunk(\r\n  'resume/getResumeDataByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n    console.log('calling api');\r\n    const response = await (await firebase.firestore().collection('resumes').doc(resumeId).get()).data();\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeDataByResumeId = createAsyncThunk(\r\n  'resume/updateResumeDataByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"resumes\").doc(apiData.resumeId).update({resumeJson: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n);\r\n  \r\n\r\nexport const resumeDataSlice = createSlice({\r\n    name: 'resumeDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateResumeDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeData));\r\n            data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getResumeDataByResumeId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeDataByResumeId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateResumeDataReducer } = resumeDataSlice.actions;  \r\n\r\nexport default resumeDataSlice.reducer;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeSettings: null,\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getResumeSettingsByResumeId = createAsyncThunk(\r\n  'resume/getResumeSettingsByResumeId',\r\n  async (resumeId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('resumes').doc(resumeId).get()).data();\r\n    return JSON.parse(response.resumeSettings);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeSettingsByResumeId = createAsyncThunk(\r\n  'resume/updateResumeSettingsByResumeId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"resumes\").doc(apiData.resumeId).update({resumeSettings: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n)\r\n  \r\n\r\nexport const resumeSettingsSlice = createSlice({\r\n    name: 'resumeSettingsSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateSettingsDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeSettings));\r\n            //data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getResumeSettingsByResumeId.fulfilled, (state, action) => {\r\n            state.resumeSettings = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateResumeSettingsByResumeId.fulfilled, (state, action) => {\r\n          state.resumeSettings = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateSettingsDataReducer } = resumeSettingsSlice.actions;  \r\n\r\nexport default resumeSettingsSlice.reducer;","export const richEditorSettings = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n    [{ 'align': [] }],\r\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n    [{ 'color': [] }, { 'background': [] }],\r\n    ['link', 'image'],\r\n    ['clean']\r\n  ],\r\n};\r\n\r\nexport const initialData = {\r\n  resumeSettings: {\r\n    bodyFontSize: 'small',\r\n    headingFontSize: 'large',\r\n    subheadingFontSize: 'small',\r\n    bodyFontColor: '#000000',\r\n    headingFontColor: '#000000',\r\n    subheadingFontColor: '#000000',\r\n    headerBackgroundColor: '#ffffff',\r\n    sidebarBackgroundColor: '#ffffff',\r\n    aboutSectionFontColor: '#000000',\r\n    headingAlignment: 'left',\r\n  },\r\n  resumeJson: {\r\n  header: [\r\n      {\r\n          name: \"BasicInfo\",\r\n          componentType: 'BasicInfo',\r\n          path: \"BasicInfo/BasicInfo\"\r\n      },\r\n      {\r\n          name: \"ProfessionalSummary\",\r\n          componentType: 'ProfessionalSummary',\r\n          path: \"ProfessionalSummary/ProfessionalSummary\",\r\n          componentData: {\r\n              title: \"Professional Summary\",\r\n              items: [\r\n                {\r\n                  summary: \"This is summary body.\"\r\n                },\r\n              ],\r\n          }\r\n      }\r\n\r\n  ],\r\n  main: [\r\n    {\r\n      name: \"Education\",\r\n      componentType: 'Education',\r\n      path: \"Education/Education\",\r\n      componentData: {\r\n        title: \"Education\",\r\n        items: [\r\n          {\r\n            title: \"Executive MBA, Engineering Management\",\r\n            university: \"The University of Arizona\",\r\n            date: \"2010 - 2014\",\r\n            gpa: \"CGPA 09/10\",\r\n          },\r\n          {\r\n            title: \"Engineering Management\",\r\n            university: \"The University of California, Berkeley\",\r\n            date: \"2008 - 2010\",\r\n            gpa: \"CGPA 7.5/10\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Achievements\",\r\n      componentType: 'Achievements',\r\n      path: \"Achievements/Achievement\",\r\n      componentData: {\r\n        title: \"Achievements\",\r\n        showIcon: true,\r\n        items: [\r\n          {\r\n            title:\r\n              \"Won Best Employee Award for last 2 consecutive year (2020 & 2021). Won Best Employee Award for last 2 consecutive year (2020 & 2021).\",\r\n          },\r\n          { title: \"Won inter-zone cricket competition (2020). \" },\r\n          {\r\n            title: \"Runner up for state level table tennis competition (2020).\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Experience\",\r\n      componentType: 'Experience',\r\n      path: \"Experience/Experience\",\r\n      componentData: {\r\n        title: \"Experience\",\r\n        items: [\r\n          {\r\n            experienceTitle: \"Android Developer\",\r\n            company: \"Google\",\r\n            date: \"2018 - 2020\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 3 key projects of major clients.\",\r\n          },\r\n          {\r\n            experienceTitle: \"Front End Developer\",\r\n            company: \"Amazon\",\r\n            date: \"2014 - 2018\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 4 key projects of major clients.\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  sidebar: [\r\n    {\r\n      name: \"Skills\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"HTML\" },\r\n          { title: \"CSS\" },\r\n          { title: \"JavaScript\" },\r\n          { title: \"React\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Tools\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Tools\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [{ title: \"Git\" }, { title: \"Webpack\" }, { title: \"Gulp\" }],\r\n      },\r\n    },\r\n    {\r\n      name: \"Hobbies\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Hobbies\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"Reading\" },\r\n          { title: \"Swimming\" },\r\n          { title: \"Hiking\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Social\",\r\n      componentType: 'Social',\r\n      path: \"Social/Social\",\r\n      componentData: {\r\n        title: \"Social\",\r\n        items: [\r\n          {\r\n            socialPlatform: \"Github\",\r\n            username: \"@username\",\r\n          },\r\n          {\r\n            socialPlatform: \"LinkedIn\",\r\n            username: \"@username\",\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n  pageTwo: [],\r\n  componentLibrary: [\r\n    {\r\n      name: \"Languages\",\r\n      componentType: 'Languages',\r\n      path: \"Languages/Languages\",\r\n      componentData: {\r\n        title: \"Languages\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { language: \"English\", proficiency: \"Proficient\" },\r\n          { language: \"Hindi\", proficiency: \"Native\" },\r\n          { language: \"Spanish\", proficiency: \"Beginner\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"SkillsWithProgress\",\r\n      componentType: 'SkillsWithProgress',\r\n      path: \"SkillsWithProgress/SkillsWithProgress\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { title: \"HTML\", proficiency: 80 },\r\n          { title: \"CSS\", proficiency: 80 },\r\n          { title: \"Javascript\", proficiency: \"70\" },\r\n          { title: \"React\", proficiency: 50 },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n}\r\n};\r\n\r\nexport const colors = ['#000000', '#ffffff', '#483d8b', '#f0f8ff', '#2f4f4f', '#bdb76b', '#183141', '#ffd700', '#D9E2E9', '#141428', '#94AA9E', '#B5282E', '#808000', '#191970', '#FBECD7', '#dc143c' ];\r\n\r\n\r\nexport const fontSizes = [\r\n  {\r\n    value: \"x-small\",\r\n    label: \"XS\",\r\n  },\r\n  {\r\n    value: \"small\",\r\n    label: \"S\",\r\n  },\r\n  {\r\n    value: \"medium\",\r\n    label: \"M\",\r\n  },\r\n  {\r\n    value: \"large\",\r\n    label: \"L\",\r\n  },\r\n  {\r\n    value: \"larger\",\r\n    label: \"XL\",\r\n  }\r\n];\r\n\r\nexport const headingAlignment = [\r\n  {\r\n    value: \"left\",\r\n    label: \"Left\",\r\n  },\r\n  {\r\n    value: \"center\",\r\n    label: \"Center\",\r\n  },\r\n  {\r\n    value: \"right\",\r\n    label: \"Right\",\r\n  }\r\n];","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { GithubPicker } from 'react-color';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { fontSizes, colors } from '../../globals.js';\r\nimport FormatAlignLeftOutlinedIcon from '@mui/icons-material/FormatAlignLeftOutlined';\r\nimport FormatAlignCenterOutlinedIcon from '@mui/icons-material/FormatAlignCenterOutlined';\r\nimport FormatAlignRightOutlinedIcon from '@mui/icons-material/FormatAlignRightOutlined';\r\n\r\nimport \"./GlobalResumeSetting.css\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst GlobalResumeSetting = (props) => {\r\n\r\n  const [colorsToggles, setColorsToggles] = useState({\r\n    headerFontColorToggle: false,\r\n    headingFontColorToggle: false,\r\n    subheadingFontColorToggle: false,\r\n    bodyFontToggle: false,\r\n    headerBackgroundColorToggle: false,\r\n    sidebarBackgroundColorToogle: false,\r\n  });\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const changeFontColor = (property, color) => {\r\n    const root = document.querySelector(\":root\");\r\n    root.style.setProperty(property, color)\r\n  }\r\n\r\n  const changeAboutSectionFontColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, aboutSectionFontColor: color.hex});\r\n    openColorToggle('headerFontColorToggle');\r\n    changeFontColor(\"--color-font-about-section\", color.hex);\r\n  }\r\n\r\n  const changeHeadingFontColor = (color) => {\r\n   props.setResumeSettings({...props.resumeSettings, headingFontColor: color.hex});\r\n   changeFontColor(\"--color-font-heading\", color.hex);\r\n   openColorToggle('headingFontColorToggle');\r\n  }\r\n\r\n  const changeSubheadingFontColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, subheadingFontColor: color.hex});\r\n    changeFontColor(\"--color-font-subheading\", color.hex);\r\n    openColorToggle('subheadingFontColorToggle');\r\n  }\r\n\r\n  const changeBodyFontColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, bodyFontColor: color.hex});\r\n    changeFontColor(\"--color-font-body\", color.hex);\r\n    openColorToggle('bodyFontColorToggle');\r\n  }\r\n\r\n  const changeHeaderBackgroundColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, headerBackgroundColor: color.hex});\r\n    openColorToggle('headerBackgroundColorToggle');\r\n  }\r\n\r\n  const changeSidebarBackgroundColor = (color) => {\r\n    props.setResumeSettings({...props.resumeSettings, sidebarBackgroundColor: color.hex});\r\n    openColorToggle('sidebarBackgroundColorToggle');\r\n  }\r\n  \r\n  const changeHeadingFont = (e, size) => {\r\n    props.setResumeSettings({...props.resumeSettings, headingFontSize: size});\r\n  }\r\n\r\n  const changeSubheadingFont = (e, size) => {\r\n    props.setResumeSettings({...props.resumeSettings, subheadingFontSize: size});\r\n  }\r\n\r\n  const changeBodyFont = (e, size) => {\r\n    props.setResumeSettings({...props.resumeSettings, bodyFontSize: size});\r\n  }\r\n\r\n  const changeHeadingAlignment = (e, alignment) => {\r\n    props.setResumeSettings({...props.resumeSettings, headingAlignment: alignment});\r\n  }\r\n\r\n  const onSave = () => {\r\n    props.updateGlobalSetting(props.resumeSettings);\r\n    closeEditor();\r\n  }\r\n\r\n  const openColorToggle = (colorToggleProp) => {\r\n    setColorsToggles({...colorsToggles, [colorToggleProp]: !colorsToggles[colorToggleProp]});\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"resume-setting-wrap\">\r\n\r\n        <div className=\"resume-setting-section\">\r\n          {/* ABOUT SECTION SETTING */}\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Resume Header Section</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className='resume-setting-selected-color'  onClick={() => { openColorToggle('headerFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.aboutSectionFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headerFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={ props.resumeSettings.aboutSectionFontColor } onChangeComplete={changeAboutSectionFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* HEADING FONTS SETTING */} \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Heading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.headingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeHeadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headingFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.headingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={ props.resumeSettings.headingFontColor } onChangeComplete={changeHeadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Heading Alignment\r\n              </span>\r\n              <div className=\"resume-setting-item-body\">\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'left' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'left')}>\r\n                    <FormatAlignLeftOutlinedIcon></FormatAlignLeftOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'center' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'center')}>\r\n                    <FormatAlignCenterOutlinedIcon></FormatAlignCenterOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.resumeSettings.headingAlignment === 'right' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'right')}>\r\n                    <FormatAlignRightOutlinedIcon></FormatAlignRightOutlinedIcon>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* SUBHEADING FONTS SETTING */} \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Subheading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.subheadingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeSubheadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('subheadingFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.subheadingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.subheadingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.subheadingFontColor} onChangeComplete={changeSubheadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* BODY FONTS SETTING */}      \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Body</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.resumeSettings.bodyFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeBodyFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('bodyFontColorToggle'); }} sx={{backgroundColor: props.resumeSettings.bodyFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.bodyFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.bodyFontColor} onChangeComplete={changeBodyFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* BACKGROUNDS SETTING */}\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Backgrounds</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Header Background Color \r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headerBackgroundColorToggle'); }} sx={{backgroundColor: props.resumeSettings.headerBackgroundColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headerBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.headerBackgroundColor} onChangeComplete={changeHeaderBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Sidebar Background Color \r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarBackgroundColorToggle'); }} sx={{backgroundColor: props.resumeSettings.sidebarBackgroundColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.sidebarBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.resumeSettings.sidebarBackgroundColor} onChangeComplete={changeSidebarBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave}>Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default  React.memo(GlobalResumeSetting);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nconst AchievementEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [achievementItems, setAchievementItems] = useState(editorData.items);\r\n    const [showIcon, setShowIcon] = useState(editorData.showIcon);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowIconChange = (event) => {\r\n        setShowIcon(event.target.checked);\r\n    }\r\n\r\n\r\n    const onAchievementChange = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills[index] = { title: event.target.value };\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onAddAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setAchievementItems(skills);\r\n    }\r\n    const onDeleteAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index, 1);\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showIcon: showIcon, items: achievementItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Icon: <Switch label=\"Rounded\" onChange={onShowIconChange} checked={showIcon} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {achievementItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                        onChange={(event) => onAchievementChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        multiline\r\n                                        rows={2}\r\n                                        inputProps={{style: {fontSize: 14, lineHeight: 1.2}}}\r\n                                        style = {{width: 380}}\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddAchievement(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteAchievement(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!achievementItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default AchievementEditor;","import React, { useState } from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AchievementEditor from \"./AchievementEditor\";\r\n\r\nimport \"./Achievement.css\";\r\n\r\nconst Achievement = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling achievment', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-achievement\">\r\n      <div className=\"resume-section-title\">\r\n        <span>{props.componentItem.componentData.title}</span>\r\n        <span className=\"edit-component-icon\">\r\n          <EditIcon onClick={openEditor} />\r\n        </span>\r\n      </div> \r\n\r\n      <div className=\"achievement-item-wrap\">\r\n        {props.componentItem.componentData.items.map((item, index) => {\r\n          return (\r\n            <div key={`achievement-${index}`} className=\"achievement-item\">\r\n              <span className={`achievement-icon ${props.componentItem.componentData.showIcon ? '' : 'd-none'}`}>\r\n                <StarIcon />\r\n              </span>\r\n              <span className=\"achievement-summary\">\r\n                {item.title}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <AchievementEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Achievement);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst BasicInfoEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDataChange = (event, property) => {\r\n        const newName = event.target.value;\r\n        let newEditorData = {...editorData};\r\n        newEditorData = {...newEditorData, [property]: newName};\r\n        setEditorData(newEditorData);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth readOnly autoComplete='off' value='Basic Info' variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        <div className='editor-item' >\r\n                            <div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Full Name'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'fullName')}\r\n                                        value={editorData.fullName}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Current Role/Designation'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'currentRole')}\r\n                                        value={editorData.currentRole}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Email'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'email')}\r\n                                        value={editorData.email}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240} }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Phone'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'phone')}\r\n                                        value={editorData.phone}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Website'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'website')}\r\n                                        value={editorData.website}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Address'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'address')}\r\n                                        value={editorData.address}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BasicInfoEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport BasicInfoEditor from \"./BasicInfoEditor\";\r\n\r\nimport './BasicInfo.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }));\r\n\r\nconst BasicInfo = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <div className=\"resume-section resume-section-basic-info\">\r\n            {/* <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n            <span className=\"edit-component-icon\">\r\n                <EditIcon onClick={openEditor} />\r\n            </span> */}\r\n\r\n            <div className=\"basic-section-title\">\r\n                <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>\r\n            <p className=\"basic-info current-role\">{props.componentItem.componentData.currentRole}</p>\r\n            <div>\r\n            <Grid mt={1} \r\n            container \r\n            justifyContent=\"left\" \r\n            alignItems=\"center\" \r\n            rowSpacing={0.5} \r\n            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <PhoneIcon fontSize=\"15\"></PhoneIcon> \r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.phone}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <MailIcon fontSize=\"15\"></MailIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.email}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <LanguageIcon fontSize=\"15\"></LanguageIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.website}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <HomeIcon fontSize=\"15\"></HomeIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.address}</Box>\r\n                    </Item>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n\r\n            <BasicInfoEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(BasicInfo);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onEducationTitleChange = (event, index) => {\r\n        const newTitle = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], title: newTitle};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onUniversityChange = (event, index) => {\r\n        const newUniversity = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], university: newUniversity};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n\r\n    const onDateChange = (event, index) => {\r\n        const newDate = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], date: newDate};\r\n        console.log(educationItems);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onGpaChange = (event, index) => {\r\n        const newGPA = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], gpa: newGPA};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onAddEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index + 1, 0, { title: '', university: '', date: '', gpa: '' });\r\n        setEducationItems(newEducationItems);\r\n    }\r\n    const onDeleteEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index, 1);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        console.log('educationItems', educationItems);\r\n        setEditorData({ ...editorData, title: title,  items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            console.log('props', props);\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onEducationTitleChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onUniversityChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Date (From - To)'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onDateChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                placeholder='YYYY - YYYY'\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onGpaChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon onClick={(event) => onAddEducation(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon onClick={(event) => onDeleteEducation(event, index)}  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!educationItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport EducationEditor from \"./EducationEditor\";\r\n\r\nimport './Education.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst Education = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling education', open);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-education\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>     \r\n            <div className=\"education-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div key={index} className=\"education-item\">\r\n                            <div className=\"resume-section-subtitle\">\r\n                                <span className=\"education-title full-width-field\">{item.title}</span>\r\n                                <span className=\"education-university full-width-field\">{item.university}</span>\r\n                            </div>\r\n                            <Grid\r\n                                container \r\n                                justifyContent=\"start\" \r\n                                alignItems=\"center\" \r\n                                rowSpacing={0.5} \r\n                                columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                                <Grid item md={4} xs={4} justifyContent=\"start\" alignItems=\"center\">\r\n                                    <Item>\r\n                                        <CalendarTodayIcon className=\"resume-section-body\"></CalendarTodayIcon> \r\n                                        <Box className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.date}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                                <Grid item md={4} xs={4} justifyContent=\"start\" alignItems=\"center\" >\r\n                                    <Item>\r\n                                        <SchoolIcon className=\"resume-section-body\"></SchoolIcon>\r\n                                        <Box className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.gpa}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <EducationEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(Education);","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst ExperienceEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [experienceItems, setExperienceItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"experienceItems\", experienceItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: experienceItems.filter(\r\n        (item, index) => item.experienceTitle.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onSummaryChange = (val, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      experienceSummary: val,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  }\r\n\r\n  const onAddExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index + 1, 0, {\r\n      experienceTitle: \"\",\r\n      company: \"\",\r\n      date: \"\",\r\n      location: \"\",\r\n      experienceSummary: \"\",\r\n    });\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index, 1);\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {experienceItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Job Role\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceTitle\")\r\n                        }\r\n                        value={item.experienceTitle}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Company\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"company\")\r\n                        }\r\n                        value={item.company}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Date (From - To)\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"date\")\r\n                        }\r\n                        value={item.date}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"location\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"location\")\r\n                        }\r\n                        value={item.location}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n\r\n                      <ReactQuill \r\n                      defaultValue={item.experienceSummary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onSummaryChange(val, index)\r\n                      } />\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddExperience(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!experienceItems.filter(item => item.experienceTitle.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExperienceEditor;\r\n","import React,{useState} from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport './Experience.css'\r\nimport ExperienceEditor from \"./ExperienceEditor\";\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }));\r\n\r\nconst Experience = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    console.log('calling experience', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-experience\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n                </div>     \r\n            <div className=\"experience-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"experience-item\">\r\n                        <span className=\"experience-title full-width-field resume-section-subtitle\">{item.experienceTitle}</span>\r\n                        <Grid\r\n                            container \r\n                            justifyContent=\"start\" \r\n                            alignItems=\"center\" \r\n                            rowSpacing={0.5} \r\n                            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <BusinessIcon fontSize=\"15\"></BusinessIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.company}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.date}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <LocationOnIcon fontSize=\"15\"></LocationOnIcon>\r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.location}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className=\"experience-summary rich-text-div\" dangerouslySetInnerHTML={{__html: item.experienceSummary}}>\r\n\r\n                        </div>    \r\n                        \r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <ExperienceEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Experience);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst LanguagesEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [languageItems, setLanguageItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onLanguageChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages[index] = { language: event.target.value, proficiency: 'Beginner' };\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onAddLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index + 1, 0, { language: '' });\r\n        setLanguageItems(languages);\r\n    }\r\n    const onDeleteLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index, 1);\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        switch (event.target.value) {\r\n            case 25:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        \r\n            case 50:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Intermediate'};\r\n                break;\r\n            \r\n            case 75:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Proficient'};\r\n                break;\r\n\r\n            case 100:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Native'};\r\n                break;     \r\n            default:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        }\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: languageItems.filter((item, index) => item.language.length > 0) });\r\n        closeEditor();\r\n        setFirstTime(true);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    const getProficiencyValue = (prof) => {\r\n        let val = 25;\r\n        switch (prof) {\r\n            case 'Beginner':\r\n                val = 25;\r\n                break;\r\n        \r\n            case 'Intermediate':\r\n                val = 50;\r\n                break;\r\n            \r\n            case 'Proficient':\r\n                val = 75;\r\n                break;\r\n\r\n            case 'Native':\r\n                val = 100;\r\n                break;     \r\n            default:\r\n                val = 25\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {languageItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onLanguageChange(event, index)}\r\n                                        value={item.language}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ getProficiencyValue(item.proficiency) }\r\n                                            step={25}\r\n                                            marks\r\n                                            min={25}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddLanguage(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteLanguage(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!languageItems.filter(item => item.language.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LanguagesEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport LanguagesEditor from \"./LanguagesEditor\";\r\n\r\nimport \"./Languages.css\";\r\n\r\nconst Languages = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling languages', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  const getProgressFromProficiency = (proficiency) => {\r\n    let val = 25;\r\n    switch (proficiency) {\r\n        case 'Beginner':\r\n            val = 25;\r\n            break;\r\n    \r\n        case 'Intermediate':\r\n            val = 50;\r\n            break;\r\n        \r\n        case 'Proficient':\r\n            val = 75;\r\n            break;\r\n\r\n        case 'Native':\r\n            val = 100;\r\n            break;     \r\n        default:\r\n            val = 25\r\n            break;\r\n    }\r\n    return val;\r\n  }\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"language-wrapper\">\r\n          <div className=\"language-header\">\r\n              <div className=\"language-title\">{item.language}</div>\r\n              <div className={`language-level ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"language-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={ getProgressFromProficiency(item.proficiency) } />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n\r\n      <LanguagesEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Languages);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [professionalSummaryItems, setprofessionalSummaryItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"professionalSummaryItems\", professionalSummaryItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: professionalSummaryItems.filter(\r\n        (item, index) => item.summary.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (val, index, property) => {\r\n    const newValue = val;\r\n    let newprofessionalSummaryItems = [...professionalSummaryItems];\r\n    newprofessionalSummaryItems[index] = {\r\n      ...newprofessionalSummaryItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setprofessionalSummaryItems(newprofessionalSummaryItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {professionalSummaryItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n\r\n                    <ReactQuill \r\n                      defaultValue={item.summary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onFieldChange(val, index, \"summary\")\r\n                      } />\r\n                    </div>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!professionalSummaryItems.filter(item => item.summary.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React,{useState} from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport ProfessionalSummaryEditor from \"./ProfessionalSummaryEditor\";\r\n\r\nimport \"./ProfessionalSummary.css\";\r\n\r\nconst ProfessionalSummary = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log(\"calling ProfessionalSummary\", open);\r\n\r\n  const openEditor = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n<div className=\"resume-section resume-section-professional-summary\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"professional-summary-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='professional-summary-item' key={index}>\r\n                             <span className=\"professional-summary-summary-body rich-text-div\" dangerouslySetInnerHTML={{__html: item.summary}}></span>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <ProfessionalSummaryEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(ProfessionalSummary);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillItems, setSkillItems] = useState(editorData.items);\r\n    const [rounded, setRounded] = useState(editorData.rounded);\r\n    const [filled, setFilled] = useState(editorData.filled);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onRoundedChange = (event) => {\r\n        setRounded(event.target.checked);\r\n    }\r\n\r\n    const onFilledChange = (event) => {\r\n        setFilled(event.target.checked);\r\n    }\r\n\r\n    const onSkillChange = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills[index] = { title: event.target.value };\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onAddSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setSkillItems(skills);\r\n    }\r\n    const onDeleteSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index, 1);\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, rounded: rounded, filled: filled, title: title, items: skillItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Rounded: <Switch label=\"Rounded\" onChange={onRoundedChange} checked={rounded} />\r\n                        </div>\r\n                        <div>\r\n                            Filled: <Switch label=\"Filled\" onChange={onFilledChange} checked={filled} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onSkillChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddSkill(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkill(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsEditor;","import React, {useState} from 'react';\r\nimport {Chip} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsEditor from \"./SkillsEditor\";\r\n\r\nimport './Skills.css'\r\nconst Skills = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling skills', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-skills\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"skills-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <Chip key={index} label={item.title} className={`resume-section-body skills-chip ${props.componentItem.componentData.rounded ? '' : 'no-rounded'}`} variant={props.componentItem.componentData.filled ? 'filled' : 'outlined'} />\r\n                );\r\n            })}\r\n            </div>\r\n\r\n\r\n            <SkillsEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Skills);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsWithProgressEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillsProgressItems, setSkillsProgressItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onskillsProgressItemsChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = { title: event.target.value, proficiency: 0 };\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onAddSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index + 1, 0, { title: '', proficiency: 0 });\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n    const onDeleteSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index, 1);\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = {title: newSkillsProgressItems[index].title, proficiency: event.target.value};\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: skillsProgressItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillsProgressItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onskillsProgressItemsChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ Number(item.proficiency) }\r\n                                            step={10}\r\n                                            marks\r\n                                            min={0}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddSkills(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkills(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillsProgressItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsWithProgressEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsWithProgressEditor from \"./SkillsWithProgressEditor\";\r\n\r\nimport \"./SkillsWithProgress.css\";\r\n\r\nconst SkillsWithProgress = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling SkillsWith Progress Bar', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className={props.componentItem.componentData.showProficiencyProgress ? 'skill-wrapper' : 'skill-wrapper min-margin'}>\r\n          <div className=\"skill-header\">\r\n              <div className=\"skill-title\">{item.title}</div>\r\n              <div className={`skill-percentage ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"skill-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={Number(item.proficiency)} />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n    <SkillsWithProgressEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(SkillsWithProgress);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [socialItems, setSocialItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"socialItems\", socialItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: socialItems.filter(\r\n        (item, index) => item.socialPlatform.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems[index] = {\r\n      ...newSocialItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onAddSocial = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index + 1, 0, {\r\n        socialPlatform: \"\",\r\n        username: \"\"\r\n    });\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index, 1);\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {socialItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Social Platform\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"socialPlatform\")\r\n                        }\r\n                        value={item.socialPlatform}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Username or URL\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"username\")\r\n                        }\r\n                        value={item.username}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddSocial(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!socialItems.filter(item => item.socialPlatform.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React, {useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SocialEditor from \"./SocialEditor\";\r\n\r\nimport './Social.css'\r\nconst Social = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling Social', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-Social\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"social-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='social-item' key={index}>\r\n                            <div className='social-platform resume-section-subtitle'>{item.socialPlatform}</div>\r\n                            <div className='social-username'>{item.username}</div>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n            <SocialEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Social);","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { AppBar, Button, Box, Toolbar, Link, Paper, Grid, Autocomplete, TextField, CircularProgress, Chip, Alert, Snackbar} from '@mui/material';\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport GoogleLogin from '../../components/Login/GoogleLogin'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getResumeDataByResumeId, updateResumeDataByResumeId } from '../../reducers/resumeDataSlice';\r\nimport { getResumeSettingsByResumeId, updateResumeSettingsByResumeId } from '../../reducers/resumeSettingsSlice';\r\nimport WebAssetOutlinedIcon from '@mui/icons-material/WebAssetOutlined';\r\nimport WebOutlinedIcon from '@mui/icons-material/WebOutlined';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport RemoveCircleOutlineOutlinedIcon from '@mui/icons-material/RemoveCircleOutlineOutlined';\r\nimport { useParams } from \"react-router-dom\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nimport './Builder.css'\r\nimport logo from '../../logo.svg';\r\nimport GlobalResumeSetting from \"../../components/GlobalResumeSetting/GlobalResumeSetting\";\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Achievement from '../../components/Achievements/Achievement'\r\nimport BasicInfo from '../../components/BasicInfo/BasicInfo'\r\nimport Education from '../../components/Education/Education'\r\nimport Experience from '../../components/Experience/Experience'\r\nimport Languages from '../../components/Languages/Languages';\r\nimport ProfessionalSummary from '../../components/ProfessionalSummary/ProfessionalSummary';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsWithProgress from '../../components/SkillsWithProgress/SkillsWithProgress';\r\nimport Social from '../../components/Social/Social';\r\n\r\n\r\nfunction Builder() {\r\n  let resumeHTML;\r\n  const {authReducer, resumeDataReducer, resumeSettingsReducer} = useSelector((state) => state);\r\n  const [arr, setItems] = useState(null);\r\n  const [sidebar, setSidebar] = useState(true);\r\n  const [pageTwo, setPageTwo] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [openSnackbar, setopenSnackbar] = useState(false);\r\n  let { resumeId } = useParams();\r\n\r\n\r\n  const [resumeSettings, setResumeSettings] = useState(null);\r\n\r\n  const  openGlobalSetting = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n      console.log('calling builder effect');\r\n      setItems(resumeDataReducer.resumeData);\r\n      setResumeSettings(resumeSettingsReducer.resumeSettings);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resumeDataReducer]);\r\n    \r\n  useEffect(() => {\r\n    if(authReducer.userId) {\r\n      console.log('calling builder auth effect');\r\n      getResumeData();\r\n    }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n\r\n  function getResumeData() {\r\n    dispatch(getResumeDataByResumeId(resumeId)).then((res) => {\r\n      if (res.payload) {\r\n        setItems(res.payload);\r\n        console.log(res.payload);\r\n        setPageTwo(res.payload.pageTwo.length > 0);\r\n      }\r\n    });\r\n\r\n    dispatch(getResumeSettingsByResumeId(resumeId)).then((res) => {\r\n      setResumeSettings(res.payload);\r\n      if (res.payload) {\r\n        \r\n        setTimeout(() => {\r\n          setopenSnackbar(true);\r\n        }, 2000);\r\n\r\n        const root = document.querySelector(\":root\");\r\n        root.style.setProperty(\"--color-font-heading\", res.payload.headingFontColor);\r\n        root.style.setProperty(\"--color-font-subheading\", res.payload.subheadingFontColor);\r\n        root.style.setProperty(\"--color-font-body\", res.payload.bodyFontColor);\r\n        root.style.setProperty(\"--color-font-about-section\", res.payload.aboutSectionFontColor);\r\n      }\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  function updateResumeData(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeDataByResumeId({data:newData, resumeId: resumeId}));\r\n    }\r\n  }\r\n\r\n  function updateGlobalSetting(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeSettingsByResumeId({data:newData, resumeId: resumeId}));\r\n    }\r\n  }\r\n\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now())\r\n  }\r\n\r\n  const closeSnackBar = () => {\r\n    setopenSnackbar(false);\r\n  }\r\n\r\n  const copyComponent = (event, item, index, column) => {\r\n    item = {...item, copy: true, name: `${item.name}-${getUniqueId()}`};\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index + 1, 0, item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const deleteComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n\r\n  const addResumePage = () => {\r\n    setPageTwo(true); \r\n    setTimeout(() => {\r\n    const body = document.getElementById('resumePageSeparator');\r\n    body.scrollIntoView({\r\n        behavior: 'smooth'\r\n    }, 300)\r\n    } , 200);\r\n  }\r\n\r\n  const removeResumePage = () => {\r\n    setPageTwo(false);\r\n\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    const mergedArr = [...newArr.componentLibrary, ...newArr.pageTwo];\r\n    newArr.componentLibrary = mergedArr;\r\n    newArr.pageTwo = [];\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    const { destination, source, draggableId } = result;\r\n    // if canceling the dragNdrop in between\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    // if rearranging in same column\r\n    if (destination.droppableId === source.droppableId) {\r\n        const newArr = Array.from(arr[source.droppableId]);\r\n        newArr.splice(source.index, 1);\r\n        newArr.splice(destination.index, 0, arr[destination.droppableId].filter(x => x.name === draggableId)[0]);\r\n        \r\n        const colId = destination.droppableId;\r\n        \r\n        const newColumn = {\r\n          ...arr,\r\n          [colId]: newArr\r\n        }\r\n        setItems(newColumn);\r\n        updateResumeData(newColumn);\r\n    } else {\r\n      // Else if moving from sidebar to main column or vice-versa\r\n      const sourceId = source.droppableId;\r\n      const destId = destination.droppableId;\r\n      const sourceArr = Array.from(arr[source.droppableId]);\r\n      const destArr = Array.from(arr[destination.droppableId]);\r\n      // remove from source\r\n      sourceArr.splice(source.index, 1);\r\n      // add to destination\r\n      destArr.splice(destination.index, 0, arr[source.droppableId].filter(x => x.name === result.draggableId)[0]);\r\n      const newColumn = {\r\n        ...arr,\r\n        [sourceId]: sourceArr,\r\n        [destId]: destArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    }\r\n  }\r\n\r\n  function getComponent(componentType, item, columnName) {\r\n      switch (componentType) {\r\n        case 'Achievements':\r\n            return <Achievement componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'BasicInfo':\r\n          return <BasicInfo componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Experience':\r\n            return <Experience componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Education':\r\n            return <Education componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Languages':\r\n            return <Languages componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'ProfessionalSummary':\r\n          return <ProfessionalSummary componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Skills':\r\n          return <Skills componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'SkillsWithProgress':\r\n          return <SkillsWithProgress componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Social':\r\n            return <Social componentColumn={columnName} componentItem={item} />;\r\n            \r\n        default:\r\n            return null;\r\n    }\r\n  }\r\n\r\n  const clickPhoto = () => {\r\n    console.log('click photo');\r\n    const test = document.querySelector(\"#pageOne\");\r\n    html2canvas(test).then(function(canvas) {\r\n      console.dir(canvas.toDataURL(\"image/jpeg\"));\r\n  });\r\n  }\r\n\r\n\r\n  if (arr && resumeSettings) {\r\n    resumeHTML = <DragDropContext onDragEnd={onDragEnd}>\r\n      <Snackbar open={openSnackbar} autoHideDuration={5000} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} onClose={closeSnackBar} >\r\n        <Alert variant=\"filled\" severity=\"success\" color=\"primary\" sx={{ width: '100%' }}>\r\n          New Widgets Available. Try Out.\r\n        </Alert>\r\n      </Snackbar>\r\n    <div className=\"resume-paper-wrap\">\r\n    <GlobalResumeSetting \r\n      resumeSettings={resumeSettings}\r\n      setResumeSettings={setResumeSettings}\r\n      updateGlobalSetting={updateGlobalSetting}\r\n      open={open} \r\n      setOpen={setOpen}>\r\n    </GlobalResumeSetting>\r\n\r\n      <Grid container spacing={2}>\r\n          <Grid item xs={8}>\r\n            <div className=\"layout-options\">\r\n              <div className=\"layout-option-item\">\r\n                <Chip  color=\"primary\" icon={<SettingsOutlinedIcon />} onClick={openGlobalSetting} label=\"Settings\" />\r\n              </div>\r\n              \r\n              <div className=\"layout-option-item\">\r\n                <Chip color=\"primary\" icon={<WebAssetOutlinedIcon />} onClick={() => {\r\n                setSidebar(false)\r\n                const newArr = {...arr, main: [...arr['main'], ...arr['sidebar']], sidebar: []};\r\n                setItems(newArr);\r\n                }} label=\"Single Column\" />\r\n              </div>\r\n\r\n              <div className=\"layout-option-item\">\r\n              <Chip color=\"primary\" icon={<WebOutlinedIcon />} onClick={() => { setSidebar(true) }} label=\"Sidebar\" />\r\n              </div>\r\n\r\n              <div className=\"layout-option-item\">\r\n                {\r\n                  pageTwo ? \r\n                  <Chip color=\"primary\" icon={<RemoveCircleOutlineOutlinedIcon />} onClick={removeResumePage} label=\"Remove Page\" /> \r\n                  : <Chip color=\"primary\" icon={<AddCircleOutlineOutlinedIcon />} onClick={addResumePage} label=\"Add Page\" />\r\n                }\r\n                \r\n              </div>\r\n\r\n              <div className=\"layout-option-item\">\r\n              <Chip color=\"primary\" icon={<WebOutlinedIcon />} onClick={clickPhoto} label=\"Click Photo\" />\r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"resume-paper-container\" id=\"resumPaperContainer\">\r\n            <Paper className={`resume-paper heading-alignment-${resumeSettings.headingAlignment} heading-font-${resumeSettings.headingFontSize} subheading-font-${resumeSettings.subheadingFontSize} body-font-${resumeSettings.bodyFontSize}`} sx={{fontSize: resumeSettings.bodyFontSize, color: resumeSettings.bodyFontColor}} elevation={3} >\r\n              <Grid container id=\"pageOne\">\r\n                <Grid item xs={12} id=\"header\" className={`${arr.header.length > 0 ? '' : 'no-padding'}`} sx={{backgroundColor: resumeSettings.headerBackgroundColor, color: resumeSettings.aboutSectionFontColor}}>\r\n                  <Droppable droppableId=\"header\">\r\n                    {(provided, snapshot) => (\r\n                      <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                        <Suspense fallback={<div>Loading</div>}>\r\n                          {arr.header.map((item, index) => {\r\n                            return (\r\n                              <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                  <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'} \r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                    { getComponent(item.componentType, item, 'header') }\r\n                                    <div className=\"overlay\">\r\n                                      <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                        <DragIndicatorIcon/>\r\n                                      </span>\r\n                                      <span className=\"copy-component\">\r\n                                        <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                      <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                            );\r\n                          }\r\n                          )}\r\n                          {provided.placeholder}\r\n                        </Suspense>\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </Grid>\r\n                <Grid item xs={sidebar ? 7 : 12} id=\"main\" className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"main\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.main.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'} \r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                  \r\n                                  { getComponent(item.componentType, item, 'main') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'main')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'main')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid>\r\n                \r\n                {sidebar ? \r\n                <Grid item xs={5} id=\"sidebar\" sx={{backgroundColor: resumeSettings.sidebarBackgroundColor}} className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"sidebar\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over sidebar-column' : 'resume-paper-content sidebar-column'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.sidebar.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                  { getComponent(item.componentType, item, 'sidebar') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'sidebar')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'sidebar')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid> : null}\r\n              </Grid>\r\n            </Paper>\r\n            <Box sx={{height: 30}} id='resumePageSeparator'></Box>             \r\n            {pageTwo ?\r\n            <Paper className={`resume-paper heading-alignment-${resumeSettings.headingAlignment} heading-font-${resumeSettings.headingFontSize} subheading-font-${resumeSettings.subheadingFontSize} body-font-${resumeSettings.bodyFontSize}`} sx={{fontSize: resumeSettings.bodyFontSize, color: resumeSettings.bodyFontColor}} elevation={3} >\r\n              <Grid container>\r\n                <Grid item xs={12} id=\"pageTwo\" className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"pageTwo\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.pageTwo.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'} \r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                  \r\n                                  { getComponent(item.componentType, item, 'pageTwo') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'pageTwo')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'pageTwo')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            : null}\r\n            </div>     \r\n          </Grid>\r\n          <Grid className=\"component-library-wrap\" item xs={4}>\r\n            <div className=\"component-library-header\">\r\n              <div>\r\n                <span className=\"component-library-title\">All Widgets</span>\r\n              </div>\r\n              <Autocomplete\r\n                id=\"component-library-filter\"\r\n                options={[\r\n                  { label: 'Education', id: 1 },\r\n                  { label: 'Skills', id: 2 },\r\n                ]}\r\n                sx={{ width: 150 }}\r\n                renderInput={(params) => <TextField {...params} placeholder=\"Filter\"  variant=\"standard\" />}\r\n              />\r\n            </div>            \r\n            <Paper style={{padding: '20px'}} className=\"widget-library\" elevation={0}>\r\n\r\n            <Droppable droppableId=\"componentLibrary\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.componentLibrary.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n\r\n                                  { getComponent(item.componentType, item, 'componentLibrary') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'componentLibrary')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'componentLibrary')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n\r\n  </DragDropContext>;\r\n  } else {\r\n    resumeHTML = <div className=\"initial-loader\">\r\n                    <CircularProgress />\r\n                </div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"builder-wrap\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <AppBar elevation={0} className=\"global-header\" color=\"inherit\" position=\"fixed\">\r\n            <Toolbar className=\"builder-header\">\r\n              <div className=\"header-filters\">\r\n                <img src={logo} className=\"header-logo\" alt=\"Resume Builder\" />\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link active\" href=\"#\">About</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Experience</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Education</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Skills</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Languages</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Achievement</Link>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                    onClick={window.print}\r\n                    variant=\"contained\"\r\n                    color=\"primary\" \r\n                    disableElevation\r\n                    className=\"header-download-button\">\r\n                        Download Resume\r\n                </Button>\r\n                <GoogleLogin></GoogleLogin>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n      \r\n      {resumeHTML}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Builder;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\nimport { initialData } from \"../globals\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    userData: null,\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getUserDataByUserId = createAsyncThunk(\r\n  'resume/getUserDataByUserId',\r\n  async (userId, thunkAPI) => {\r\n      \r\n    const response = await (await firebase.firestore().collection('users').doc(userId).get()).data();\r\n    return response;\r\n  }\r\n)\r\n\r\n// create the thunk\r\nexport const updateUserDataByUserId = createAsyncThunk(\r\n  'resume/updateUserDataByUserId',\r\n  async (apiData, thunkAPI) => {\r\n    console.log(apiData);\r\n    const userResumeData = [\r\n      {\r\n        resumeName: `Resume ${apiData.data.length + 1}`,\r\n        resumeId: `${apiData.uniqueId}`,\r\n        resumeImage: \"\"\r\n      }\r\n    ];\r\n\r\n    const newResumesArr = [...apiData.data, ...userResumeData];\r\n\r\n    initialData.resumeJson.header.filter(\r\n      (item) => item.name === \"BasicInfo\"\r\n    )[0].componentData = {\r\n      fullName: apiData.userData.name,\r\n      email: apiData.userData.email,\r\n      website: \"www.example.com\",\r\n      phone: \"1234567890\",\r\n      address: \"123, ABC Street, XYZ City, ABC State, 123456\",\r\n    };\r\n    await firebase.firestore()\r\n      .collection(\"resumes\")\r\n      .doc(`${apiData.uniqueId}`)\r\n      .set({\r\n        resumeJson: JSON.stringify(initialData.resumeJson),\r\n        resumeSettings: JSON.stringify(initialData.resumeSettings)\r\n    });\r\n    await (await firebase.firestore().collection(\"users\").doc(apiData.userData.userId).update({userResumes: JSON.stringify(newResumesArr)}));\r\n    return newResumesArr; \r\n  }\r\n)\r\n  \r\n\r\nexport const userDataSlice = createSlice({\r\n    name: 'userDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateUserDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.userData));\r\n            state.userData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getUserDataByUserId.fulfilled, (state, action) => {\r\n            state.userData = action.payload;\r\n        });\r\n\r\n        builder.addCase(updateUserDataByUserId.fulfilled, (state, action) => {\r\n          state.userData.userResumes = action.payload;\r\n        });\r\n    },\r\n  });\r\n\r\nexport const { updateUserDataReducer } = userDataSlice.actions;  \r\n\r\nexport default userDataSlice.reducer;","export default __webpack_public_path__ + \"static/media/resume-2.edfc1b35.svg\";","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserDataByUserId, updateUserDataByUserId } from '../../reducers/userDataSlice';\r\nimport { Button, Grid, CircularProgress, Box } from '@mui/material';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport CopyAllOutlinedIcon from '@mui/icons-material/CopyAllOutlined';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport ShareOutlinedIcon from '@mui/icons-material/ShareOutlined';\r\nimport resumeSvg from '../../assets/images/resume-2.svg';\r\nimport './Resumes.css'\r\n\r\nconst Resumes = () => {\r\n  const {authReducer, userDataReducer} = useSelector((state) => state);\r\n  const [userData, setUserData] = useState(null);\r\n  const [userResumes, setUserResumes] = useState(null);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(authReducer.userId) {\r\n      console.log('calling resume auth effect');\r\n      getUserData();\r\n    }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log('calling resume effect');\r\n  //   setUserData(userDataReducer.userData);\r\n  //   //setUserResumes(userDataReducer.userData.userResumes);\r\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [userDataReducer]);\r\n\r\n\r\n  const getUserData = () => {\r\n    dispatch(getUserDataByUserId(authReducer.userId)).then((res) => {\r\n      if (res.payload) {\r\n        setUserData(res.payload);\r\n        setUserResumes(JSON.parse(res.payload.userResumes));\r\n      }\r\n    });\r\n  }\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now());\r\n  }\r\n\r\n  const createNewResume = () => {\r\n    const uniqueId = getUniqueId();\r\n\r\n    if (authReducer.userId) {\r\n      dispatch(updateUserDataByUserId({data:userResumes, userData: userData, uniqueId: uniqueId})).then((res) => {\r\n        setUserResumes(res.payload);\r\n        history.push(`builder/${uniqueId}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  const onDeleteResume = (resumeId) => {\r\n    const userResumeData = [...userResumes];\r\n    const newResumeData = userResumeData.filter((item) => item.resumeId !== resumeId)\r\n\r\n    setUserResumes(newResumeData);\r\n\r\n    firebase.firestore()\r\n    .collection(\"users\")\r\n    .doc(`${authReducer.userId}`)\r\n    .update({\r\n      userResumes: JSON.stringify(newResumeData),\r\n    });\r\n\r\n    firebase.firestore()\r\n      .collection(\"resumes\")\r\n      .doc(`${resumeId}`)\r\n      .delete();\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-resumes-wrap\">\r\n      <div className=\"resume-header\">\r\n        <h1>My Resumes</h1>\r\n        <Button\r\n            startIcon={<AddCircleOutlineOutlinedIcon />}\r\n            size=\"small\"\r\n            onClick={createNewResume}\r\n            variant=\"contained\"\r\n            color=\"primary\" \r\n            disableElevation\r\n            className=\"header-create-resume-button\">\r\n                New Resume\r\n        </Button>\r\n      </div>\r\n\r\n       \r\n      {userResumes ?\r\n        userResumes.length > 0 ?\r\n          <div className=\"user-resume-list-wrap\">\r\n            {\r\n              userResumes.map((item, index) => {\r\n                return (\r\n                    <div className='resume-item' key={index}>\r\n                      \r\n                      <div className=\"resume-thumbnail\" style={{backgroundImage: `url(${item.resumeImage})`}}> </div>\r\n                      <div className=\"resume-actions\">\r\n                        <div className=\"resume-action-item name\">\r\n                          <span>{item.resumeName}</span>\r\n                        </div>\r\n                        <div className=\"resume-action-item date\">\r\n                          <span>Feb 2, 2020 2.45 PM</span>\r\n                        </div>\r\n                        <Box sx={{height: '40px'}}></Box>\r\n                        {/* EDIT ACTION */}\r\n                        <div className=\"resume-action-item link\" onClick={() => { history.push(`builder/${item.resumeId}`); }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <EditOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Edit\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* DELETE ACTION */}\r\n                        <div className=\"resume-action-item link\" onClick={() => { onDeleteResume(item.resumeId) }}>\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <DeleteOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Delete\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* COPY ACTION */}\r\n                        <div className=\"resume-action-item link\">\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <CopyAllOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Duplicate\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* PREVIEW ACTION */}\r\n                        <div className=\"resume-action-item link\">\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <VisibilityOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Preview\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* SHARE ACTION */}\r\n                        <div className=\"resume-action-item link\">\r\n                          <span className=\"resume-action-item-link-icon\">\r\n                            <ShareOutlinedIcon />\r\n                          </span>\r\n                          <span className=\"resume-action-item-link-text\">\r\n                            Share\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n          :\r\n          <Grid\r\n            container\r\n            className=\"no-resume-wrap\"\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid \r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\" item xs={3}>\r\n              <div className=\"no-resume-text\">No resume created, please create one.</div>\r\n              <img className=\"no-resume-img\" alt=\"Create Resume\" src={resumeSvg} />\r\n            </Grid>   \r\n          </Grid>\r\n      :\r\n      <Grid\r\n            container\r\n            className=\"no-resume-wrap\"\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n              <CircularProgress />\r\n      </Grid>\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resumes;","import React from \"react\";\r\nimport { Container, Box } from \"@mui/material\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Box m=\"auto\" textAlign=\"center\">\r\n                <h1>Home</h1>\r\n            </Box> \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;","import './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport GlobalHeader from '../GlobalHeader/GlobalHeader';\r\nimport About from '../../pages/About/About';\r\nimport Contact from '../../pages/Contact/Contact';\r\nimport Builder from '../../pages/Builder/Builder';\r\nimport Resumes from '../../pages/Resumes/Resumes';\r\nimport Home from '../../pages/Home/Home';\r\n\r\nfunction App() {\r\nconst isSignedIn = useSelector(state => state.authReducer.isSignedIn);\r\n  return (\r\n      <Router>\r\n        <GlobalHeader/>\r\n          <Switch>\r\n            <Route path=\"/builder/:resumeId?\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Builder></Builder>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact/>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About/>\r\n            </Route>\r\n            <Route exact path=\"/resumes\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Resumes></Resumes>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home/>\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\n// Or Create your Own theme:\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#09915A'\r\n      },\r\n      // text: {\r\n      //   primary: 'rgba(0, 0, 0, 0.90)',\r\n      //   secondary: 'red',\r\n      // }\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        variants: [\r\n          {\r\n            props: { variant: 'space-40', color: 'primary' },\r\n            style: {\r\n              paddingLeft: '40px',\r\n              paddingRight: '40px'\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  export default theme;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authSlice from \"./authSlice\";\r\nimport userDataSlice from './userDataSlice';\r\nimport resumeDataSlice from \"./resumeDataSlice\";\r\nimport resumeSettingsSlice from \"./resumeSettingsSlice\";\r\n\r\n// export default combineReducers({\r\n//     authReducer: authReducer\r\n// });\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authReducer: authSlice,\r\n    userDataReducer: userDataSlice,\r\n    resumeDataReducer: resumeDataSlice,\r\n    resumeSettingsReducer: resumeSettingsSlice\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme'\nimport {store} from './reducers';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}