{"version":3,"sources":["logo.svg","reducers/authSlice.js","firebase.js","components/Login/GoogleLogin.js","components/GlobalHeader/GlobalHeader.js","pages/About/About.js","pages/Contact/Contact.js","reducers/resumeDataSlice.js","components/GlobalResumeSetting/GlobalResumeSetting.js","components/Achievements/AchievementEditor.js","components/Achievements/Achievement.js","components/BasicInfo/BasicInfoEditor.js","components/BasicInfo/BasicInfo.js","components/Education/EducationEditor.js","components/Education/Education.js","components/Experience/ExperienceEditor.js","components/Experience/Experience.js","components/Languages/LanguagesEditor.js","components/Languages/Languages.js","components/ProfessionalSummary/ProfessionalSummaryEditor.js","components/ProfessionalSummary/ProfessionalSummary.js","components/Skills/SkillsEditor.js","components/Skills/Skills.js","components/SkillsWithProgress/SkillsWithProgressEditor.js","components/SkillsWithProgress/SkillsWithProgress.js","components/Social/SocialEditor.js","components/Social/Social.js","pages/Builder/Builder.js","components/App/App.js","theme/index.js","reducers/index.js","index.js"],"names":["INITIAL_STATE","isSignedIn","localStorage","getItem","userId","name","email","authSlice","createSlice","initialState","reducers","signInAction","state","action","payload","signOutAction","actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initialData","header","componentType","path","componentData","title","items","summary","main","socialPlatform","username","university","date","gpa","showIcon","experienceTitle","company","location","experienceSummary","sidebar","showProficiency","showProficiencyProgress","proficiency","filled","rounded","componentLibrary","language","GoogleLogin","onAuthChange","isSignedInStatus","props","auth","currentUser","get","getId","getBasicProfile","getName","getEmail","onSignInClick","signIn","then","firestore","collection","doc","exists","setItem","getAuthResponse","id_token","history","replace","filter","item","fullName","website","phone","address","set","resumeJson","JSON","stringify","catch","error","console","log","onSignOutClick","signOut","removeItem","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","this","className","CircularProgress","size","Button","onClick","variant","color","disableElevation","renderAuthButton","Component","mapDispatchToProps","connect","authReducer","withRouter","GlobalHeader","useLocation","pathname","Box","sx","flexGrow","AppBar","elevation","position","Toolbar","src","logo","alt","component","NavLink","to","exact","React","memo","About","Container","maxWidth","m","textAlign","Contact","getResumeDataByUserId","createAsyncThunk","thunkAPI","a","data","response","parse","updateResumeDataByUserId","apiData","resumeDataSlice","resumeData","loading","updateResumeDataReducer","column","extraReducers","builder","addCase","fulfilled","GlobalResumeSetting","Dialog","fullWidth","open","onClose","setOpen","DialogContent","DialogActions","AchievementEditor","useState","editorData","setEditorData","firstime","setFirstTime","setTitle","achievementItems","setAchievementItems","setShowIcon","dispatch","useDispatch","closeEditor","useEffect","componentName","componentColumn","TextField","autoComplete","onChange","event","newVal","target","value","Switch","label","checked","map","index","mb","mt","mr","skills","onAchievementChange","multiline","rows","inputProps","style","fontSize","lineHeight","width","splice","onAddAchievement","onDeleteAchievement","length","disabled","Achievement","componentItem","BasicInfoEditor","onDataChange","property","newName","newEditorData","readOnly","currentRole","Item","styled","theme","typography","caption","display","alignItems","palette","text","secondary","BasicInfo","Grid","container","justifyContent","rowSpacing","columnSpacing","xs","sm","md","pl","EducationEditor","educationItems","setEducationItems","newTitle","newEducationItems","onEducationTitleChange","newUniversity","onUniversityChange","newDate","onDateChange","placeholder","newGPA","onGpaChange","onAddEducation","onDeleteEducation","height","Divider","Education","ExperienceEditor","experienceItems","setExperienceItems","onFieldChange","newValue","newExperienceItems","onAddExperience","onDeleteExperience","Experience","LanguagesEditor","languageItems","setLanguageItems","setShowProficiency","setShowProficiencyProgress","getProficiencyValue","prof","val","onShowProficiencyChange","onShowProficiencyProgressChange","languages","onLanguageChange","Slider","step","marks","min","max","onProficiencyChange","onAddLanguage","onDeleteLanguage","Languages","getProgressFromProficiency","LinearProgress","SocialEditor","professionalSummaryItems","setprofessionalSummaryItems","newprofessionalSummaryItems","ProfessionalSummary","ProfessionalSummaryEditor","SkillsEditor","skillItems","setSkillItems","setRounded","setFilled","onSkillChange","onAddSkill","onDeleteSkill","Skills","Chip","SkillsWithProgressEditor","skillsProgressItems","setSkillsProgressItems","newSkillsProgressItems","onskillsProgressItemsChange","Number","onAddSkills","onDeleteSkills","SkillsWithProgress","socialItems","setSocialItems","newSocialItems","onAddSocial","Social","Builder","resumeHTML","useSelector","resumeDataReducer","arr","setItems","setSidebar","updateResumeData","newData","res","copyComponent","copy","Math","floor","random","Date","now","newArr","deleteComponent","getComponent","columnName","onDragEnd","result","destination","source","draggableId","droppableId","Array","from","x","colId","newColumn","sourceId","destId","sourceArr","destArr","spacing","Paper","id","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","fallback","isDragging","draggableProps","key","dragHandleProps","Autocomplete","options","renderInput","params","padding","Link","underline","href","print","App","createTheme","primary","components","MuiButton","variants","paddingLeft","paddingRight","store","configureStore","reducer","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2fc926dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn : (localStorage.getItem('token') == null) ? false : true,\r\n    userId: null,\r\n    name: null,\r\n    email: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        signInAction: (state, action) => {\r\n            state.isSignedIn = true;\r\n            state.userId = action.payload.userId;\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n        },\r\n        signOutAction: (state) => {\r\n            state.isSignedIn = false;\r\n            state.userId = null;\r\n            state.name = null;\r\n            state.email = null;\r\n        },\r\n    },\r\n  });\r\n  \r\nexport const { signInAction, signOutAction } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBjh7R7l6f9rTW8Oll_uzx2q50uJNWRjbU\",\r\n  authDomain: \"resume-builder-c4248.firebaseapp.com\",\r\n  projectId: \"resume-builder-c4248\",\r\n  storageBucket: \"resume-builder-c4248.appspot.com\",\r\n  messagingSenderId: \"790181104761\",\r\n  appId: \"1:790181104761:web:3f3e105c4d46cd7c09d8a8\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAction, signOutAction } from \"../../reducers/authSlice.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\n\r\nconst initialData = {\r\n    header: [\r\n        {\r\n            name: \"BasicInfo\",\r\n            componentType: 'BasicInfo',\r\n            path: \"BasicInfo/BasicInfo\"\r\n        },\r\n        {\r\n            name: \"ProfessionalSummary\",\r\n            componentType: 'ProfessionalSummary',\r\n            path: \"ProfessionalSummary/ProfessionalSummary\",\r\n            componentData: {\r\n                title: \"Professional Summary\",\r\n                items: [\r\n                  {\r\n                    summary: \"This is summary body.\"\r\n                  },\r\n                ],\r\n            }\r\n        }\r\n\r\n    ],\r\n  main: [\r\n    {\r\n        name: \"Social\",\r\n        componentType: 'Social',\r\n        path: \"Social/Social\",\r\n        componentData: {\r\n          title: \"Social\",\r\n          items: [\r\n            {\r\n              socialPlatform: \"Facebook\",\r\n              username: \"@username\",\r\n            },\r\n            {\r\n              socialPlatform: \"Twitter\",\r\n              username: \"@username\",\r\n            },\r\n          ],\r\n        },\r\n    },\r\n    {\r\n      name: \"Education\",\r\n      componentType: 'Education',\r\n      path: \"Education/Education\",\r\n      componentData: {\r\n        title: \"Education\",\r\n        items: [\r\n          {\r\n            title: \"Executive MBA, Engineering Management\",\r\n            university: \"The University of Arizona\",\r\n            date: \"2010 - 2014\",\r\n            gpa: \"CGPA 09/10\",\r\n          },\r\n          {\r\n            title: \"Engineering Management\",\r\n            university: \"The University of California, Berkeley\",\r\n            date: \"2008 - 2010\",\r\n            gpa: \"CGPA 7.5/10\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Achievements\",\r\n      componentType: 'Achievements',\r\n      path: \"Achievements/Achievement\",\r\n      componentData: {\r\n        title: \"Achievements\",\r\n        showIcon: true,\r\n        items: [\r\n          {\r\n            title:\r\n              \"Won Best Employee Award for last 2 consecutive year (2020 & 2021). Won Best Employee Award for last 2 consecutive year (2020 & 2021).\",\r\n          },\r\n          { title: \"Won inter-zone cricket competition (2020). \" },\r\n          {\r\n            title: \"Runner up for state level table tennis competition (2020).\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Experience\",\r\n      componentType: 'Experience',\r\n      path: \"Experience/Experience\",\r\n      componentData: {\r\n        title: \"Experience\",\r\n        items: [\r\n          {\r\n            experienceTitle: \"Android Developer\",\r\n            company: \"Google\",\r\n            date: \"2018 - 2020\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 3 key projects of major clients.\",\r\n          },\r\n          {\r\n            experienceTitle: \"Front End Developer\",\r\n            company: \"Amazon\",\r\n            date: \"2014 - 2018\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 4 key projects of major clients.\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  sidebar: [\r\n    {\r\n      name: \"SkillsWithProgress\",\r\n      componentType: 'SkillsWithProgress',\r\n      path: \"SkillsWithProgress/SkillsWithProgress\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { title: \"HTML\", proficiency: 80 },\r\n          { title: \"CSS\", proficiency: 80 },\r\n          { title: \"Javascript\", proficiency: \"70\" },\r\n          { title: \"React\", proficiency: 50 },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Skills\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"HTML\" },\r\n          { title: \"CSS\" },\r\n          { title: \"JavaScript\" },\r\n          { title: \"React\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Tools\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Tools\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [{ title: \"Git\" }, { title: \"Webpack\" }, { title: \"Gulp\" }],\r\n      },\r\n    },\r\n    {\r\n      name: \"Hobbies\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Hobbies\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"Reading\" },\r\n          { title: \"Swimming\" },\r\n          { title: \"Hiking\" },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  componentLibrary: [\r\n    {\r\n      name: \"Languages\",\r\n      componentType: 'Languages',\r\n      path: \"Languages/Languages\",\r\n      componentData: {\r\n        title: \"Languages\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { language: \"English\", proficiency: \"Proficient\" },\r\n          { language: \"Hindi\", proficiency: \"Native\" },\r\n          { language: \"Spanish\", proficiency: \"Beginner\" },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nclass GoogleLogin extends Component {\r\n  // If not using arrow function then we need to bind `this` like below\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {isSignedIn: null};\r\n  //     this.onAuthChange = this.onAuthChange.bind(this)\r\n  // }\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"1051932499833-smce802vivdpiijmo5bg4donrr6n40fg.apps.googleusercontent.com\",\r\n          scope: \"email profile\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // listen for auth changes in future\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedInStatus) => {\r\n    if (isSignedInStatus) {\r\n      this.props.signInAction({\r\n        userId: this.auth.currentUser.get().getId(),\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n    } else {\r\n      this.props.signOutAction();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn().then(() => {\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const name = this.auth.currentUser.get().getBasicProfile().getName();\r\n      const email = this.auth.currentUser.get().getBasicProfile().getEmail();\r\n      this.props.signInAction({\r\n        userId: userId,\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n\r\n      // If first time user then create a new resume\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .get()\r\n        .then((doc) => {\r\n          // Existing user then redirect else create a new resume\r\n          if (doc.exists) {\r\n            localStorage.setItem(\r\n              \"token\",\r\n              this.auth.currentUser.get().getAuthResponse().id_token\r\n            );\r\n            this.props.history.replace(\"builder\");\r\n          } else {\r\n            initialData.header.filter(\r\n              (item) => item.name === \"BasicInfo\"\r\n            )[0].componentData = {\r\n              fullName: name,\r\n              email: email,\r\n              website: \"www.example.com\",\r\n              phone: \"1234567890\",\r\n              address: \"123, ABC Street, XYZ City, ABC State, 123456\",\r\n            };\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(userId)\r\n              .set({\r\n                resumeJson: JSON.stringify(initialData),\r\n                userId: userId,\r\n                name: name,\r\n                email: email,\r\n              })\r\n              .then(() => {\r\n                localStorage.setItem(\r\n                  \"token\",\r\n                  this.auth.currentUser.get().getAuthResponse().id_token\r\n                );\r\n                this.props.history.replace(\"builder\");\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut().then(() => {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.signOutAction();\r\n    });\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return (\r\n        <div className=\"header-login-button-wrap\">\r\n          <CircularProgress className=\"login-loader\" size={18} />\r\n        </div>\r\n      );\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignOutClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignInClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Create Resume\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderAuthButton();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { signInAction, signOutAction };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(GoogleLogin));\r\n","import React from \"react\";\r\nimport {AppBar, Box, Toolbar, Button} from '@mui/material';\r\nimport logo from '../../logo.svg';\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport GoogleLogin from '../Login/GoogleLogin'\r\n\r\nimport './GlobalHeader.css'\r\n\r\nconst GlobalHeader = () => {\r\n    return (useLocation().pathname !== '/builder') ? (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar elevation={0} className=\"global-header\" color=\"transparent\" position=\"static\">\r\n                <Toolbar>\r\n                    <img src={logo} className=\"header-logo\" alt=\"Resume Builder\"/>\r\n                    <div className=\"header-logo-text\">\r\n                        <span>Resume Builder</span>\r\n                    </div>\r\n                    <nav>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/\"\r\n                            exact\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Home\r\n                        </Button>\r\n                        <Button \r\n                            component={NavLink}\r\n                            to=\"/about\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                About\r\n                        </Button>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/contact\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Contact\r\n                        </Button>\r\n                        <GoogleLogin></GoogleLogin>\r\n                    </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    ) : <span></span>\r\n}\r\n\r\nexport default  React.memo(GlobalHeader);","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>About</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>Contact</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeData: null, loading: 'idle'\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getResumeDataByUserId = createAsyncThunk(\r\n  'resume/getResumeDataByUserId',\r\n  async (userId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('users').doc(userId).get()).data();\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeDataByUserId = createAsyncThunk(\r\n  'resume/updateResumeDataByUserId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"users\").doc(apiData.userId).set({resumeJson: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n)\r\n  \r\n\r\nexport const resumeDataSlice = createSlice({\r\n    name: 'resumeDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateResumeDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeData));\r\n            data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getResumeDataByUserId.fulfilled, (state, action) => {\r\n            state.resumeData = action.payload;\r\n        })\r\n\r\n        .addCase(updateResumeDataByUserId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n      })\r\n    },\r\n  });\r\n\r\nexport const { updateResumeDataReducer } = resumeDataSlice.actions;  \r\n\r\nexport default resumeDataSlice.reducer;","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n// import AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\n// import DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst GlobalResumeSetting = (props) => {\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div>\r\n          <h1>Global Resume Setting</h1>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button>Cancel</Button>\r\n        <Button>Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default  React.memo(GlobalResumeSetting);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nconst AchievementEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [achievementItems, setAchievementItems] = useState(editorData.items);\r\n    const [showIcon, setShowIcon] = useState(editorData.showIcon);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowIconChange = (event) => {\r\n        setShowIcon(event.target.checked);\r\n    }\r\n\r\n\r\n    const onAchievementChange = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills[index] = { title: event.target.value };\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onAddAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setAchievementItems(skills);\r\n    }\r\n    const onDeleteAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index, 1);\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showIcon: showIcon, items: achievementItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Icon: <Switch label=\"Rounded\" onChange={onShowIconChange} checked={showIcon} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {achievementItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                        onChange={(event) => onAchievementChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        multiline\r\n                                        rows={2}\r\n                                        inputProps={{style: {fontSize: 14, lineHeight: 1.2}}}\r\n                                        style = {{width: 380}}\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddAchievement(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteAchievement(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!achievementItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default AchievementEditor;","import React, { useState } from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AchievementEditor from \"./AchievementEditor\";\r\n\r\nimport \"./Achievement.css\";\r\n\r\nconst Achievement = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling achievment', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-achievement\">\r\n      <div className=\"resume-section-title\">\r\n        <span>{props.componentItem.componentData.title}</span>\r\n        <span className=\"edit-component-icon\">\r\n          <EditIcon onClick={openEditor} />\r\n        </span>\r\n      </div> \r\n\r\n      <div className=\"achievement-item-wrap\">\r\n        {props.componentItem.componentData.items.map((item, index) => {\r\n          return (\r\n            <div key={`achievement-${index}`} className=\"achievement-item\">\r\n              <span className={`achievement-icon ${props.componentItem.componentData.showIcon ? '' : 'd-none'}`}>\r\n                <StarIcon />\r\n              </span>\r\n              <span className=\"achievement-summary\">\r\n                {item.title}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <AchievementEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Achievement);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst BasicInfoEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDataChange = (event, property) => {\r\n        const newName = event.target.value;\r\n        let newEditorData = {...editorData};\r\n        newEditorData = {...newEditorData, [property]: newName};\r\n        setEditorData(newEditorData);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth readOnly autoComplete='off' value='Basic Info' variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        <div className='editor-item' >\r\n                            <div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Full Name'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'fullName')}\r\n                                        value={editorData.fullName}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Current Role/Designation'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'currentRole')}\r\n                                        value={editorData.currentRole}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Email'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'email')}\r\n                                        value={editorData.email}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240} }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Phone'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'phone')}\r\n                                        value={editorData.phone}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Website'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'website')}\r\n                                        value={editorData.website}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Address'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'address')}\r\n                                        value={editorData.address}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BasicInfoEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport BasicInfoEditor from \"./BasicInfoEditor\";\r\n\r\nimport './BasicInfo.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst BasicInfo = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <div className=\"resume-section resume-section-basic-info\">\r\n            {/* <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n            <span className=\"edit-component-icon\">\r\n                <EditIcon onClick={openEditor} />\r\n            </span> */}\r\n\r\n            <div className=\"basic-section-title\">\r\n                <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>\r\n            <p className=\"basic-info current-role\">{props.componentItem.componentData.currentRole}</p>\r\n            <div>\r\n            <Grid mt={1} \r\n            container \r\n            justifyContent=\"left\" \r\n            alignItems=\"center\" \r\n            rowSpacing={0.5} \r\n            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <PhoneIcon fontSize=\"15\"></PhoneIcon> \r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.phone}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <MailIcon fontSize=\"15\"></MailIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.email}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <LanguageIcon fontSize=\"15\"></LanguageIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.website}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <HomeIcon fontSize=\"15\"></HomeIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.address}</Box>\r\n                    </Item>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n\r\n            <BasicInfoEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(BasicInfo);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onEducationTitleChange = (event, index) => {\r\n        const newTitle = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], title: newTitle};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onUniversityChange = (event, index) => {\r\n        const newUniversity = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], university: newUniversity};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n\r\n    const onDateChange = (event, index) => {\r\n        const newDate = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], date: newDate};\r\n        console.log(educationItems);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onGpaChange = (event, index) => {\r\n        const newGPA = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], gpa: newGPA};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onAddEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index + 1, 0, { title: '', university: '', date: '', gpa: '' });\r\n        setEducationItems(newEducationItems);\r\n    }\r\n    const onDeleteEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index, 1);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        console.log('educationItems', educationItems);\r\n        setEditorData({ ...editorData, title: title,  items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            console.log('props', props);\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onEducationTitleChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onUniversityChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Year'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onDateChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                placeholder='YYYY - YYYY'\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onGpaChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon onClick={(event) => onAddEducation(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon onClick={(event) => onDeleteEducation(event, index)}  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!educationItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport EducationEditor from \"./EducationEditor\";\r\n\r\nimport './Education.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst Education = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling education', open);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-education\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>     \r\n            <div className=\"education-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div key={index} className=\"education-item\">\r\n                            <span className=\"education-title full-width-field\">{item.title}</span>\r\n                            <span className=\"education-university full-width-field\">{item.university}</span>\r\n                            <Grid\r\n                                container \r\n                                justifyContent=\"start\" \r\n                                alignItems=\"center\" \r\n                                rowSpacing={0.5} \r\n                                columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                                <Grid item md={6} xs={6} justifyContent=\"start\" alignItems=\"center\">\r\n                                    <Item>\r\n                                        <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                        <Box component=\"span\" sx={{ pl: 0.8}}>{item.date}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                                <Grid item md={6} xs={6} justifyContent=\"start\" alignItems=\"center\" >\r\n                                    <Item>\r\n                                        <SchoolIcon fontSize=\"15\"></SchoolIcon>\r\n                                        <Box component=\"span\" sx={{ pl: 0.8}}>{item.gpa}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <EducationEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(Education);","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst ExperienceEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [experienceItems, setExperienceItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"experienceItems\", experienceItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: experienceItems.filter(\r\n        (item, index) => item.experienceTitle.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onAddExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index + 1, 0, {\r\n      experienceTitle: \"\",\r\n      company: \"\",\r\n      date: \"\",\r\n      location: \"\",\r\n      experienceSummary: \"\",\r\n    });\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index, 1);\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {experienceItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Job Role\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceTitle\")\r\n                        }\r\n                        value={item.experienceTitle}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Company\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"company\")\r\n                        }\r\n                        value={item.company}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Date\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"date\")\r\n                        }\r\n                        value={item.date}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"location\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"location\")\r\n                        }\r\n                        value={item.location}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Summary\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceSummary\")\r\n                        }\r\n                        value={item.experienceSummary}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        rows={3}\r\n                        style = {{width: 380}}\r\n                        multiline\r\n                        \r\n                      />\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddExperience(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!experienceItems.filter(item => item.experienceTitle.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExperienceEditor;\r\n","import React,{useState} from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport './Experience.css'\r\nimport ExperienceEditor from \"./ExperienceEditor\";\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst Experience = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    console.log('calling experience', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-experience\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n                </div>     \r\n            <div className=\"experience-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"experience-item\">\r\n                        <span className=\"experience-title full-width-field\">{item.experienceTitle}</span>\r\n                        <Grid\r\n                            container \r\n                            justifyContent=\"start\" \r\n                            alignItems=\"center\" \r\n                            rowSpacing={0.5} \r\n                            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                            <Grid item md={4} xs={6}>\r\n                                <Item>\r\n                                    <BusinessIcon fontSize=\"15\"></BusinessIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.company}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={6}>\r\n                                <Item>\r\n                                    <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.date}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={6}>\r\n                                <Item>\r\n                                    <LocationOnIcon fontSize=\"15\"></LocationOnIcon>\r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.location}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <span className=\"experience-summary\">\r\n                        {item.experienceSummary}\r\n                        </span>    \r\n                        \r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <ExperienceEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Experience);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst LanguagesEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [languageItems, setLanguageItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onLanguageChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages[index] = { language: event.target.value, proficiency: 'Beginner' };\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onAddLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index + 1, 0, { language: '' });\r\n        setLanguageItems(languages);\r\n    }\r\n    const onDeleteLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index, 1);\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        switch (event.target.value) {\r\n            case 25:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        \r\n            case 50:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Intermediate'};\r\n                break;\r\n            \r\n            case 75:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Proficient'};\r\n                break;\r\n\r\n            case 100:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Native'};\r\n                break;     \r\n            default:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        }\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: languageItems.filter((item, index) => item.language.length > 0) });\r\n        closeEditor();\r\n        setFirstTime(true);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    const getProficiencyValue = (prof) => {\r\n        let val = 25;\r\n        switch (prof) {\r\n            case 'Beginner':\r\n                val = 25;\r\n                break;\r\n        \r\n            case 'Intermediate':\r\n                val = 50;\r\n                break;\r\n            \r\n            case 'Proficient':\r\n                val = 75;\r\n                break;\r\n\r\n            case 'Native':\r\n                val = 100;\r\n                break;     \r\n            default:\r\n                val = 25\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {languageItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onLanguageChange(event, index)}\r\n                                        value={item.language}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ getProficiencyValue(item.proficiency) }\r\n                                            step={25}\r\n                                            marks\r\n                                            min={25}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddLanguage(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteLanguage(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!languageItems.filter(item => item.language.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LanguagesEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport LanguagesEditor from \"./LanguagesEditor\";\r\n\r\nimport \"./Languages.css\";\r\n\r\nconst Languages = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling languages', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  const getProgressFromProficiency = (proficiency) => {\r\n    let val = 25;\r\n    switch (proficiency) {\r\n        case 'Beginner':\r\n            val = 25;\r\n            break;\r\n    \r\n        case 'Intermediate':\r\n            val = 50;\r\n            break;\r\n        \r\n        case 'Proficient':\r\n            val = 75;\r\n            break;\r\n\r\n        case 'Native':\r\n            val = 100;\r\n            break;     \r\n        default:\r\n            val = 25\r\n            break;\r\n    }\r\n    return val;\r\n  }\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"language-wrapper\">\r\n          <div className=\"language-header\">\r\n              <div className=\"language-title\">{item.language}</div>\r\n              <div className={`language-level ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"language-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={ getProgressFromProficiency(item.proficiency) } />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n\r\n      <LanguagesEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Languages);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [professionalSummaryItems, setprofessionalSummaryItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"professionalSummaryItems\", professionalSummaryItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: professionalSummaryItems.filter(\r\n        (item, index) => item.summary.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newprofessionalSummaryItems = [...professionalSummaryItems];\r\n    newprofessionalSummaryItems[index] = {\r\n      ...newprofessionalSummaryItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setprofessionalSummaryItems(newprofessionalSummaryItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {professionalSummaryItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Summary\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"summary\")\r\n                        }\r\n                        fullWidth\r\n                        value={item.summary}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        style = {{width: 380}}\r\n                        size=\"small\"\r\n                        rows={5}\r\n                        multiline\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!professionalSummaryItems.filter(item => item.summary.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React,{useState} from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport ProfessionalSummaryEditor from \"./ProfessionalSummaryEditor\";\r\n\r\nimport \"./ProfessionalSummary.css\";\r\n\r\nconst ProfessionalSummary = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log(\"calling ProfessionalSummary\", open);\r\n\r\n  const openEditor = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n<div className=\"resume-section resume-section-professional-summary\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"professional-summary-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='professional-summary-item' key={index}>\r\n                             <span className=\"professional-summary-summary-body\">{item.summary}</span>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <ProfessionalSummaryEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(ProfessionalSummary);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillItems, setSkillItems] = useState(editorData.items);\r\n    const [rounded, setRounded] = useState(editorData.rounded);\r\n    const [filled, setFilled] = useState(editorData.filled);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onRoundedChange = (event) => {\r\n        setRounded(event.target.checked);\r\n    }\r\n\r\n    const onFilledChange = (event) => {\r\n        setFilled(event.target.checked);\r\n    }\r\n\r\n    const onSkillChange = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills[index] = { title: event.target.value };\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onAddSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setSkillItems(skills);\r\n    }\r\n    const onDeleteSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index, 1);\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, rounded: rounded, filled: filled, title: title, items: skillItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Rounded: <Switch label=\"Rounded\" onChange={onRoundedChange} checked={rounded} />\r\n                        </div>\r\n                        <div>\r\n                            Filled: <Switch label=\"Filled\" onChange={onFilledChange} checked={filled} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onSkillChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddSkill(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkill(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsEditor;","import React, {useState} from 'react';\r\nimport {Chip} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsEditor from \"./SkillsEditor\";\r\n\r\nimport './Skills.css'\r\nconst Skills = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling skills', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-skills\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"skills-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <Chip key={index} label={item.title} className={`skills-chip ${props.componentItem.componentData.rounded ? '' : 'no-rounded'}`} variant={props.componentItem.componentData.filled ? 'filled' : 'outlined'} />\r\n                );\r\n            })}\r\n            </div>\r\n\r\n\r\n            <SkillsEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Skills);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsWithProgressEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillsProgressItems, setSkillsProgressItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onskillsProgressItemsChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = { title: event.target.value, proficiency: 0 };\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onAddSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index + 1, 0, { title: '', proficiency: 0 });\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n    const onDeleteSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index, 1);\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = {title: newSkillsProgressItems[index].title, proficiency: event.target.value};\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: skillsProgressItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillsProgressItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onskillsProgressItemsChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ Number(item.proficiency) }\r\n                                            step={10}\r\n                                            marks\r\n                                            min={0}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddSkills(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkills(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillsProgressItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsWithProgressEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsWithProgressEditor from \"./SkillsWithProgressEditor\";\r\n\r\nimport \"./SkillsWithProgress.css\";\r\n\r\nconst SkillsWithProgress = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling SkillsWith Progress Bar', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className={props.componentItem.componentData.showProficiencyProgress ? 'skill-wrapper' : 'skill-wrapper min-margin'}>\r\n          <div className=\"skill-header\">\r\n              <div className=\"skill-title\">{item.title}</div>\r\n              <div className={`skill-percentage ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}%</div>\r\n          </div>\r\n          <div className=\"skill-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={Number(item.proficiency)} />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n    <SkillsWithProgressEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(SkillsWithProgress);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [socialItems, setSocialItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"socialItems\", socialItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: socialItems.filter(\r\n        (item, index) => item.socialPlatform.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems[index] = {\r\n      ...newSocialItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onAddSocial = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index + 1, 0, {\r\n        socialPlatform: \"\",\r\n        username: \"\"\r\n    });\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index, 1);\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {socialItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Social Platform\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"socialPlatform\")\r\n                        }\r\n                        value={item.socialPlatform}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Username or URL\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"username\")\r\n                        }\r\n                        value={item.username}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddSocial(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!socialItems.filter(item => item.socialPlatform.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React, {useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SocialEditor from \"./SocialEditor\";\r\n\r\nimport './Social.css'\r\nconst Social = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling Social', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-Social\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"social-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='social-item' key={index}>\r\n                            <div className='social-platform'>{item.socialPlatform}</div>\r\n                            <div className='social-username'>{item.username}</div>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n            <SocialEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Social);","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { AppBar, Button, Box, Toolbar, Link, Paper, Grid, Autocomplete, TextField } from '@mui/material';\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport GoogleLogin from '../../components/Login/GoogleLogin'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getResumeDataByUserId, updateResumeDataByUserId } from '../../reducers/resumeDataSlice';\r\nimport WebAssetOutlinedIcon from '@mui/icons-material/WebAssetOutlined';\r\nimport WebOutlinedIcon from '@mui/icons-material/WebOutlined';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\n\r\nimport './Builder.css'\r\nimport logo from '../../logo.svg';\r\nimport GlobalResumeSetting from \"../../components/GlobalResumeSetting/GlobalResumeSetting\";\r\n\r\nimport Achievement from '../../components/Achievements/Achievement'\r\nimport BasicInfo from '../../components/BasicInfo/BasicInfo'\r\nimport Education from '../../components/Education/Education'\r\nimport Experience from '../../components/Experience/Experience'\r\nimport Languages from '../../components/Languages/Languages';\r\nimport ProfessionalSummary from '../../components/ProfessionalSummary/ProfessionalSummary';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsWithProgress from '../../components/SkillsWithProgress/SkillsWithProgress';\r\nimport Social from '../../components/Social/Social';\r\n\r\n\r\nfunction Builder() {\r\n  \r\n  const {authReducer, resumeDataReducer} = useSelector((state) => state);\r\n  const [arr, setItems] = useState(null);\r\n  const [sidebar, setSidebar] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const  openGlobalSetting = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n      console.log('calling builder effect');\r\n      setItems(resumeDataReducer.resumeData);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resumeDataReducer]);\r\n    \r\n  useEffect(() => {\r\n    getResumeData();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n\r\n  function getResumeData() {\r\n    console.log('geting data again');\r\n    dispatch(getResumeDataByUserId(authReducer.userId)).then((res) => {\r\n      setItems(res.payload);\r\n    });\r\n\r\n    // if (authReducer.userId) {\r\n    //   console.log(authReducer.userId);\r\n    //   const ref = firebase.firestore().collection('users').doc(authReducer.userId);\r\n    //   ref.get().then((doc) => {\r\n    //     const items = doc.data();\r\n    //     console.log('data', items);\r\n    //     const data = JSON.parse(items.resumeJson);\r\n    //     setItems(data);\r\n    //   });\r\n    // }\r\n    \r\n  }\r\n\r\n  function updateResumeData(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeDataByUserId({data:newData, userId: authReducer.userId}));\r\n    }\r\n  }\r\n\r\n  let resumeHTML;\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now())\r\n  }\r\n\r\n  const copyComponent = (event, item, index, column) => {\r\n    item = {...item, copy: true, name: `${item.name}-${getUniqueId()}`};\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index + 1, 0, item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const deleteComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    const { destination, source, draggableId } = result;\r\n    // if canceling the dragNdrop in between\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    // if rearranging in same column\r\n    if (destination.droppableId === source.droppableId) {\r\n        const newArr = Array.from(arr[source.droppableId]);\r\n        newArr.splice(source.index, 1);\r\n        newArr.splice(destination.index, 0, arr[destination.droppableId].filter(x => x.name === draggableId)[0]);\r\n        \r\n        const colId = destination.droppableId;\r\n        \r\n        const newColumn = {\r\n          ...arr,\r\n          [colId]: newArr\r\n        }\r\n        setItems(newColumn);\r\n        updateResumeData(newColumn);\r\n    } else {\r\n      // Else if moving from sidebar to main column or vice-versa\r\n      const sourceId = source.droppableId;\r\n      const destId = destination.droppableId;\r\n      const sourceArr = Array.from(arr[source.droppableId]);\r\n      const destArr = Array.from(arr[destination.droppableId]);\r\n      // remove from source\r\n      sourceArr.splice(source.index, 1);\r\n      // add to destination\r\n      destArr.splice(destination.index, 0, arr[source.droppableId].filter(x => x.name === result.draggableId)[0]);\r\n      const newColumn = {\r\n        ...arr,\r\n        [sourceId]: sourceArr,\r\n        [destId]: destArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    }\r\n  }\r\n\r\n  function getComponent(componentType, item, columnName) {\r\n      switch (componentType) {\r\n        case 'Achievements':\r\n            return <Achievement componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'BasicInfo':\r\n          return <BasicInfo componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Experience':\r\n            return <Experience componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Education':\r\n            return <Education componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Languages':\r\n            return <Languages componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'ProfessionalSummary':\r\n          return <ProfessionalSummary componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Skills':\r\n          return <Skills componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'SkillsWithProgress':\r\n          return <SkillsWithProgress componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Social':\r\n            return <Social componentColumn={columnName} componentItem={item} />;  \r\n            \r\n        default:\r\n            return null;\r\n    }\r\n  }\r\n\r\n\r\n  if (arr) {\r\n    resumeHTML = <DragDropContext onDragEnd={onDragEnd}>\r\n    <div className=\"resume-paper-wrap\">\r\n      <Grid container spacing={2}>\r\n          <Grid item xs={8}>\r\n            <div className=\"layout-options\">\r\n            <span>\r\n                Setting: \r\n              </span>\r\n              <Box sx={{width: 5}}></Box>\r\n              <SettingsOutlinedIcon onClick={openGlobalSetting}></SettingsOutlinedIcon>\r\n              <Box sx={{width: 10}}></Box>\r\n              <span>\r\n                Layout: \r\n              </span>\r\n              <Box sx={{width: 5}}></Box>\r\n              \r\n              <WebAssetOutlinedIcon onClick={() => {\r\n                setSidebar(false)\r\n                const newArr = {...arr, main: [...arr['main'], ...arr['sidebar']], sidebar: []};\r\n                setItems(newArr);\r\n                }}></WebAssetOutlinedIcon>\r\n              <Box sx={{width: 8}}></Box>\r\n              <WebOutlinedIcon onClick={() => {setSidebar(true)}}></WebOutlinedIcon>\r\n            </div>\r\n            <Paper className=\"resume-paper\" sx={{fontSize: 'small'}} elevation={3} >\r\n              <Grid container>\r\n                <Grid item xs={12} id=\"header\">\r\n                  <Droppable droppableId=\"header\">\r\n                    {(provided, snapshot) => (\r\n                      <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                        <Suspense fallback={<div>Loading</div>}>\r\n                          {arr.header.map((item, index) => {\r\n                            return (\r\n                              <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                  <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'} \r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                    { getComponent(item.componentType, item, 'header') }\r\n                                    <div className=\"overlay\">\r\n                                      <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                        <DragIndicatorIcon/>\r\n                                      </span>\r\n                                      <span className=\"copy-component\">\r\n                                        <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                      <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                            );\r\n                          }\r\n                          )}\r\n                          {provided.placeholder}\r\n                        </Suspense>\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </Grid>\r\n                <Grid item xs={sidebar ? 7 : 12} id=\"main\">\r\n                <Droppable droppableId=\"main\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.main.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'} \r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                  \r\n                                  { getComponent(item.componentType, item, 'main') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'main')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'main')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid>\r\n                \r\n                {sidebar ? \r\n                <Grid item xs={5} id=\"sidebar\">\r\n                <Droppable droppableId=\"sidebar\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over sidebar-column' : 'resume-paper-content sidebar-column'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.sidebar.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                  { getComponent(item.componentType, item, 'sidebar') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'sidebar')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'sidebar')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid> : null}\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <div className=\"component-library-header\">\r\n              <div>\r\n                <span className=\"component-library-title\">All Widgets</span>\r\n              </div>\r\n              <Autocomplete\r\n                id=\"component-library-filter\"\r\n                options={[\r\n                  { label: 'Education', id: 1 },\r\n                  { label: 'Skills', id: 2 },\r\n                ]}\r\n                sx={{ width: 150 }}\r\n                renderInput={(params) => <TextField {...params} placeholder=\"Filter\"  variant=\"standard\" />}\r\n              />\r\n            </div>            \r\n            <Paper style={{padding: '20px'}} className=\"widget-library\" elevation={0}>\r\n\r\n            <Droppable droppableId=\"componentLibrary\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.componentLibrary.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n\r\n                                  { getComponent(item.componentType, item, 'componentLibrary') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'componentLibrary')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'componentLibrary')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n\r\n    <GlobalResumeSetting open={open} setOpen={setOpen}></GlobalResumeSetting>\r\n  </DragDropContext>;\r\n  } else {\r\n    resumeHTML = <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"builder-wrap\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <AppBar elevation={0} className=\"global-header\" color=\"inherit\" position=\"fixed\">\r\n            <Toolbar className=\"builder-header\">\r\n              <div className=\"header-filters\">\r\n                <img src={logo} className=\"header-logo\" alt=\"Resume Builder\" />\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link active\" href=\"#\">About</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Experience</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Education</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Skills</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Languages</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Achievement</Link>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                    onClick={window.print}\r\n                    variant=\"contained\"\r\n                    color=\"primary\" \r\n                    disableElevation\r\n                    className=\"header-download-button\">\r\n                        Download Resume\r\n                </Button>\r\n                <GoogleLogin></GoogleLogin>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n      \r\n      {resumeHTML}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Builder;","import './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport { Container, Box } from '@mui/material';\r\n\r\nimport GlobalHeader from '../GlobalHeader/GlobalHeader';\r\nimport About from '../../pages/About/About';\r\nimport Contact from '../../pages/Contact/Contact';\r\nimport Builder from '../../pages/Builder/Builder';\r\n\r\nfunction App() {\r\nconst isSignedIn = useSelector(state => state.authReducer.isSignedIn);\r\n  return (\r\n      <Router>\r\n        <GlobalHeader/>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/builder\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Builder></Builder>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact></Contact>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About/>\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                  <h1>Home Page</h1>\r\n                </Box> \r\n              </Container>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\n// Or Create your Own theme:\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#09915A'\r\n      }\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        variants: [\r\n          {\r\n            props: { variant: 'space-40', color: 'primary' },\r\n            style: {\r\n              paddingLeft: '40px',\r\n              paddingRight: '40px'\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  export default theme;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authSlice from \"./authSlice\";\r\nimport resumeDataSlice from \"./resumeDataSlice\";\r\n\r\n// export default combineReducers({\r\n//     authReducer: authReducer\r\n// });\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authReducer: authSlice,\r\n    resumeDataReducer: resumeDataSlice\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme'\nimport {store} from './reducers';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}