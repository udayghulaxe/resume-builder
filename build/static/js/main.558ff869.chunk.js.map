{"version":3,"sources":["logo.svg","reducers/authSlice.js","firebase.js","components/Login/GoogleLogin.js","components/GlobalHeader/GlobalHeader.js","pages/About/About.js","pages/Contact/Contact.js","reducers/resumeDataSlice.js","components/GlobalResumeSetting/GlobalResumeSetting.js","components/Achievements/AchievementEditor.js","components/Achievements/Achievement.js","components/BasicInfo/BasicInfoEditor.js","components/BasicInfo/BasicInfo.js","components/Education/EducationEditor.js","components/Education/Education.js","components/Experience/ExperienceEditor.js","components/Experience/Experience.js","components/Languages/LanguagesEditor.js","components/Languages/Languages.js","components/ProfessionalSummary/ProfessionalSummaryEditor.js","components/ProfessionalSummary/ProfessionalSummary.js","components/Skills/SkillsEditor.js","components/Skills/Skills.js","components/SkillsWithProgress/SkillsWithProgressEditor.js","components/SkillsWithProgress/SkillsWithProgress.js","components/Social/SocialEditor.js","components/Social/Social.js","pages/Builder/Builder.js","components/App/App.js","theme/index.js","reducers/index.js","index.js"],"names":["INITIAL_STATE","isSignedIn","localStorage","getItem","userId","name","email","authSlice","createSlice","initialState","reducers","signInAction","state","action","payload","signOutAction","actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initialData","header","componentType","path","componentData","title","items","summary","main","university","date","gpa","showIcon","experienceTitle","company","location","experienceSummary","sidebar","showProficiency","showProficiencyProgress","proficiency","filled","rounded","socialPlatform","username","componentLibrary","language","GoogleLogin","onAuthChange","isSignedInStatus","props","auth","currentUser","get","getId","getBasicProfile","getName","getEmail","onSignInClick","signIn","then","firestore","collection","doc","exists","setItem","getAuthResponse","id_token","history","replace","filter","item","fullName","website","phone","address","set","resumeJson","JSON","stringify","catch","error","console","log","onSignOutClick","signOut","removeItem","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","this","className","CircularProgress","size","Button","onClick","variant","color","disableElevation","renderAuthButton","Component","mapDispatchToProps","connect","authReducer","withRouter","GlobalHeader","useLocation","pathname","Box","sx","flexGrow","AppBar","elevation","position","Toolbar","src","logo","alt","component","NavLink","to","exact","React","memo","About","Container","maxWidth","m","textAlign","Contact","getResumeDataByUserId","createAsyncThunk","thunkAPI","a","data","response","parse","updateResumeDataByUserId","apiData","resumeDataSlice","resumeData","loading","updateResumeDataReducer","column","extraReducers","builder","addCase","fulfilled","GlobalResumeSetting","fontSizes","value","label","closeEditor","setOpen","Dialog","fullWidth","open","onClose","DialogContent","map","font","index","event","setHeadingFontSize","setSubeadingFontSize","setBodyFontSize","DialogActions","AchievementEditor","useState","editorData","setEditorData","firstime","setFirstTime","setTitle","achievementItems","setAchievementItems","setShowIcon","dispatch","useDispatch","useEffect","componentName","componentColumn","TextField","autoComplete","onChange","newVal","target","Switch","checked","mb","mt","mr","skills","onAchievementChange","multiline","rows","inputProps","style","fontSize","lineHeight","width","splice","onAddAchievement","onDeleteAchievement","length","disabled","Achievement","componentItem","BasicInfoEditor","onDataChange","property","newName","newEditorData","readOnly","currentRole","Item","styled","theme","typography","caption","display","alignItems","palette","text","secondary","BasicInfo","Grid","container","justifyContent","rowSpacing","columnSpacing","xs","sm","md","pl","EducationEditor","educationItems","setEducationItems","newTitle","newEducationItems","onEducationTitleChange","newUniversity","onUniversityChange","newDate","onDateChange","placeholder","newGPA","onGpaChange","onAddEducation","onDeleteEducation","height","Divider","Education","ExperienceEditor","experienceItems","setExperienceItems","onFieldChange","newValue","newExperienceItems","onAddExperience","onDeleteExperience","Experience","LanguagesEditor","languageItems","setLanguageItems","setShowProficiency","setShowProficiencyProgress","getProficiencyValue","prof","val","onShowProficiencyChange","onShowProficiencyProgressChange","languages","onLanguageChange","Slider","step","marks","min","max","onProficiencyChange","onAddLanguage","onDeleteLanguage","Languages","getProgressFromProficiency","LinearProgress","SocialEditor","professionalSummaryItems","setprofessionalSummaryItems","newprofessionalSummaryItems","ProfessionalSummary","ProfessionalSummaryEditor","SkillsEditor","skillItems","setSkillItems","setRounded","setFilled","onSkillChange","onAddSkill","onDeleteSkill","Skills","Chip","SkillsWithProgressEditor","skillsProgressItems","setSkillsProgressItems","newSkillsProgressItems","onskillsProgressItemsChange","Number","onAddSkills","onDeleteSkills","SkillsWithProgress","socialItems","setSocialItems","newSocialItems","onAddSocial","Social","Builder","resumeHTML","useSelector","resumeDataReducer","arr","setItems","setSidebar","bodyFontSize","headingFontSize","subheadingFontSize","updateResumeData","newData","res","copyComponent","copy","Math","floor","random","Date","now","newArr","deleteComponent","getComponent","columnName","onDragEnd","result","destination","source","draggableId","droppableId","Array","from","x","colId","newColumn","sourceId","destId","sourceArr","destArr","spacing","Paper","id","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","fallback","isDragging","draggableProps","key","dragHandleProps","Autocomplete","options","renderInput","params","padding","Link","underline","href","print","App","createTheme","primary","components","MuiButton","variants","paddingLeft","paddingRight","store","configureStore","reducer","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"6iBAAe,MAA0B,iC,+CCEnCA,EAAgB,CAClBC,WAA+C,MAAjCC,aAAaC,QAAQ,SACnCC,OAAQ,KACRC,KAAM,KACNC,MAAO,MAGEC,EAAYC,YAAY,CACjCH,KAAM,OACNI,aAAcT,EACdU,SAAU,CACNC,aAAc,SAACC,EAAOC,GAClBD,EAAMX,YAAa,EACnBW,EAAMR,OAASS,EAAOC,QAAQV,OAC9BQ,EAAMP,KAAOQ,EAAOC,QAAQT,KAC5BO,EAAMN,MAAQO,EAAOC,QAAQR,OAEjCS,cAAe,SAACH,GACZA,EAAMX,YAAa,EACnBW,EAAMR,OAAS,KACfQ,EAAMP,KAAO,KACbO,EAAMN,MAAQ,SAKnB,EAAwCC,EAAUS,QAA1CL,EAAR,EAAQA,aAAcI,EAAtB,EAAsBA,cAEdR,IAAf,Q,gBChBAU,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAMMP,QAAf,E,OCRMQ,EAAc,CAChBC,OAAQ,CACJ,CACIrB,KAAM,YACNsB,cAAe,YACfC,KAAM,uBAEV,CACIvB,KAAM,sBACNsB,cAAe,sBACfC,KAAM,0CACNC,cAAe,CACXC,MAAO,uBACPC,MAAO,CACL,CACEC,QAAS,6BAO3BC,KAAM,CACJ,CACE5B,KAAM,YACNsB,cAAe,YACfC,KAAM,sBACNC,cAAe,CACbC,MAAO,YACPC,MAAO,CACL,CACED,MAAO,wCACPI,WAAY,4BACZC,KAAM,cACNC,IAAK,cAEP,CACEN,MAAO,yBACPI,WAAY,yCACZC,KAAM,cACNC,IAAK,kBAKb,CACE/B,KAAM,eACNsB,cAAe,eACfC,KAAM,2BACNC,cAAe,CACbC,MAAO,eACPO,UAAU,EACVN,MAAO,CACL,CACED,MACE,yIAEJ,CAAEA,MAAO,+CACT,CACEA,MAAO,iEAKf,CACEzB,KAAM,aACNsB,cAAe,aACfC,KAAM,wBACNC,cAAe,CACbC,MAAO,aACPC,MAAO,CACL,CACEO,gBAAiB,oBACjBC,QAAS,SACTJ,KAAM,cACNK,SAAU,WACVC,kBACE,oIAEJ,CACEH,gBAAiB,sBACjBC,QAAS,SACTJ,KAAM,cACNK,SAAU,WACVC,kBACE,wIAMZC,QAAS,CACP,CACErC,KAAM,qBACNsB,cAAe,qBACfC,KAAM,wCACNC,cAAe,CACbC,MAAO,SACPa,iBAAiB,EACjBC,yBAAyB,EACzBb,MAAO,CACL,CAAED,MAAO,OAAQe,YAAa,IAC9B,CAAEf,MAAO,MAAOe,YAAa,IAC7B,CAAEf,MAAO,aAAce,YAAa,MACpC,CAAEf,MAAO,QAASe,YAAa,OAIrC,CACExC,KAAM,SACNsB,cAAe,SACfC,KAAM,gBACNC,cAAe,CACbC,MAAO,SACPgB,QAAQ,EACRC,SAAS,EACThB,MAAO,CACL,CAAED,MAAO,QACT,CAAEA,MAAO,OACT,CAAEA,MAAO,cACT,CAAEA,MAAO,YAIf,CACEzB,KAAM,QACNsB,cAAe,SACfC,KAAM,gBACNC,cAAe,CACbC,MAAO,QACPgB,QAAQ,EACRC,SAAS,EACThB,MAAO,CAAC,CAAED,MAAO,OAAS,CAAEA,MAAO,WAAa,CAAEA,MAAO,WAG7D,CACEzB,KAAM,UACNsB,cAAe,SACfC,KAAM,gBACNC,cAAe,CACbC,MAAO,UACPgB,QAAQ,EACRC,SAAS,EACThB,MAAO,CACL,CAAED,MAAO,WACT,CAAEA,MAAO,YACT,CAAEA,MAAO,aAIf,CACEzB,KAAM,SACNsB,cAAe,SACfC,KAAM,gBACNC,cAAe,CACbC,MAAO,SACPC,MAAO,CACL,CACEiB,eAAgB,WAChBC,SAAU,aAEZ,CACED,eAAgB,UAChBC,SAAU,iBAMpBC,iBAAkB,CAChB,CACE7C,KAAM,YACNsB,cAAe,YACfC,KAAM,sBACNC,cAAe,CACbC,MAAO,YACPa,iBAAiB,EACjBC,yBAAyB,EACzBb,MAAO,CACL,CAAEoB,SAAU,UAAWN,YAAa,cACpC,CAAEM,SAAU,QAASN,YAAa,UAClC,CAAEM,SAAU,UAAWN,YAAa,iBAOxCO,E,4MA0BJC,aAAe,SAACC,GACVA,EACF,EAAKC,MAAM5C,aAAa,CACtBP,OAAQ,EAAKoD,KAAKC,YAAYC,MAAMC,QACpCtD,KAAM,EAAKmD,KAAKC,YAAYC,MAAME,kBAAkBC,UACpDvD,MAAO,EAAKkD,KAAKC,YAAYC,MAAME,kBAAkBE,aAGvD,EAAKP,MAAMxC,iB,EAIfgD,cAAgB,WACd,EAAKP,KAAKQ,SAASC,MAAK,WACtB,IAAM7D,EAAS,EAAKoD,KAAKC,YAAYC,MAAMC,QACrCtD,EAAO,EAAKmD,KAAKC,YAAYC,MAAME,kBAAkBC,UACrDvD,EAAQ,EAAKkD,KAAKC,YAAYC,MAAME,kBAAkBE,WAC5D,EAAKP,MAAM5C,aAAa,CACtBP,OAAQA,EACRC,KAAM,EAAKmD,KAAKC,YAAYC,MAAME,kBAAkBC,UACpDvD,MAAO,EAAKkD,KAAKC,YAAYC,MAAME,kBAAkBE,aAIvD7C,EACGiD,YACAC,WAAW,SACXC,IAAIhE,GACJsD,MACAO,MAAK,SAACG,GAEDA,EAAIC,QACNnE,aAAaoE,QACX,QACA,EAAKd,KAAKC,YAAYC,MAAMa,kBAAkBC,UAEhD,EAAKjB,MAAMkB,QAAQC,QAAQ,aAE3BjD,EAAYC,OAAOiD,QACjB,SAACC,GAAD,MAAwB,cAAdA,EAAKvE,QACf,GAAGwB,cAAgB,CACnBgD,SAAUxE,EACVC,MAAOA,EACPwE,QAAS,kBACTC,MAAO,aACPC,QAAS,gDAEX/D,EACGiD,YACAC,WAAW,SACXC,IAAIhE,GACJ6E,IAAI,CACHC,WAAYC,KAAKC,UAAU3D,GAC3BrB,OAAQA,EACRC,KAAMA,EACNC,MAAOA,IAER2D,MAAK,WACJ/D,aAAaoE,QACX,QACA,EAAKd,KAAKC,YAAYC,MAAMa,kBAAkBC,UAEhD,EAAKjB,MAAMkB,QAAQC,QAAQ,kBAIlCW,OAAM,SAACC,GACNC,QAAQC,IAAI,0BAA2BF,U,EAK/CG,eAAiB,WACf,EAAKjC,KAAKkC,UAAUzB,MAAK,WACvB/D,aAAayF,WAAW,SACxB,EAAKpC,MAAMxC,oB,uDA7Ff,WAAqB,IAAD,OAClB6E,OAAOC,KAAKC,KAAK,gBAAgB,WAC/BF,OAAOC,KAAKE,OACTC,KAAK,CACJC,SACE,4EACFC,MAAO,kBAERjC,MAAK,WACJ,EAAKT,KAAOoC,OAAOC,KAAKM,MAAMC,kBAE9B,EAAK/C,aAAa,EAAKG,KAAKvD,WAAWyD,OAEvC,EAAKF,KAAKvD,WAAWoG,OAAO,EAAKhD,sB,8BAoFzC,WACE,OAA8B,OAA1BiD,KAAK/C,MAAMtD,WAEX,qBAAKsG,UAAU,2BAAf,SACE,cAACC,EAAA,EAAD,CAAkBD,UAAU,eAAeE,KAAM,OAG5CH,KAAK/C,MAAMtD,WAElB,cAACyG,EAAA,EAAD,CACEC,QAASL,KAAKb,eACdmB,QAAQ,YACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,sBALZ,oBAYA,cAACG,EAAA,EAAD,CACEC,QAASL,KAAKvC,cACd6C,QAAQ,YACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,sBALZ,6B,oBAaN,WACE,OAAOD,KAAKS,uB,GA5IUC,aAsJpBC,EAAqB,CAAEtG,eAAcI,iBAE5BmG,eARS,SAACtG,GACvB,MAAO,CACLX,WAAYW,EAAMuG,YAAYlH,cAQhCgH,EAFaC,CAGbE,YAAWhE,ICtVPiE,G,OAAe,WACjB,MAAmC,aAA3BC,cAAcC,SAClB,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACI,cAACC,EAAA,EAAD,CAAQC,UAAW,EAAGrB,UAAU,gBAAgBM,MAAM,cAAcgB,SAAS,SAA7E,SACI,eAACC,EAAA,EAAD,WACI,qBAAKC,IAAKC,EAAMzB,UAAU,cAAc0B,IAAI,mBAC5C,qBAAK1B,UAAU,mBAAf,SACI,oDAEJ,gCACI,cAACG,EAAA,EAAD,CACIwB,UAAWC,IACXC,GAAG,IACHC,OAAK,EACLzB,QAAQ,OACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,iCAPd,kBAUA,cAACG,EAAA,EAAD,CACIwB,UAAWC,IACXC,GAAG,SACHxB,QAAQ,OACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,iCANd,mBASA,cAACG,EAAA,EAAD,CACIwB,UAAWC,IACXC,GAAG,WACHxB,QAAQ,OACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,iCANd,qBASA,cAAC,EAAD,cAKhB,2BAGQ+B,MAAMC,KAAKlB,GCnDrBmB,E,4JACF,WACI,OACI,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAAClB,EAAA,EAAD,CAAKmB,EAAE,OAAOC,UAAU,SAAxB,SACI,+C,GALA5B,aAYLwB,ICZTK,E,4JACF,WACI,OACI,cAACJ,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAAClB,EAAA,EAAD,CAAKmB,EAAE,OAAOC,UAAU,SAAxB,SACI,iD,GALE5B,aAYP6B,I,8HCNFC,GAAwBC,YACnC,+BADmD,yCAEnD,WAAO3I,EAAQ4I,GAAf,gBAAAC,EAAA,sEACgChI,EAASiD,YAAYC,WAAW,SAASC,IAAIhE,GAAQsD,MADrF,8BAC4FwF,OAD5F,cACQC,EADR,yBAEShE,KAAKiE,MAAMD,EAASjE,aAF7B,2CAFmD,yDASxCmE,GAA2BN,YACtC,kCADsD,yCAEtD,WAAOO,EAASN,GAAhB,UAAAC,EAAA,sEACehI,EAASiD,YAAYC,WAAW,SAASC,IAAIkF,EAAQlJ,QAAQ6E,IAAI,CAACC,WAAYC,KAAKC,UAAUkE,EAAQJ,QADpH,gCAESI,EAAQJ,MAFjB,2CAFsD,yDAS3CK,GAAkB/I,YAAY,CACvCH,KAAM,kBACNI,aA3BkB,CAClB+I,WAAY,KAAMC,QAAS,QA2B3B/I,SAAU,CACNgJ,wBAAyB,SAAC9I,EAAOC,GAC7B,IAAMqI,EAAO/D,KAAKiE,MAAMjE,KAAKC,UAAUxE,EAAM4I,aAC7CN,EAAKrI,EAAOC,QAAQ6I,QAAQhF,QAAO,SAAAC,GAAI,OAAIA,EAAKvE,OAASQ,EAAOC,QAAQT,QAAM,GAAGwB,cAAgBhB,EAAOC,QAAQoI,KAChHtI,EAAM4I,WAAaN,IAG3BU,cAAe,SAACC,GAEZA,EAAQC,QAAQhB,GAAsBiB,WAAW,SAACnJ,EAAOC,GACrDD,EAAM4I,WAAa3I,EAAOC,WAG7BgJ,QAAQT,GAAyBU,WAAW,SAACnJ,EAAOC,GACnDD,EAAM4I,WAAa3I,EAAOC,cAKrB4I,GAA4BH,GAAgBvI,QAA5C0I,wBAEAH,MAAf,Q,8ICvCMS,I,OAAsB,SAACzG,GAC3B,IAAM0G,EAAY,CAChB,CACEC,MAAO,UACPC,MAAO,MAET,CACED,MAAO,QACPC,MAAO,KAET,CACED,MAAO,SACPC,MAAO,KAET,CACED,MAAO,QACPC,MAAO,KAET,CACED,MAAO,SACPC,MAAO,OAILC,EAAc,WAClB7G,EAAM8G,SAAQ,IAgBhB,OACE,eAACC,GAAA,EAAD,CACE5B,SAAS,KACT6B,WAAW,EACXC,KAAMjH,EAAMiH,KACZC,QAASL,EAJX,UAME,cAACM,GAAA,EAAD,UACE,sBAAKnE,UAAU,sBAAf,UAEE,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,6CAEF,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,4BAAhB,uBACA,qBAAKA,UAAU,2BAAf,SACG0D,EAAUU,KAAI,SAACC,EAAMC,GACpB,OACE,qBAAiBtE,UAAU,gBAAgBI,QAAS,SAACmE,GAAD,OAhCxCrE,EAgC4EmE,EAAKV,WA/B7G3G,EAAMwH,mBAAmBtE,GADD,IAAIA,GAgCZ,SAAsGmE,EAAKT,OAAjGU,cAQpB,sBAAKtE,UAAU,yBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,gDAEF,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,4BAAhB,uBACA,qBAAKA,UAAU,2BAAf,SACG0D,EAAUU,KAAI,SAACC,EAAMC,GACpB,OACE,qBAAiBtE,UAAU,gBAAgBI,QAAS,SAACmE,GAAD,OA7CrCrE,EA6C4EmE,EAAKV,WA5ChH3G,EAAMyH,qBAAqBvE,GADA,IAAIA,GA6Cf,SAAyGmE,EAAKT,OAApGU,cAOpB,sBAAKtE,UAAU,yBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,0CAEF,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,4BAAhB,uBACA,qBAAKA,UAAU,2BAAf,SACG0D,EAAUU,KAAI,SAACC,EAAMC,GACpB,OACE,qBAAiBtE,UAAU,gBAAgBI,QAAS,SAACmE,GAAD,OAzD3CrE,EAyD4EmE,EAAKV,WAxD1G3G,EAAM0H,gBAAgBxE,GADD,IAAIA,GAyDT,SAAmGmE,EAAKT,OAA9FU,mBAUxB,eAACK,GAAA,EAAD,WACE,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QAASyD,EAAjB,0BAMQ9B,OAAMC,KAAKyB,I,2FCZZmB,GArGW,SAAC5H,GACvB,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAASC,EAAWvJ,OAA9C,mBAAOA,EAAP,KAAc2J,EAAd,KACA,EAAgDL,mBAASC,EAAWtJ,OAApE,mBAAO2J,EAAP,KAAyBC,EAAzB,KACA,EAAgCP,mBAASC,EAAWhJ,UAApD,mBAAOA,EAAP,KAAiBuJ,EAAjB,KACMC,EAAWC,cAoCX1B,EAAc,WAChB7G,EAAM8G,SAAQ,IAYlB,OATA0B,qBAAU,WACFR,IACAM,EAASnC,GAAwB,CAAErJ,KAAMkD,EAAMyI,cAAerC,OAAQpG,EAAM0I,gBAAiB/C,KAAMmC,KACnGG,GAAa,MAGlB,CAACH,IAIA,eAACf,GAAA,EAAD,CAAQ5B,SAAS,KAAK6B,WAAW,EAAMC,KAAMjH,EAAMiH,KAAMC,QAASL,EAAlE,UACI,cAACM,GAAA,EAAD,UACI,sBAAKnE,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC2F,EAAA,EAAD,CAAW3B,WAAS,EAAC4B,aAAa,MAAMC,SApDtC,SAACtB,GACnB,IAAMuB,EAASvB,EAAMwB,OAAOpC,MAC5BuB,EAASY,IAkDwEnC,MAAOpI,EAAO8E,QAAQ,eAG3F,qBAAKL,UAAU,sBAAf,SACI,8CACe,cAACgG,GAAA,EAAD,CAAQpC,MAAM,UAAUiC,SApDlC,SAACtB,GACtBc,EAAYd,EAAMwB,OAAOE,UAmD0DA,QAASnK,SAIhF,qBAAKkE,UAAU,oBAAf,SACKmF,EAAiBf,KAAI,SAAC/F,EAAMiG,GACzB,OACI,sBAAKtE,UAAU,cAAf,UACI,cAAC2F,EAAA,EAAD,CACI/B,MAAO,WAAaU,EAAQ,GAC5BpD,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OA1DlB,SAACA,EAAOD,GAChC,IAAI+B,EAAM,YAAOlB,GACjBkB,EAAO/B,GAAS,CAAE/I,MAAOgJ,EAAMwB,OAAOpC,OACtCyB,EAAoBiB,GAuDiCC,CAAoB/B,EAAOD,IAChDX,MAAOtF,EAAK9C,MACZ,WAAU+I,EACViC,WAAS,EACTC,KAAM,EACNC,WAAY,CAACC,MAAO,CAACC,SAAU,GAAIC,WAAY,MAC/CF,MAAS,CAACG,MAAO,OAErB,cAAC,KAAD,CAAezG,QAAS,SAACmE,GAAD,OA5D/B,SAACA,EAAOD,GAC7B,IAAI+B,EAAM,YAAOlB,GACjBkB,EAAOS,OAAOxC,EAAQ,EAAG,EAAG,CAAE/I,MAAO,KACrC6J,EAAoBiB,GAyD2CU,CAAiBxC,EAAOD,IAAQtE,UAAU,kBAC7E,cAAC,KAAD,CAAmBI,QAAS,SAACmE,GAAD,OAxDhC,SAACA,EAAOD,GAChC,IAAI+B,EAAM,YAAOlB,GACjBkB,EAAOS,OAAOxC,EAAO,GACrBc,EAAoBiB,GAqD+CW,CAAoBzC,EAAOD,IAAQtE,UAAS,2BAAgC,IAAVsE,EAAc,SAAW,QAbpGA,aAqBtD,eAACK,GAAA,EAAD,WACI,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QA5DL,SAACmE,GACZQ,EAAc,2BAAKD,GAAN,IAAkBvJ,MAAOA,EAAOO,SAAUA,EAAUN,MAAO2J,EAAiB/G,QAAO,SAACC,EAAMiG,GAAP,OAAiBjG,EAAK9C,MAAM0L,OAAS,QACrIhC,GAAa,GACbpB,IACA7E,QAAQC,IAAI6F,IAwDqBoC,UAAW/B,EAAiB/G,QAAO,SAAAC,GAAI,OAAIA,EAAK9C,MAAM0L,OAAS,KAAGA,OAA3F,yBCnGVE,I,OAAc,SAACnK,GACnB,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KACA9E,QAAQC,IAAI,qBAAsBgF,GAMlC,OACE,sBAAKjE,UAAU,4CAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,+BAAOhD,EAAMoK,cAAc9L,cAAcC,QACzC,sBAAMyE,UAAU,sBAAhB,SACE,cAAC,KAAD,CAAUI,QATE,WAChB0D,GAAQ,WAYR,qBAAK9D,UAAU,wBAAf,SACGhD,EAAMoK,cAAc9L,cAAcE,MAAM4I,KAAI,SAAC/F,EAAMiG,GAClD,OACE,sBAAkCtE,UAAU,mBAA5C,UACE,sBAAMA,UAAS,2BAAsBhD,EAAMoK,cAAc9L,cAAcQ,SAAW,GAAK,UAAvF,SACE,cAAC,KAAD,MAEF,sBAAMkE,UAAU,sBAAhB,SACG3B,EAAK9C,UALV,sBAAyB+I,SAY/B,cAAC,GAAD,CAAmBL,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,qBAMxJyG,OAAMC,KAAKmF,I,4FCmFZE,GAtHS,SAACrK,GACrB,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACMK,EAAWC,cAEX+B,EAAe,SAAC/C,EAAOgD,GACzB,IAAMC,EAAUjD,EAAMwB,OAAOpC,MACzB8D,EAAa,eAAO3C,GACxB2C,EAAa,2BAAOA,GAAP,kBAAuBF,EAAWC,IAC/CzC,EAAc0C,IAUZ5D,EAAc,WAChB7G,EAAM8G,SAAQ,IAYlB,OATA0B,qBAAU,WACFR,IACDM,EAASnC,GAAwB,CAAErJ,KAAMkD,EAAMyI,cAAerC,OAAQpG,EAAM0I,gBAAiB/C,KAAMmC,KACnGG,GAAa,MAGjB,CAACH,IAIA,eAACf,GAAA,EAAD,CAAQ5B,SAAS,KAAK6B,WAAW,EAAMC,KAAMjH,EAAMiH,KAAMC,QAASL,EAAlE,UACI,cAACM,GAAA,EAAD,UACI,sBAAKnE,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC2F,EAAA,EAAD,CAAW3B,WAAS,EAAC0D,UAAQ,EAAC9B,aAAa,MAAMjC,MAAM,aAAatD,QAAQ,eAEhF,qBAAKL,UAAU,oBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,gCACI,8BACI,cAAC2F,EAAA,EAAD,CACI/B,MAAM,YACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAAW+C,EAAa/C,EAAO,aACzCZ,MAAOmB,EAAWxG,SAClBmI,WAAY,CAAEC,MAAO,CAAEC,SAAU,GAAIE,MAAO,MAC5C3G,KAAK,YAGb,8BACI,cAACyF,EAAA,EAAD,CACI/B,MAAM,2BACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAAW+C,EAAa/C,EAAO,gBACzCZ,MAAOmB,EAAW6C,YAClBlB,WAAY,CAAEC,MAAO,CAAEC,SAAU,GAAIE,MAAO,MAC5C3G,KAAK,YAGb,8BACI,cAACyF,EAAA,EAAD,CACI/B,MAAM,QACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAAW+C,EAAa/C,EAAO,UACzCZ,MAAOmB,EAAW/K,MAClB0M,WAAY,CAAEC,MAAO,CAAEC,SAAU,GAAIE,MAAO,MAC5C3G,KAAK,YAGb,8BACI,cAACyF,EAAA,EAAD,CACI/B,MAAM,QACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAAW+C,EAAa/C,EAAO,UACzCZ,MAAOmB,EAAWtG,MAClBiI,WAAY,CAAEC,MAAO,CAAEC,SAAU,GAAIE,MAAO,MAC5C3G,KAAK,YAGb,8BACI,cAACyF,EAAA,EAAD,CACI/B,MAAM,UACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAAW+C,EAAa/C,EAAO,YACzCZ,MAAOmB,EAAWvG,QAClBkI,WAAY,CAAEC,MAAO,CAAEC,SAAU,GAAIE,MAAO,MAC5C3G,KAAK,YAGb,8BACI,cAACyF,EAAA,EAAD,CACI/B,MAAM,UACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAAW+C,EAAa/C,EAAO,YACzCZ,MAAOmB,EAAWrG,QAClBgI,WAAY,CAAEC,MAAO,CAAEC,SAAU,GAAIE,MAAO,MAC5C3G,KAAK,QACLqG,WAAS,EACTC,KAAM,kBASlC,eAAC7B,GAAA,EAAD,WACI,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QApGL,SAACmE,GACZQ,EAAc,eAAKD,IACnBG,GAAa,GACbpB,IACA7E,QAAQC,IAAI6F,IAgGJ,yBC7GV8C,I,OAAOC,aAAO5G,IAAP4G,EAAY,gBAAGC,EAAH,EAAGA,MAAH,mBAAC,eACnBA,EAAMC,WAAWC,SADC,IAErB3F,UAAW,OACX4F,QAAS,OACTC,WAAY,SACZ5H,MAAOwH,EAAMK,QAAQC,KAAKC,gBAGxBC,GAAY,SAACtL,GACf,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KAKA,OACI,sBAAK9D,UAAU,2CAAf,UAMI,sBAAKA,UAAU,sBAAf,UACI,sBAAMA,UAAU,kBAAhB,SAAmChD,EAAMoK,cAAc9L,cAAcgD,WACrE,sBAAM0B,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAbN,WAChB0D,GAAQ,WAeJ,mBAAG9D,UAAU,0BAAb,SAAwChD,EAAMoK,cAAc9L,cAAcqM,cAC1E,8BACA,eAACY,EAAA,EAAD,CAAMpC,GAAI,EACVqC,WAAS,EACTC,eAAe,OACfP,WAAW,SACXQ,WAAY,GACZC,cAAe,CAAEC,GAAI,GAAKC,GAAI,GAAKC,GAAI,IALvC,UAMI,cAACP,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAI,EAAf,SACI,eAAChB,GAAD,WACI,cAAC,KAAD,CAAWjB,SAAS,OACpB,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,GAAhC,SAAqC/L,EAAMoK,cAAc9L,cAAckD,aAG/E,cAAC+J,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAI,EAAf,SACI,eAAChB,GAAD,WACI,cAAC,KAAD,CAAUjB,SAAS,OACnB,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,GAAhC,SAAqC/L,EAAMoK,cAAc9L,cAAcvB,aAG/E,cAACwO,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAI,EAAf,SACI,eAAChB,GAAD,WACI,cAAC,KAAD,CAAcjB,SAAS,OACvB,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,GAAhC,SAAqC/L,EAAMoK,cAAc9L,cAAciD,eAG/E,cAACgK,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAI,EAAf,SACI,eAAChB,GAAD,WACI,cAAC,KAAD,CAAUjB,SAAS,OACnB,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,GAAhC,SAAqC/L,EAAMoK,cAAc9L,cAAcmD,oBAMnF,cAAC,GAAD,CAAiBwF,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,oBAK5JyG,OAAMC,KAAKsG,I,oDC+EZU,GAnJS,SAAChM,GACrB,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAASC,EAAWvJ,OAA9C,mBAAOA,EAAP,KAAc2J,EAAd,KACA,EAA4CL,mBAASC,EAAWtJ,OAAhE,mBAAOyN,EAAP,KAAuBC,EAAvB,KACM5D,EAAWC,cAuDX1B,EAAc,WAChB7G,EAAM8G,SAAQ,IAalB,OAVA0B,qBAAU,WACFR,IACAhG,QAAQC,IAAI,QAASjC,GACtBsI,EAASnC,GAAwB,CAAErJ,KAAMkD,EAAMyI,cAAerC,OAAQpG,EAAM0I,gBAAiB/C,KAAMmC,KACnGG,GAAa,MAGjB,CAACH,IAIA,eAACf,GAAA,EAAD,CAAQ5B,SAAS,KAAK6B,WAAW,EAAMC,KAAMjH,EAAMiH,KAAMC,QAASL,EAAlE,UACI,cAACM,GAAA,EAAD,UACI,sBAAKnE,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC2F,EAAA,EAAD,CAAW3B,WAAS,EAAC4B,aAAa,MAAMC,SAxEtC,SAACtB,GACnB,IAAMuB,EAASvB,EAAMwB,OAAOpC,MAC5BuB,EAASY,IAsEwEnC,MAAOpI,EAAO8E,QAAQ,eAE3F,qBAAKL,UAAU,oBAAf,SACKiJ,EAAe7E,KAAI,SAAC/F,EAAMiG,GACvB,OACI,gCACI,sBAAKtE,UAAU,cAAf,UACI,gCACI,cAAC2F,EAAA,EAAD,CACI/B,MAAM,0BACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OA9EvB,SAACA,EAAOD,GACnC,IAAM6E,EAAW5E,EAAMwB,OAAOpC,MAC1ByF,EAAiB,YAAOH,GAC5BG,EAAkB9E,GAAlB,2BAA+B8E,EAAkB9E,IAAjD,IAAyD/I,MAAO4N,IAChED,EAAkBE,GA0E2CC,CAAuB9E,EAAOD,IACnDX,MAAOtF,EAAK9C,MACZ,WAAU+I,EACVmC,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BzG,KAAK,UAET,cAACyF,EAAA,EAAD,CACI/B,MAAM,uBACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAhF3B,SAACA,EAAOD,GAC/B,IAAMgF,EAAgB/E,EAAMwB,OAAOpC,MAC/ByF,EAAiB,YAAOH,GAC5BG,EAAkB9E,GAAlB,2BAA+B8E,EAAkB9E,IAAjD,IAAyD3I,WAAY2N,IACrEJ,EAAkBE,GA4E2CG,CAAmBhF,EAAOD,IAC/CX,MAAOtF,EAAK1C,WACZ,WAAU2I,EACVmC,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BzG,KAAK,UAET,cAACyF,EAAA,EAAD,CACI/B,MAAM,OACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAjFjC,SAACA,EAAOD,GACzB,IAAMkF,EAAUjF,EAAMwB,OAAOpC,MACzByF,EAAiB,YAAOH,GAC5BG,EAAkB9E,GAAlB,2BAA+B8E,EAAkB9E,IAAjD,IAAyD1I,KAAM4N,IAC/DxK,QAAQC,IAAIgK,GACZC,EAAkBE,GA4E2CK,CAAalF,EAAOD,IACzCX,MAAOtF,EAAKzC,KACZ,WAAU0I,EACVoF,YAAY,cACZjD,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BzG,KAAK,UAET,cAACyF,EAAA,EAAD,CACI/B,MAAM,qBACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAnFlC,SAACA,EAAOD,GACxB,IAAMqF,EAASpF,EAAMwB,OAAOpC,MACxByF,EAAiB,YAAOH,GAC5BG,EAAkB9E,GAAlB,2BAA+B8E,EAAkB9E,IAAjD,IAAyDzI,IAAK8N,IAC9DT,EAAkBE,GA+E2CQ,CAAYrF,EAAOD,IACxCX,MAAOtF,EAAKxC,IACZ,WAAUyI,EACVmC,WAAY,CAACC,MAAO,CAACC,SAAU,KAC/BzG,KAAK,aAIb,cAAC,KAAD,CAAeE,QAAS,SAACmE,GAAD,OApFrC,SAACA,EAAOD,GAC3B,IAAI8E,EAAiB,YAAOH,GAC5BG,EAAkBtC,OAAOxC,EAAQ,EAAG,EAAG,CAAE/I,MAAO,GAAII,WAAY,GAAIC,KAAM,GAAIC,IAAK,KACnFqN,EAAkBE,GAiFiDS,CAAetF,EAAOD,IAAQtE,UAAU,kBAC3E,cAAC,KAAD,CAAmBI,QAAS,SAACmE,GAAD,OAhFtC,SAACA,EAAOD,GAC9B,IAAI8E,EAAiB,YAAOH,GAC5BG,EAAkBtC,OAAOxC,EAAO,GAChC4E,EAAkBE,GA6EqDU,CAAkBvF,EAAOD,IAAStE,UAAS,2BAAgC,IAAVsE,EAAc,SAAW,SAErI,cAACrD,EAAA,EAAD,CAAKC,GAAI,CAAC6I,OAAQ,MAClB,cAACC,GAAA,EAAD,IACA,cAAC/I,EAAA,EAAD,CAAKC,GAAI,CAAC6I,OAAQ,QA/CZzF,aAuD9B,eAACK,GAAA,EAAD,WACI,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QAxFL,SAACmE,GACZvF,QAAQC,IAAI,iBAAkBgK,GAC9BlE,EAAc,2BAAKD,GAAN,IAAkBvJ,MAAOA,EAAQC,MAAOyN,EAAe7K,QAAO,SAACC,EAAMiG,GAAP,OAAiBjG,EAAK9C,MAAM0L,OAAS,QAChHhC,GAAa,GACbjG,QAAQC,IAAI6F,IAoFqBoC,UAAW+B,EAAe7K,QAAO,SAAAC,GAAI,OAAIA,EAAK9C,MAAM0L,OAAS,KAAGA,OAAzF,yBC9IVW,I,OAAOC,aAAO5G,IAAP4G,EAAY,gBAAGC,EAAH,EAAGA,MAAH,mBAAC,eACnBA,EAAMC,WAAWC,SADC,IAErB3F,UAAW,OACX4F,QAAS,OACTC,WAAY,SACZ5H,MAAOwH,EAAMK,QAAQC,KAAKC,gBAGxB4B,GAAY,SAACjN,GACf,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KACA9E,QAAQC,IAAI,oBAAqBgF,GAMjC,OACI,sBAAKjE,UAAU,0CAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,+BAAOhD,EAAMoK,cAAc9L,cAAcC,QACzC,sBAAMyE,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QATN,WAChB0D,GAAQ,WAWJ,qBAAK9D,UAAU,sBAAf,SACKhD,EAAMoK,cAAc9L,cAAcE,MAAM4I,KAAI,SAAC/F,EAAMiG,GAChD,OACI,sBAAiBtE,UAAU,iBAA3B,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAMA,UAAU,mCAAhB,SAAoD3B,EAAK9C,QACzD,sBAAMyE,UAAU,wCAAhB,SAAyD3B,EAAK1C,gBAElE,eAAC4M,EAAA,EAAD,CACIC,WAAS,EACTC,eAAe,QACfP,WAAW,SACXQ,WAAY,GACZC,cAAe,CAAEC,GAAI,GAAKC,GAAI,GAAKC,GAAI,IAL3C,UAMI,cAACP,EAAA,EAAD,CAAMlK,MAAI,EAACyK,GAAI,EAAGF,GAAI,EAAGH,eAAe,QAAQP,WAAW,SAA3D,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAmBvB,SAAS,OAC5B,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,IAAhC,SAAuC1K,EAAKzC,YAGpD,cAAC2M,EAAA,EAAD,CAAMlK,MAAI,EAACyK,GAAI,EAAGF,GAAI,EAAGH,eAAe,QAAQP,WAAW,SAA3D,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAYvB,SAAS,OACrB,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,IAAhC,SAAuC1K,EAAKxC,gBApBlDyI,QA6BtB,cAAC,GAAD,CAAiBL,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,oBAK5JyG,OAAMC,KAAKiI,I,0CC6HZC,I,OA1LU,SAAClN,GACxB,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAASC,EAAWvJ,OAA9C,mBAAOA,EAAP,KAAc2J,EAAd,KACMI,EAAWC,cACjB,EAA8CV,mBAASC,EAAWtJ,OAAlE,mBAAO2O,EAAP,KAAwBC,EAAxB,KAqBMC,EAAgB,SAAC9F,EAAOD,EAAOiD,GACnC,IAAM+C,EAAW/F,EAAMwB,OAAOpC,MAC1B4G,EAAkB,YAAOJ,GAC7BI,EAAmBjG,GAAnB,2BACKiG,EAAmBjG,IADxB,kBAEGiD,EAAW+C,IAEdF,EAAmBG,IAqBf1G,EAAc,WAClB7G,EAAM8G,SAAQ,IAkBhB,OAfA0B,qBAAU,WACJR,IACFhG,QAAQC,IAAI,QAASjC,GACrBsI,EACEnC,GAAwB,CACtBrJ,KAAMkD,EAAMyI,cACZrC,OAAQpG,EAAM0I,gBACd/C,KAAMmC,KAGVG,GAAa,MAGd,CAACH,IAGF,eAACf,GAAA,EAAD,CACE5B,SAAS,KACT6B,WAAW,EACXC,KAAMjH,EAAMiH,KACZC,QAASL,EAJX,UAME,cAACM,GAAA,EAAD,UACE,sBAAKnE,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC2F,EAAA,EAAD,CACE3B,WAAS,EACT4B,aAAa,MACbC,SAjEU,SAACtB,GACrB,IAAMuB,EAASvB,EAAMwB,OAAOpC,MAC5BuB,EAASY,IAgECnC,MAAOpI,EACP8E,QAAQ,eAIZ,qBAAKL,UAAU,oBAAf,SACGmK,EAAgB/F,KAAI,SAAC/F,EAAMiG,GAC1B,OACE,gCACE,sBAAKtE,UAAU,cAAf,UACE,gCACE,cAAC2F,EAAA,EAAD,CACE/B,MAAM,WACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OACR8F,EAAc9F,EAAOD,EAAO,oBAE9BX,MAAOtF,EAAKtC,gBACZ0K,WAAY,CAAEC,MAAO,CAAEC,SAAU,KACjCzG,KAAK,UAGP,cAACyF,EAAA,EAAD,CACE/B,MAAM,UACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OACR8F,EAAc9F,EAAOD,EAAO,YAE9BX,MAAOtF,EAAKrC,QACZyK,WAAY,CAAEC,MAAO,CAAEC,SAAU,KACjCzG,KAAK,UAGP,cAACyF,EAAA,EAAD,CACE/B,MAAM,OACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OACR8F,EAAc9F,EAAOD,EAAO,SAE9BX,MAAOtF,EAAKzC,KACZ6K,WAAY,CAAEC,MAAO,CAAEC,SAAU,KACjCzG,KAAK,UAGP,cAACyF,EAAA,EAAD,CACE/B,MAAM,WACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OACR8F,EAAc9F,EAAOD,EAAO,aAE9BX,MAAOtF,EAAKpC,SACZwK,WAAY,CAAEC,MAAO,CAAEC,SAAU,KACjCzG,KAAK,UAGP,cAACyF,EAAA,EAAD,CACE/B,MAAM,UACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OACR8F,EAAc9F,EAAOD,EAAO,sBAE9BX,MAAOtF,EAAKnC,kBACZuK,WAAY,CAAEC,MAAO,CAAEC,SAAU,KACjCH,KAAM,EACNE,MAAS,CAACG,MAAO,KACjBN,WAAS,OAIb,cAAC,KAAD,CACEnG,QAAS,SAACmE,GAAD,OAzHL,SAACA,EAAOD,GAC9B,IAAIiG,EAAkB,YAAOJ,GAC7BI,EAAmBzD,OAAOxC,EAAQ,EAAG,EAAG,CACtCvI,gBAAiB,GACjBC,QAAS,GACTJ,KAAM,GACNK,SAAU,GACVC,kBAAmB,KAErBkO,EAAmBG,GAgHmBC,CAAgBjG,EAAOD,IAC3CtE,UAAU,kBAEZ,cAAC,KAAD,CACEI,QAAS,SAACmE,GAAD,OAjHF,SAACA,EAAOD,GACjC,IAAIiG,EAAkB,YAAOJ,GAC7BI,EAAmBzD,OAAOxC,EAAO,GACjC8F,EAAmBG,GA8GmBE,CAAmBlG,EAAOD,IAC9CtE,UAAS,2BACG,IAAVsE,EAAc,SAAW,SAI/B,cAACrD,EAAA,EAAD,CAAKC,GAAI,CAAE6I,OAAQ,MACnB,cAACC,GAAA,EAAD,IACA,cAAC/I,EAAA,EAAD,CAAKC,GAAI,CAAE6I,OAAQ,QA1EXzF,aAkFpB,eAACK,GAAA,EAAD,WACE,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QA5KC,SAACmE,GACdvF,QAAQC,IAAI,kBAAmBkL,GAC/BpF,EAAc,2BACTD,GADQ,IAEXvJ,MAAOA,EACPC,MAAO2O,EAAgB/L,QACrB,SAACC,EAAMiG,GAAP,OAAiBjG,EAAKtC,gBAAgBkL,OAAS,QAGnDhC,GAAa,GACbpB,IACA7E,QAAQC,IAAI6F,IAiKiBoC,UAAWiD,EAAgB/L,QAAO,SAAAC,GAAI,OAAIA,EAAKtC,gBAAgBkL,OAAS,KAAGA,OAApG,0BCnLFW,GAAOC,aAAO5G,IAAP4G,EAAY,gBAAGC,EAAH,EAAGA,MAAH,mBAAC,eACnBA,EAAMC,WAAWC,SADC,IAErB3F,UAAW,OACX4F,QAAS,OACTC,WAAY,SACZ5H,MAAOwH,EAAMK,QAAQC,KAAKC,eAGxBqC,GAAa,SAAC1N,GAChB,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KAEA9E,QAAQC,IAAI,qBAAsBgF,GAMlC,OACI,sBAAKjE,UAAU,2CAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,+BAAOhD,EAAMoK,cAAc9L,cAAcC,QACzC,sBAAMyE,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QATN,WAChB0D,GAAQ,WAWJ,qBAAK9D,UAAU,uBAAf,SACChD,EAAMoK,cAAc9L,cAAcE,MAAM4I,KAAI,SAAC/F,EAAMiG,GAChD,OACI,sBAAiBtE,UAAU,kBAA3B,UACI,sBAAMA,UAAU,4DAAhB,SAA6E3B,EAAKtC,kBAClF,eAACwM,EAAA,EAAD,CACIC,WAAS,EACTC,eAAe,QACfP,WAAW,SACXQ,WAAY,GACZC,cAAe,CAAEC,GAAI,GAAKC,GAAI,GAAKC,GAAI,IAL3C,UAMI,cAACP,EAAA,EAAD,CAAMlK,MAAI,EAACyK,GAAI,EAAGF,GAAI,EAAtB,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAcjC,SAAS,OACvB,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,GAAhC,SAAqC1K,EAAKrC,eAGlD,cAACuM,EAAA,EAAD,CAAMlK,MAAI,EAACyK,GAAI,EAAGF,GAAI,EAAtB,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAmBjC,SAAS,OAC5B,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,GAAhC,SAAqC1K,EAAKzC,YAGlD,cAAC2M,EAAA,EAAD,CAAMlK,MAAI,EAACyK,GAAI,EAAGF,GAAI,EAAtB,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAgBjC,SAAS,OACzB,cAAC1F,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAE6H,GAAI,GAAhC,SAAqC1K,EAAKpC,mBAItD,sBAAM+D,UAAU,qBAAhB,SACC3B,EAAKnC,sBA5BAoI,QAmClB,cAAC,GAAD,CAAkBL,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,oBAK9JyG,OAAMC,KAAK0I,I,oBCkGXC,GArKS,SAAC3N,GACrB,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAASC,EAAWvJ,OAA9C,mBAAOA,EAAP,KAAc2J,EAAd,KACA,EAA0CL,mBAASC,EAAWtJ,OAA9D,mBAAOoP,EAAP,KAAsBC,EAAtB,KACA,EAA8ChG,mBAASC,EAAW1I,iBAAlE,mBAAOA,EAAP,KAAwB0O,EAAxB,KACA,EAA8DjG,mBAASC,EAAWzI,yBAAlF,mBAAOA,EAAP,KAAgC0O,EAAhC,KACMzF,EAAWC,cA+DX1B,EAAc,WAChB7G,EAAM8G,SAAQ,IAGlB0B,qBAAU,WACFR,IACAM,EAASnC,GAAwB,CAAErJ,KAAMkD,EAAMyI,cAAerC,OAAQpG,EAAM0I,gBAAiB/C,KAAMmC,KACnGG,GAAa,MAGlB,CAACH,IAEJ,IAAMkG,EAAsB,SAACC,GACzB,IAAIC,EAAM,GACV,OAAQD,GAgBJ,QACIC,EAAM,GACN,MAbJ,IAAK,eACDA,EAAM,GACN,MAEJ,IAAK,aACDA,EAAM,GACN,MAEJ,IAAK,SACDA,EAAM,IAMd,OAAOA,GAGX,OACI,eAACnH,GAAA,EAAD,CAAQ5B,SAAS,KAAK6B,WAAW,EAAMC,KAAMjH,EAAMiH,KAAMC,QAASL,EAAlE,UACI,cAACM,GAAA,EAAD,UACI,sBAAKnE,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC2F,EAAA,EAAD,CAAW3B,WAAS,EAAC4B,aAAa,MAAMC,SAvGtC,SAACtB,GACnB,IAAMuB,EAASvB,EAAMwB,OAAOpC,MAC5BuB,EAASY,IAqGwEnC,MAAOpI,EAAO8E,QAAQ,eAG3F,sBAAKL,UAAU,sBAAf,UACI,qDACsB,cAACgG,GAAA,EAAD,CAAQpC,MAAM,cAAciC,SAAW,SAACtB,GAAD,OAvGjD,SAACA,GAC7BuG,EAAmBvG,EAAMwB,OAAOE,SAsGwDkF,CAAwB5G,IAAQ0B,QAAS7J,OAEjH,8DAC+B,cAAC4J,GAAA,EAAD,CAAQpC,MAAM,uBAAuBiC,SAAU,SAACtB,GAAD,OAtG1D,SAACA,GACrCwG,EAA2BxG,EAAMwB,OAAOE,SAqGiEmF,CAAgC7G,IAAQ0B,QAAS5J,UAI9I,qBAAK2D,UAAU,oBAAf,SACK4K,EAAcxG,KAAI,SAAC/F,EAAMiG,GACtB,OACI,sBAAKtE,UAAU,cAAf,UACI,cAAC2F,EAAA,EAAD,CACI/B,MAAO,WAAaU,EAAQ,GAC5BpD,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OA7GrB,SAACA,EAAOD,GAC7B,IAAI+G,EAAS,YAAOT,GACpBS,EAAU/G,GAAS,CAAE1H,SAAU2H,EAAMwB,OAAOpC,MAAOrH,YAAa,YAChEuO,EAAiBQ,GA0GoCC,CAAiB/G,EAAOD,IAC7CX,MAAOtF,EAAKzB,SACZ,WAAU0H,EACVpE,KAAK,UAET,sBAAKF,UAAU,gBAAf,UACK3B,EAAK/B,YACN,cAACiP,GAAA,EAAD,CACI,aAAW,cACX5H,MAAQqH,EAAoB3M,EAAK/B,aACjCkP,KAAM,GACNC,OAAK,EACLC,IAAK,GACLC,IAAK,IACL9F,SAAU,SAACtB,GAAD,OA1GtB,SAACA,EAAOD,GAChC,IAAI+G,EAAS,YAAOT,GACpB,OAAQrG,EAAMwB,OAAOpC,OAgBjB,QACI0H,EAAU/G,GAAS,CAAC1H,SAAUyO,EAAU/G,GAAO1H,SAAUN,YAAa,YACtE,MAbJ,KAAK,GACD+O,EAAU/G,GAAS,CAAC1H,SAAUyO,EAAU/G,GAAO1H,SAAUN,YAAa,gBACtE,MAEJ,KAAK,GACD+O,EAAU/G,GAAS,CAAC1H,SAAUyO,EAAU/G,GAAO1H,SAAUN,YAAa,cACtE,MAEJ,KAAK,IACD+O,EAAU/G,GAAS,CAAC1H,SAAUyO,EAAU/G,GAAO1H,SAAUN,YAAa,UAM9EuO,EAAiBQ,GAoFwCO,CAAoBrH,EAAOD,SAGxD,cAAC,KAAD,CAAelE,QAAS,SAACmE,GAAD,OAxHlC,SAACA,EAAOD,GAC1B,IAAI+G,EAAS,YAAOT,GACpBS,EAAUvE,OAAOxC,EAAQ,EAAG,EAAG,CAAE1H,SAAU,KAC3CiO,EAAiBQ,GAqH8CQ,CAActH,EAAOD,IAAQtE,UAAU,kBAC1E,cAAC,KAAD,CAAmBI,QAAS,SAACmE,GAAD,OApHnC,SAACA,EAAOD,GAC7B,IAAI+G,EAAS,YAAOT,GACpBS,EAAUvE,OAAOxC,EAAO,GACxBuG,EAAiBQ,GAiHkDS,CAAiBvH,EAAOD,IAAQtE,UAAS,2BAAgC,IAAVsE,EAAc,SAAW,QAtBjGA,aA8BtD,eAACK,GAAA,EAAD,WACI,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QA/FL,SAACmE,GACZQ,EAAc,2BAAKD,GAAN,IAAkBvJ,MAAOA,EAAOa,gBAAiBA,EAAiBC,wBAAyBA,EAAyBb,MAAOoP,EAAcxM,QAAO,SAACC,EAAMiG,GAAP,OAAiBjG,EAAKzB,SAASqK,OAAS,QACrMpD,IACAoB,GAAa,IA4FoBiC,UAAW0D,EAAcxM,QAAO,SAAAC,GAAI,OAAIA,EAAKzB,SAASqK,OAAS,KAAGA,OAA3F,yBCpKV8E,I,OAAY,SAAC/O,GACjB,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KACA9E,QAAQC,IAAI,oBAAqBgF,GAEjC,IAIM+H,EAA6B,SAAC1P,GAClC,IAAI4O,EAAM,GACV,OAAQ5O,GAgBJ,QACI4O,EAAM,GACN,MAbJ,IAAK,eACDA,EAAM,GACN,MAEJ,IAAK,aACDA,EAAM,GACN,MAEJ,IAAK,SACDA,EAAM,IAMd,OAAOA,GAET,OACE,sBAAKlL,UAAU,yCAAf,UACE,sBAAKA,UAAU,uBAAf,UACI,+BAAOhD,EAAMoK,cAAc9L,cAAcC,QACzC,sBAAMyE,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAjCF,WAChB0D,GAAQ,WAmCP9G,EAAMoK,cAAc9L,cAAcE,MAAM4I,KAAI,SAAC/F,EAAMiG,GAClD,OACE,sBAAiBtE,UAAU,mBAA3B,UACA,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,iBAAf,SAAiC3B,EAAKzB,WACtC,sBAAKoD,UAAS,yBAAoBhD,EAAMoK,cAAc9L,cAAcc,gBAAkB,GAAK,UAA3F,gBAA2GiC,EAAK/B,kBAEpH,qBAAK0D,UAAU,oBAAf,SACE,cAACiM,GAAA,EAAD,CAAgBjM,UAAWhD,EAAMoK,cAAc9L,cAAce,wBAA0B,GAAK,SAAUgE,QAAQ,cAAcsD,MAAQqI,EAA2B3N,EAAK/B,mBAN5JgI,MAad,cAAC,GAAD,CAAiBL,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,qBAKtJyG,OAAMC,KAAK+J,IC0DZG,GApHM,SAAClP,GACpB,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAASC,EAAWvJ,OAA9C,mBAAOA,EAAP,KAAc2J,EAAd,KACMI,EAAWC,cACjB,EAAgEV,mBAASC,EAAWtJ,OAApF,mBAAO2Q,EAAP,KAAiCC,EAAjC,KA+BMvI,EAAc,WAClB7G,EAAM8G,SAAQ,IAkBhB,OAfA0B,qBAAU,WACJR,IACFhG,QAAQC,IAAI,QAASjC,GACrBsI,EACEnC,GAAwB,CACtBrJ,KAAMkD,EAAMyI,cACZrC,OAAQpG,EAAM0I,gBACd/C,KAAMmC,KAGVG,GAAa,MAGd,CAACH,IAGF,eAACf,GAAA,EAAD,CACE5B,SAAS,KACT6B,WAAW,EACXC,KAAMjH,EAAMiH,KACZC,QAASL,EAJX,UAME,cAACM,GAAA,EAAD,UACE,sBAAKnE,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC2F,EAAA,EAAD,CACE3B,WAAS,EACT4B,aAAa,MACbC,SA/CU,SAACtB,GACrB,IAAMuB,EAASvB,EAAMwB,OAAOpC,MAC5BuB,EAASY,IA8CCnC,MAAOpI,EACP8E,QAAQ,eAIZ,qBAAKL,UAAU,oBAAf,SACGmM,EAAyB/H,KAAI,SAAC/F,EAAMiG,GACnC,OACE,gCACE,qBAAKtE,UAAU,cAAf,SACE,8BACE,cAAC2F,EAAA,EAAD,CACE/B,MAAM,UACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAzDV,SAACA,EAAOD,EAAOiD,GACnC,IAAM+C,EAAW/F,EAAMwB,OAAOpC,MAC1B0I,EAA2B,YAAOF,GACtCE,EAA4B/H,GAA5B,2BACK+H,EAA4B/H,IADjC,kBAEGiD,EAAW+C,IAEd8B,EAA4BC,GAmDNhC,CAAc9F,EAAOD,EAAO,YAE9BN,WAAS,EACTL,MAAOtF,EAAK5C,QACZgL,WAAY,CAAEC,MAAO,CAAEC,SAAU,KACjCD,MAAS,CAACG,MAAO,KACjB3G,KAAK,QACLsG,KAAM,EACND,WAAS,QAKf,cAACtF,EAAA,EAAD,CAAKC,GAAI,CAAE6I,OAAQ,MACnB,cAACC,GAAA,EAAD,IACA,cAAC/I,EAAA,EAAD,CAAKC,GAAI,CAAE6I,OAAQ,QAtBXzF,aA8BpB,eAACK,GAAA,EAAD,WACE,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QAtGC,SAACmE,GACdvF,QAAQC,IAAI,2BAA4BkN,GACxCpH,EAAc,2BACTD,GADQ,IAEXvJ,MAAOA,EACPC,MAAO2Q,EAAyB/N,QAC9B,SAACC,EAAMiG,GAAP,OAAiBjG,EAAK5C,QAAQwL,OAAS,QAG3ChC,GAAa,GACbpB,IACA7E,QAAQC,IAAI6F,IA2FiBoC,UAAWiF,EAAyB/N,QAAO,SAAAC,GAAI,OAAIA,EAAK5C,QAAQwL,OAAS,KAAGA,OAArG,yBC/GFqF,I,OAAsB,SAACtP,GAC3B,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KACA9E,QAAQC,IAAI,8BAA+BgF,GAM3C,OAIF,sBAAKjE,UAAU,qDAAf,UACY,sBAAKA,UAAU,uBAAf,UACI,+BAAOhD,EAAMoK,cAAc9L,cAAcC,QACzC,sBAAMyE,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAZT,WACjB0D,GAAQ,WAeA,qBAAK9D,UAAU,iCAAf,SACKhD,EAAMoK,cAAc9L,cAAcE,MAAM4I,KAAI,SAAC/F,EAAMiG,GAChD,OACI,qBAAKtE,UAAU,4BAAf,SACK,sBAAMA,UAAU,oCAAhB,SAAqD3B,EAAK5C,WADf6I,QAQ5D,cAACiI,GAAD,CAA2BtI,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,qBAKtKyG,OAAMC,KAAKsK,I,UCuEZE,GAtGM,SAACxP,GAClB,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAASC,EAAWvJ,OAA9C,mBAAOA,EAAP,KAAc2J,EAAd,KACA,EAAoCL,mBAASC,EAAWtJ,OAAxD,mBAAOiR,EAAP,KAAmBC,EAAnB,KACA,EAA8B7H,mBAASC,EAAWtI,SAAlD,mBAAOA,EAAP,KAAgBmQ,EAAhB,KACA,EAA4B9H,mBAASC,EAAWvI,QAAhD,mBAAOA,EAAP,KAAeqQ,EAAf,KACMtH,EAAWC,cAuCX1B,EAAc,WAChB7G,EAAM8G,SAAQ,IAWlB,OARA0B,qBAAU,WACFR,IACAM,EAASnC,GAAwB,CAAErJ,KAAMkD,EAAMyI,cAAerC,OAAQpG,EAAM0I,gBAAiB/C,KAAMmC,KACnGG,GAAa,MAGlB,CAACH,IAGA,eAACf,GAAA,EAAD,CAAQ5B,SAAS,KAAK6B,WAAW,EAAMC,KAAMjH,EAAMiH,KAAMC,QAASL,EAAlE,UACI,cAACM,GAAA,EAAD,UACI,sBAAKnE,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC2F,EAAA,EAAD,CAAW3B,WAAS,EAAC4B,aAAa,MAAMC,SAtDtC,SAACtB,GACnB,IAAMuB,EAASvB,EAAMwB,OAAOpC,MAC5BuB,EAASY,IAoDwEnC,MAAOpI,EAAO8E,QAAQ,eAE3F,sBAAKL,UAAU,sBAAf,UACI,4CACa,cAACgG,GAAA,EAAD,CAAQpC,MAAM,UAAUiC,SArDjC,SAACtB,GACrBoI,EAAWpI,EAAMwB,OAAOE,UAoDwDA,QAASzJ,OAEzE,2CACY,cAACwJ,GAAA,EAAD,CAAQpC,MAAM,SAASiC,SApDhC,SAACtB,GACpBqI,EAAUrI,EAAMwB,OAAOE,UAmDsDA,QAAS1J,UAG1E,qBAAKyD,UAAU,oBAAf,SACKyM,EAAWrI,KAAI,SAAC/F,EAAMiG,GACnB,OACI,sBAAKtE,UAAU,cAAf,UACI,cAAC2F,EAAA,EAAD,CACI/B,MAAO,WAAaU,EAAQ,GAC5BpD,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OA1DxB,SAACA,EAAOD,GAC1B,IAAI+B,EAAM,YAAOoG,GACjBpG,EAAO/B,GAAS,CAAE/I,MAAOgJ,EAAMwB,OAAOpC,OACtC+I,EAAcrG,GAuDuCwG,CAActI,EAAOD,IAC1CX,MAAOtF,EAAK9C,MACZ,WAAU+I,EACVpE,KAAK,UAET,cAAC,KAAD,CAAeE,QAAS,SAACmE,GAAD,OAzDrC,SAACA,EAAOD,GACvB,IAAI+B,EAAM,YAAOoG,GACjBpG,EAAOS,OAAOxC,EAAQ,EAAG,EAAG,CAAE/I,MAAO,KACrCmR,EAAcrG,GAsDiDyG,CAAWvI,EAAOD,IAAQtE,UAAU,kBACvE,cAAC,KAAD,CAAmBI,QAAS,SAACmE,GAAD,OArDtC,SAACA,EAAOD,GAC1B,IAAI+B,EAAM,YAAOoG,GACjBpG,EAAOS,OAAOxC,EAAO,GACrBoI,EAAcrG,GAkDqD0G,CAAcxI,EAAOD,IAAQtE,UAAS,2BAAgC,IAAVsE,EAAc,SAAW,QAV9FA,aAkBtD,eAACK,GAAA,EAAD,WACI,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QAzDL,SAACmE,GACZQ,EAAc,2BAAKD,GAAN,IAAkBtI,QAASA,EAASD,OAAQA,EAAQhB,MAAOA,EAAOC,MAAOiR,EAAWrO,QAAO,SAACC,EAAMiG,GAAP,OAAiBjG,EAAK9C,MAAM0L,OAAS,QAC7IhC,GAAa,GACbpB,IACA7E,QAAQC,IAAI6F,IAqDqBoC,UAAWuF,EAAWrO,QAAO,SAAAC,GAAI,OAAIA,EAAK9C,MAAM0L,OAAS,KAAGA,OAArF,yBCtGV+F,I,OAAS,SAAChQ,GACZ,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KACA9E,QAAQC,IAAI,iBAAkBgF,GAO9B,OACI,sBAAKjE,UAAU,uCAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,+BAAOhD,EAAMoK,cAAc9L,cAAcC,QACzC,sBAAMyE,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAVN,WAChB0D,GAAQ,WAaJ,qBAAK9D,UAAU,mBAAf,SACChD,EAAMoK,cAAc9L,cAAcE,MAAM4I,KAAI,SAAC/F,EAAMiG,GAChD,OACI,cAAC2I,GAAA,EAAD,CAAkBrJ,MAAOvF,EAAK9C,MAAOyE,UAAS,0CAAqChD,EAAMoK,cAAc9L,cAAckB,QAAU,GAAK,cAAgB6D,QAASrD,EAAMoK,cAAc9L,cAAciB,OAAS,SAAW,YAAxM+H,QAMnB,cAAC,GAAD,CAAcL,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,qBAK1JyG,OAAMC,KAAKgL,ICgGXE,GA1HkB,SAAClQ,GAC9B,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAASC,EAAWvJ,OAA9C,mBAAOA,EAAP,KAAc2J,EAAd,KACA,EAAsDL,mBAASC,EAAWtJ,OAA1E,mBAAO2R,EAAP,KAA4BC,EAA5B,KACA,EAA8CvI,mBAASC,EAAW1I,iBAAlE,mBAAOA,EAAP,KAAwB0O,EAAxB,KACA,EAA8DjG,mBAASC,EAAWzI,yBAAlF,mBAAOA,EAAP,KAAgC0O,EAAhC,KACMzF,EAAWC,cA4CX1B,EAAc,WAChB7G,EAAM8G,SAAQ,IAYlB,OATA0B,qBAAU,WACFR,IACAM,EAASnC,GAAwB,CAAErJ,KAAMkD,EAAMyI,cAAerC,OAAQpG,EAAM0I,gBAAiB/C,KAAMmC,KACnGG,GAAa,MAGlB,CAACH,IAIA,eAACf,GAAA,EAAD,CAAQ5B,SAAS,KAAK6B,WAAW,EAAMC,KAAMjH,EAAMiH,KAAMC,QAASL,EAAlE,UACI,cAACM,GAAA,EAAD,UACI,sBAAKnE,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC2F,EAAA,EAAD,CAAW3B,WAAS,EAAC4B,aAAa,MAAMC,SA5DtC,SAACtB,GACnB,IAAMuB,EAASvB,EAAMwB,OAAOpC,MAC5BuB,EAASY,IA0DwEnC,MAAOpI,EAAO8E,QAAQ,eAG3F,sBAAKL,UAAU,sBAAf,UACI,qDACsB,cAACgG,GAAA,EAAD,CAAQpC,MAAM,cAAciC,SAAW,SAACtB,GAAD,OA5DjD,SAACA,GAC7BuG,EAAmBvG,EAAMwB,OAAOE,SA2DwDkF,CAAwB5G,IAAQ0B,QAAS7J,OAEjH,8DAC+B,cAAC4J,GAAA,EAAD,CAAQpC,MAAM,uBAAuBiC,SAAU,SAACtB,GAAD,OA3D1D,SAACA,GACrCwG,EAA2BxG,EAAMwB,OAAOE,SA0DiEmF,CAAgC7G,IAAQ0B,QAAS5J,UAI9I,qBAAK2D,UAAU,oBAAf,SACKmN,EAAoB/I,KAAI,SAAC/F,EAAMiG,GAC5B,OACI,sBAAKtE,UAAU,cAAf,UACI,cAAC2F,EAAA,EAAD,CACI/B,MAAO,WAAaU,EAAQ,GAC5BpD,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OAlEV,SAACA,EAAOD,GACxC,IAAI+I,EAAsB,YAAOF,GACjCE,EAAuB/I,GAAS,CAAE/I,MAAOgJ,EAAMwB,OAAOpC,MAAOrH,YAAa,GAC1E8Q,EAAuBC,GA+D8BC,CAA4B/I,EAAOD,IACxDX,MAAOtF,EAAK9C,MACZ,WAAU+I,EACVpE,KAAK,UAET,sBAAKF,UAAU,gBAAf,UACK3B,EAAK/B,YACN,cAACiP,GAAA,EAAD,CACI,aAAW,cACX5H,MAAQ4J,OAAOlP,EAAK/B,aACpBkP,KAAM,GACNC,OAAK,EACLC,IAAK,EACLC,IAAK,IACL9F,SAAU,SAACtB,GAAD,OA/DtB,SAACA,EAAOD,GAChC,IAAI+I,EAAsB,YAAOF,GACjCE,EAAuB/I,GAAS,CAAC/I,MAAO8R,EAAuB/I,GAAO/I,MAAOe,YAAaiI,EAAMwB,OAAOpC,OACvGyJ,EAAuBC,GA4DkCzB,CAAoBrH,EAAOD,SAGxD,cAAC,KAAD,CAAelE,QAAS,SAACmE,GAAD,OA7EpC,SAACA,EAAOD,GACxB,IAAI+I,EAAsB,YAAOF,GACjCE,EAAuBvG,OAAOxC,EAAQ,EAAG,EAAG,CAAE/I,MAAO,GAAIe,YAAa,IACtE8Q,EAAuBC,GA0EwCG,CAAYjJ,EAAOD,IAAQtE,UAAU,kBACxE,cAAC,KAAD,CAAmBI,QAAS,SAACmE,GAAD,OAzErC,SAACA,EAAOD,GAC3B,IAAI+I,EAAsB,YAAOF,GACjCE,EAAuBvG,OAAOxC,EAAO,GACrC8I,EAAuBC,GAsE4CI,CAAelJ,EAAOD,IAAQtE,UAAS,2BAAgC,IAAVsE,EAAc,SAAW,QAtB/FA,aA8BtD,eAACK,GAAA,EAAD,WACI,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QAvEL,SAACmE,GACZQ,EAAc,2BAAKD,GAAN,IAAkBvJ,MAAOA,EAAOa,gBAAiBA,EAAiBC,wBAAyBA,EAAyBb,MAAO2R,EAAoB/O,QAAO,SAACC,EAAMiG,GAAP,OAAiBjG,EAAK9C,MAAM0L,OAAS,QACxMhC,GAAa,GACbpB,KAoEiCqD,UAAWiG,EAAoB/O,QAAO,SAAAC,GAAI,OAAIA,EAAK9C,MAAM0L,OAAS,KAAGA,OAA9F,yBCzHVyG,I,OAAqB,SAAC1Q,GAC1B,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KACA9E,QAAQC,IAAI,kCAAmCgF,GAM/C,OACE,sBAAKjE,UAAU,yCAAf,UACE,sBAAKA,UAAU,uBAAf,UACI,+BAAOhD,EAAMoK,cAAc9L,cAAcC,QACzC,sBAAMyE,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QATF,WAChB0D,GAAQ,WAWP9G,EAAMoK,cAAc9L,cAAcE,MAAM4I,KAAI,SAAC/F,EAAMiG,GAClD,OACE,sBAAiBtE,UAAWhD,EAAMoK,cAAc9L,cAAce,wBAA0B,gBAAkB,2BAA1G,UACA,sBAAK2D,UAAU,eAAf,UACI,qBAAKA,UAAU,cAAf,SAA8B3B,EAAK9C,QACnC,sBAAKyE,UAAS,2BAAsBhD,EAAMoK,cAAc9L,cAAcc,gBAAkB,GAAK,UAA7F,gBAA6GiC,EAAK/B,YAAlH,UAEJ,qBAAK0D,UAAU,iBAAf,SACE,cAACiM,GAAA,EAAD,CAAgBjM,UAAWhD,EAAMoK,cAAc9L,cAAce,wBAA0B,GAAK,SAAUgE,QAAQ,cAAcsD,MAAO4J,OAAOlP,EAAK/B,mBANvIgI,MAYhB,cAAC,GAAD,CAA0BL,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,qBAM7JyG,OAAMC,KAAK0L,ICoHZxB,GApJM,SAAClP,GACpB,MAAoC6H,mBAAS7H,EAAM8H,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAASC,EAAWvJ,OAA9C,mBAAOA,EAAP,KAAc2J,EAAd,KACMI,EAAWC,cACjB,EAAsCV,mBAASC,EAAWtJ,OAA1D,mBAAOmS,EAAP,KAAoBC,EAApB,KAqBMvD,EAAgB,SAAC9F,EAAOD,EAAOiD,GACnC,IAAM+C,EAAW/F,EAAMwB,OAAOpC,MAC1BkK,EAAc,YAAOF,GACzBE,EAAevJ,GAAf,2BACKuJ,EAAevJ,IADpB,kBAEGiD,EAAW+C,IAEdsD,EAAeC,IAkBXhK,EAAc,WAClB7G,EAAM8G,SAAQ,IAkBhB,OAfA0B,qBAAU,WACJR,IACFhG,QAAQC,IAAI,QAASjC,GACrBsI,EACEnC,GAAwB,CACtBrJ,KAAMkD,EAAMyI,cACZrC,OAAQpG,EAAM0I,gBACd/C,KAAMmC,KAGVG,GAAa,MAGd,CAACH,IAGF,eAACf,GAAA,EAAD,CACE5B,SAAS,KACT6B,WAAW,EACXC,KAAMjH,EAAMiH,KACZC,QAASL,EAJX,UAME,cAACM,GAAA,EAAD,UACE,sBAAKnE,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC2F,EAAA,EAAD,CACE3B,WAAS,EACT4B,aAAa,MACbC,SA9DU,SAACtB,GACrB,IAAMuB,EAASvB,EAAMwB,OAAOpC,MAC5BuB,EAASY,IA6DCnC,MAAOpI,EACP8E,QAAQ,eAIZ,qBAAKL,UAAU,oBAAf,SACG2N,EAAYvJ,KAAI,SAAC/F,EAAMiG,GACtB,OACE,gCACE,sBAAKtE,UAAU,cAAf,UACE,gCACE,cAAC2F,EAAA,EAAD,CACE/B,MAAM,kBACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OACR8F,EAAc9F,EAAOD,EAAO,mBAE9BX,MAAOtF,EAAK5B,eACZgK,WAAY,CAAEC,MAAO,CAAEC,SAAU,KACjCzG,KAAK,UAGP,cAACyF,EAAA,EAAD,CACE/B,MAAM,kBACN1C,GAAI,CAAEgF,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACtB,GAAD,OACR8F,EAAc9F,EAAOD,EAAO,aAE9BX,MAAOtF,EAAK3B,SACZ+J,WAAY,CAAEC,MAAO,CAAEC,SAAU,KACjCzG,KAAK,aAIT,cAAC,KAAD,CACEE,QAAS,SAACmE,GAAD,OAnFT,SAACA,EAAOD,GAC1B,IAAIuJ,EAAc,YAAOF,GACzBE,EAAe/G,OAAOxC,EAAQ,EAAG,EAAG,CAChC7H,eAAgB,GAChBC,SAAU,KAEdkR,EAAeC,GA6EuBC,CAAYvJ,EAAOD,IACvCtE,UAAU,kBAEZ,cAAC,KAAD,CACEI,QAAS,SAACmE,GAAD,OA9EF,SAACA,EAAOD,GACjC,IAAIuJ,EAAc,YAAOF,GACzBE,EAAe/G,OAAOxC,EAAO,GAC7BsJ,EAAeC,GA2EuBpD,CAAmBlG,EAAOD,IAC9CtE,UAAS,2BACG,IAAVsE,EAAc,SAAW,SAI/B,cAACrD,EAAA,EAAD,CAAKC,GAAI,CAAE6I,OAAQ,MACnB,cAACC,GAAA,EAAD,IACA,cAAC/I,EAAA,EAAD,CAAKC,GAAI,CAAE6I,OAAQ,QAvCXzF,aA+CpB,eAACK,GAAA,EAAD,WACE,cAACxE,EAAA,EAAD,CAAQC,QAASyD,EAAjB,oBACA,cAAC1D,EAAA,EAAD,CAAQC,QAtIC,SAACmE,GACdvF,QAAQC,IAAI,cAAe0O,GAC3B5I,EAAc,2BACTD,GADQ,IAEXvJ,MAAOA,EACPC,MAAOmS,EAAYvP,QACjB,SAACC,EAAMiG,GAAP,OAAiBjG,EAAK5B,eAAewK,OAAS,QAGlDhC,GAAa,GACbpB,IACA7E,QAAQC,IAAI6F,IA2HiBoC,UAAWyG,EAAYvP,QAAO,SAAAC,GAAI,OAAIA,EAAK5B,eAAewK,OAAS,KAAGA,OAA/F,yBCnJF8G,I,OAAS,SAAC/Q,GACZ,MAAwB6H,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KACA9E,QAAQC,IAAI,iBAAkBgF,GAO9B,OACI,sBAAKjE,UAAU,uCAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,+BAAOhD,EAAMoK,cAAc9L,cAAcC,QACzC,sBAAMyE,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAVN,WAChB0D,GAAQ,WAaJ,qBAAK9D,UAAU,mBAAf,SACKhD,EAAMoK,cAAc9L,cAAcE,MAAM4I,KAAI,SAAC/F,EAAMiG,GAChD,OACI,sBAAKtE,UAAU,cAAf,UACI,qBAAKA,UAAU,kBAAf,SAAkC3B,EAAK5B,iBACvC,qBAAKuD,UAAU,kBAAf,SAAkC3B,EAAK3B,aAFT4H,QAU9C,cAAC,GAAD,CAAcL,KAAMA,EAAMH,QAASA,EAAS4B,gBAAiB1I,EAAM0I,gBAAiBD,cAAezI,EAAMoK,cAActN,KAAMgL,WAAY9H,EAAMoK,cAAc9L,qBAK1JyG,OAAMC,KAAK+L,IC6XXC,OA1Yf,WACE,IAAIC,EACJ,EAAyCC,aAAY,SAAC7T,GAAD,OAAWA,KAAzDuG,EAAP,EAAOA,YAAauN,EAApB,EAAoBA,kBACpB,EAAwBtJ,mBAAS,MAAjC,mBAAOuJ,EAAP,KAAYC,EAAZ,KACA,EAA8BxJ,oBAAS,GAAvC,mBAAO1I,EAAP,KAAgBmS,EAAhB,KACMhJ,EAAWC,cACjB,EAAwBV,oBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KAEA,EAAwCe,mBAAS,SAAjD,mBAAO0J,EAAP,KAAqB7J,EAArB,KACA,EAA8CG,mBAAS,SAAvD,mBAAO2J,EAAP,KAAwBhK,EAAxB,KACA,EAAmDK,mBAAS,UAA5D,mBAAO4J,EAAP,KAA2BhK,EAA3B,KAqCA,SAASiK,EAAiBC,GACpB/N,EAAY/G,QACdyL,EAASxC,GAAyB,CAACH,KAAKgM,EAAS9U,OAAQ+G,EAAY/G,UAjCzE2L,qBAAU,WACNxG,QAAQC,IAAI,0BACZoP,EAASF,EAAkBlL,cAE1B,CAACkL,IAEN3I,qBAAU,WAORxG,QAAQC,IAAI,qBACZqG,EAAS/C,GAAsB3B,EAAY/G,SAAS6D,MAAK,SAACkR,GACxDP,EAASO,EAAIrU,cANd,CAACqG,IA6BJ,IAIMiO,EAAgB,SAACtK,EAAOlG,EAAMiG,EAAOlB,GACzC/E,EAAI,2BAAOA,GAAP,IAAayQ,MAAM,EAAMhV,KAAK,GAAD,OAAKuE,EAAKvE,KAAV,YAJ1BiV,KAAKC,MAAMD,KAAKE,SAAWC,KAAKC,UAKvC,IAAIC,EAASxQ,KAAKiE,MAAMjE,KAAKC,UAAUuP,IACvCgB,EAAOhM,GAAQ0D,OAAOxC,EAAQ,EAAG,EAAGjG,GACpCgQ,EAASe,GACTV,EAAiBU,IAGbC,EAAkB,SAAC9K,EAAOlG,EAAMiG,EAAOlB,GAC3C,IAAIgM,EAASxQ,KAAKiE,MAAMjE,KAAKC,UAAUuP,IACvCgB,EAAOhM,GAAQ0D,OAAOxC,EAAO,GAC7B+J,EAASe,GACTV,EAAiBU,IA4CnB,SAASE,EAAalU,EAAeiD,EAAMkR,GACvC,OAAQnU,GACN,IAAK,eACD,OAAO,cAAC,GAAD,CAAasK,gBAAiB6J,EAAYnI,cAAe/I,IAEpE,IAAK,YACH,OAAO,cAAC,GAAD,CAAWqH,gBAAiB6J,EAAYnI,cAAe/I,IAEhE,IAAK,aACD,OAAO,cAAC,GAAD,CAAYqH,gBAAiB6J,EAAYnI,cAAe/I,IAEnE,IAAK,YACD,OAAO,cAAC,GAAD,CAAWqH,gBAAiB6J,EAAYnI,cAAe/I,IAElE,IAAK,YACD,OAAO,cAAC,GAAD,CAAWqH,gBAAiB6J,EAAYnI,cAAe/I,IAElE,IAAK,sBACH,OAAO,cAAC,GAAD,CAAqBqH,gBAAiB6J,EAAYnI,cAAe/I,IAE1E,IAAK,SACH,OAAO,cAAC,GAAD,CAAQqH,gBAAiB6J,EAAYnI,cAAe/I,IAE7D,IAAK,qBACH,OAAO,cAAC,GAAD,CAAoBqH,gBAAiB6J,EAAYnI,cAAe/I,IAEzE,IAAK,SACD,OAAO,cAAC,GAAD,CAAQqH,gBAAiB6J,EAAYnI,cAAe/I,IAE/D,QACI,OAAO,MAwNjB,OAlNE4P,EADEG,EACW,cAAC,IAAD,CAAiBoB,UA7EhC,SAAmBC,GACjB,IAAQC,EAAqCD,EAArCC,YAAaC,EAAwBF,EAAxBE,OAAQC,EAAgBH,EAAhBG,YAE7B,GAAKF,IAAgBA,EAAYG,cAAgBF,EAAOE,aAAeH,EAAYpL,QAAUqL,EAAOrL,OAKpG,GAAIoL,EAAYG,cAAgBF,EAAOE,YAAa,CAChD,IAAMT,EAASU,MAAMC,KAAK3B,EAAIuB,EAAOE,cACrCT,EAAOtI,OAAO6I,EAAOrL,MAAO,GAC5B8K,EAAOtI,OAAO4I,EAAYpL,MAAO,EAAG8J,EAAIsB,EAAYG,aAAazR,QAAO,SAAA4R,GAAC,OAAIA,EAAElW,OAAS8V,KAAa,IAErG,IAAMK,EAAQP,EAAYG,YAEpBK,EAAS,2BACV9B,GADU,kBAEZ6B,EAAQb,IAEXf,EAAS6B,GACTxB,EAAiBwB,OACd,CAAC,IAAD,EAECC,EAAWR,EAAOE,YAClBO,EAASV,EAAYG,YACrBQ,EAAYP,MAAMC,KAAK3B,EAAIuB,EAAOE,cAClCS,EAAUR,MAAMC,KAAK3B,EAAIsB,EAAYG,cAE3CQ,EAAUvJ,OAAO6I,EAAOrL,MAAO,GAE/BgM,EAAQxJ,OAAO4I,EAAYpL,MAAO,EAAG8J,EAAIuB,EAAOE,aAAazR,QAAO,SAAA4R,GAAC,OAAIA,EAAElW,OAAS2V,EAAOG,eAAa,IACxG,IAAMM,EAAS,2BACV9B,GADU,uBAEZ+B,EAAWE,GAFC,cAGZD,EAASE,GAHG,IAKfjC,EAAS6B,GACTxB,EAAiBwB,KAwCN,SACb,sBAAKlQ,UAAU,oBAAf,UACA,cAAC,GAAD,CAAqBwE,mBAAoBA,EAAoBC,qBAAsBA,EAAsBC,gBAAiBA,EAAiBT,KAAMA,EAAMH,QAASA,IAC9J,eAACyE,EAAA,EAAD,CAAMC,WAAS,EAAC+H,QAAS,EAAzB,UACI,eAAChI,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAI,EAAf,UACE,sBAAK5I,UAAU,iBAAf,UACA,4CAGE,cAACiB,EAAA,EAAD,CAAKC,GAAI,CAAC2F,MAAO,KACjB,cAAC,KAAD,CAAsBzG,QApJP,WACvB0D,GAAQ,MAoJA,cAAC7C,EAAA,EAAD,CAAKC,GAAI,CAAC2F,MAAO,MACjB,2CAGA,cAAC5F,EAAA,EAAD,CAAKC,GAAI,CAAC2F,MAAO,KAEjB,cAAC,KAAD,CAAsBzG,QAAS,WAC7BkO,GAAW,GACX,IAAMc,EAAM,2BAAOhB,GAAP,IAAY1S,KAAK,GAAD,mBAAM0S,EAAG,MAAT,YAAsBA,EAAG,UAAcjS,QAAS,KAC5EkS,EAASe,MAEX,cAACnO,EAAA,EAAD,CAAKC,GAAI,CAAC2F,MAAO,KACjB,cAAC,KAAD,CAAiBzG,QAAS,WAAOkO,GAAW,SAE9C,cAACkC,EAAA,EAAD,CAAOxQ,UAAS,oCAA+BwO,EAA/B,4BAAkEC,EAAlE,sBAAkGF,GAAgBrN,GAAI,CAACyF,SAAU4H,GAAelN,UAAW,EAA3K,SACE,eAACkH,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAI,GAAI6H,GAAG,SAAtB,SACE,cAAC,IAAD,CAAWZ,YAAY,SAAvB,SACG,SAACa,EAAUC,GAAX,OACC,6CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0D9Q,UAAW2Q,EAASI,eAAiB,oCAAsC,uBAArI,SACE,eAAC,WAAD,CAAUC,SAAU,0CAApB,UACG5C,EAAIjT,OAAOiJ,KAAI,SAAC/F,EAAMiG,GACrB,OACE,cAAC,IAAD,CAA2BsL,YAAavR,EAAKvE,KAAMwK,MAAOA,EAA1D,SACG,SAACoM,EAAUC,GAAX,OACC,uDAAK3Q,UAAW2Q,EAASM,WAAa,qBAAuB,sBACzDL,IAAKF,EAASG,UACVH,EAASQ,gBAFjB,IAGIC,IAAK9S,EAAKvE,OACVwV,EAAajR,EAAKjD,cAAeiD,EAAM,UACzC,sBAAK2B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB0Q,EAASU,iBAA3C,aACE,cAAC,IAAD,OAEF,sBAAMpR,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAACmE,GAAD,OAAWsK,EAActK,EAAOlG,EAAMiG,EAAO,eAEjF,sBAAMtE,UAAW3B,EAAKyQ,KAAO,mBAAqB,SAAlD,SACE,cAAC,KAAD,CAAmB1O,QAAS,SAACmE,GAAD,OAAW8K,EAAgB9K,EAAOlG,EAAMiG,EAAO,qBAfrEjG,EAAKvE,SAwBxB4W,EAAShH,uBAMpB,cAACnB,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAIzM,EAAU,EAAI,GAAIsU,GAAG,OAApC,SACA,cAAC,IAAD,CAAWZ,YAAY,OAAvB,SACG,SAACa,EAAUC,GAAX,OACC,6CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0D9Q,UAAW2Q,EAASI,eAAiB,oCAAsC,uBAArI,SACE,eAAC,WAAD,CAAUC,SAAU,0CAApB,UACG5C,EAAI1S,KAAK0I,KAAI,SAAC/F,EAAMiG,GACnB,OACE,cAAC,IAAD,CAA2BsL,YAAavR,EAAKvE,KAAMwK,MAAOA,EAA1D,SACG,SAACoM,EAAUC,GAAX,OACC,uDAAK3Q,UAAW2Q,EAASM,WAAa,yCAA2C,sBAC7EL,IAAKF,EAASG,UACVH,EAASQ,gBAFjB,IAGIC,IAAK9S,EAAKvE,OAEVwV,EAAajR,EAAKjD,cAAeiD,EAAM,QACzC,sBAAK2B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB0Q,EAASU,iBAA3C,aACE,cAAC,IAAD,OAEF,sBAAMpR,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAACmE,GAAD,OAAWsK,EAActK,EAAOlG,EAAMiG,EAAO,aAEjF,sBAAMtE,UAAW3B,EAAKyQ,KAAO,mBAAqB,SAAlD,SACI,cAAC,KAAD,CAAmB1O,QAAS,SAACmE,GAAD,OAAW8K,EAAgB9K,EAAOlG,EAAMiG,EAAO,mBAhBvEjG,EAAKvE,SAyBxB4W,EAAShH,uBAOjBvN,EACD,cAACoM,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAI,EAAG6H,GAAG,UAArB,SACA,cAAC,IAAD,CAAWZ,YAAY,UAAvB,SACG,SAACa,EAAUC,GAAX,OACC,8CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0D9Q,UAAW2Q,EAASI,eAAiB,mDAAqD,sCAApJ,UACGL,EAASO,WACV,eAAC,WAAD,CAAUD,SAAU,0CAApB,UACG5C,EAAIjS,QAAQiI,KAAI,SAAC/F,EAAMiG,GACtB,OACE,cAAC,IAAD,CAA2BsL,YAAavR,EAAKvE,KAAMwK,MAAOA,EAA1D,SACG,SAACoM,EAAUC,GAAX,OACC,uDAAK3Q,UAAW2Q,EAASM,WAAa,qBAAuB,sBACvDL,IAAKF,EAASG,UACVH,EAASQ,gBAFnB,IAGMC,IAAK9S,EAAKvE,OACZwV,EAAajR,EAAKjD,cAAeiD,EAAM,WACzC,sBAAK2B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB0Q,EAASU,iBAA3C,aACE,cAAC,IAAD,OAEF,sBAAMpR,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAACmE,GAAD,OAAWsK,EAActK,EAAOlG,EAAMiG,EAAO,gBAEjF,sBAAMtE,UAAW3B,EAAKyQ,KAAO,mBAAqB,SAAlD,SACI,cAAC,KAAD,CAAmB1O,QAAS,SAACmE,GAAD,OAAW8K,EAAgB9K,EAAOlG,EAAMiG,EAAO,sBAfvEjG,EAAKvE,SAwBxB4W,EAAShH,wBAKR,aAIhB,eAACnB,EAAA,EAAD,CAAMlK,MAAI,EAACuK,GAAI,EAAf,UACE,sBAAK5I,UAAU,2BAAf,UACE,8BACE,sBAAMA,UAAU,0BAAhB,2BAEF,cAACqR,EAAA,EAAD,CACEZ,GAAG,2BACHa,QAAS,CACP,CAAE1N,MAAO,YAAa6M,GAAI,GAC1B,CAAE7M,MAAO,SAAU6M,GAAI,IAEzBvP,GAAI,CAAE2F,MAAO,KACb0K,YAAa,SAACC,GAAD,OAAY,cAAC7L,EAAA,EAAD,2BAAe6L,GAAf,IAAuB9H,YAAY,SAAUrJ,QAAQ,oBAGlF,cAACmQ,EAAA,EAAD,CAAO9J,MAAO,CAAC+K,QAAS,QAASzR,UAAU,iBAAiBqB,UAAW,EAAvE,SAEA,cAAC,IAAD,CAAWwO,YAAY,mBAAvB,SACO,SAACa,EAAUC,GAAX,OACC,8CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0D9Q,UAAW2Q,EAASI,eAAiB,oCAAsC,uBAArI,UACGL,EAASO,WACV,eAAC,WAAD,CAAUD,SAAU,0CAApB,UACG5C,EAAIzR,iBAAiByH,KAAI,SAAC/F,EAAMiG,GAC/B,OACE,cAAC,IAAD,CAA2BsL,YAAavR,EAAKvE,KAAMwK,MAAOA,EAA1D,SACG,SAACoM,EAAUC,GAAX,OACC,uDAAK3Q,UAAW2Q,EAASM,WAAa,yCAA2C,sBAC3EL,IAAKF,EAASG,UACVH,EAASQ,gBAFnB,IAGMC,IAAK9S,EAAKvE,OAEZwV,EAAajR,EAAKjD,cAAeiD,EAAM,oBACzC,sBAAK2B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB0Q,EAASU,iBAA3C,aACE,cAAC,IAAD,OAEF,sBAAMpR,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAACmE,GAAD,OAAWsK,EAActK,EAAOlG,EAAMiG,EAAO,yBAEjF,sBAAMtE,UAAW3B,EAAKyQ,KAAO,mBAAqB,SAAlD,SACI,cAAC,KAAD,CAAmB1O,QAAS,SAACmE,GAAD,OAAW8K,EAAgB9K,EAAOlG,EAAMiG,EAAO,+BAhBvEjG,EAAKvE,SAyBxB4W,EAAShH,mCAajB,6CAIb,sBAAK1J,UAAU,eAAf,UACI,cAACiB,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACE,cAACC,EAAA,EAAD,CAAQC,UAAW,EAAGrB,UAAU,gBAAgBM,MAAM,UAAUgB,SAAS,QAAzE,SACE,eAACC,EAAA,EAAD,CAASvB,UAAU,iBAAnB,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKwB,IAAKC,EAAMzB,UAAU,cAAc0B,IAAI,mBAC1C,cAACgQ,EAAA,EAAD,CAAMC,UAAU,OAAO3R,UAAU,kCAAkC4R,KAAK,IAAxE,mBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO3R,UAAU,2BAA2B4R,KAAK,IAAjE,wBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO3R,UAAU,2BAA2B4R,KAAK,IAAjE,uBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO3R,UAAU,2BAA2B4R,KAAK,IAAjE,oBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO3R,UAAU,2BAA2B4R,KAAK,IAAjE,uBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO3R,UAAU,2BAA2B4R,KAAK,IAAjE,4BAEJ,gCACE,cAACzR,EAAA,EAAD,CACIC,QAASf,OAAOwS,MAChBxR,QAAQ,YACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,yBALd,6BAQA,cAAC,EAAD,cAMTiO,MClXQ6D,OA9Bf,WACA,IAAMpY,EAAawU,aAAY,SAAA7T,GAAK,OAAIA,EAAMuG,YAAYlH,cACxD,OACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,8BACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO2B,KAAK,WAAZ,WACI3B,GAAgD,OAAlCC,aAAaC,QAAQ,WAAsB,cAAC,GAAD,KACxDF,GAA+C,MAAjCC,aAAaC,QAAQ,UAAqB,cAAC,IAAD,CAAUiI,GAAG,SAE1E,cAAC,IAAD,CAAOxG,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOyG,OAAK,EAACzG,KAAK,IAAlB,SACE,cAAC6G,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAClB,EAAA,EAAD,CAAKmB,EAAE,OAAOC,UAAU,SAAxB,SACE,0D,oBCbDyF,GArBHiK,aAAY,CACtB5J,QAAS,CACP6J,QAAS,CACPtW,KAAM,YAGVuW,WAAY,CACVC,UAAW,CACTC,SAAU,CACR,CACEnV,MAAO,CAAEqD,QAAS,WAAYC,MAAO,WACrCoG,MAAO,CACL0L,YAAa,OACbC,aAAc,cCNfC,GAAQC,YAAe,CAClCC,QAAS,CACP5R,YAAa5G,EACbmU,kBAAmBnL,MCHvByP,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAACK,GAAA,EAAD,CAAe7K,MAAOA,GAAtB,SACE,cAAC,GAAD,QAGJ8K,SAASC,eAAe,W","file":"static/js/main.558ff869.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn : (localStorage.getItem('token') == null) ? false : true,\r\n    userId: null,\r\n    name: null,\r\n    email: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        signInAction: (state, action) => {\r\n            state.isSignedIn = true;\r\n            state.userId = action.payload.userId;\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n        },\r\n        signOutAction: (state) => {\r\n            state.isSignedIn = false;\r\n            state.userId = null;\r\n            state.name = null;\r\n            state.email = null;\r\n        },\r\n    },\r\n  });\r\n  \r\nexport const { signInAction, signOutAction } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBjh7R7l6f9rTW8Oll_uzx2q50uJNWRjbU\",\r\n  authDomain: \"resume-builder-c4248.firebaseapp.com\",\r\n  projectId: \"resume-builder-c4248\",\r\n  storageBucket: \"resume-builder-c4248.appspot.com\",\r\n  messagingSenderId: \"790181104761\",\r\n  appId: \"1:790181104761:web:3f3e105c4d46cd7c09d8a8\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAction, signOutAction } from \"../../reducers/authSlice.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\n\r\nconst initialData = {\r\n    header: [\r\n        {\r\n            name: \"BasicInfo\",\r\n            componentType: 'BasicInfo',\r\n            path: \"BasicInfo/BasicInfo\"\r\n        },\r\n        {\r\n            name: \"ProfessionalSummary\",\r\n            componentType: 'ProfessionalSummary',\r\n            path: \"ProfessionalSummary/ProfessionalSummary\",\r\n            componentData: {\r\n                title: \"Professional Summary\",\r\n                items: [\r\n                  {\r\n                    summary: \"This is summary body.\"\r\n                  },\r\n                ],\r\n            }\r\n        }\r\n\r\n    ],\r\n  main: [\r\n    {\r\n      name: \"Education\",\r\n      componentType: 'Education',\r\n      path: \"Education/Education\",\r\n      componentData: {\r\n        title: \"Education\",\r\n        items: [\r\n          {\r\n            title: \"Executive MBA, Engineering Management\",\r\n            university: \"The University of Arizona\",\r\n            date: \"2010 - 2014\",\r\n            gpa: \"CGPA 09/10\",\r\n          },\r\n          {\r\n            title: \"Engineering Management\",\r\n            university: \"The University of California, Berkeley\",\r\n            date: \"2008 - 2010\",\r\n            gpa: \"CGPA 7.5/10\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Achievements\",\r\n      componentType: 'Achievements',\r\n      path: \"Achievements/Achievement\",\r\n      componentData: {\r\n        title: \"Achievements\",\r\n        showIcon: true,\r\n        items: [\r\n          {\r\n            title:\r\n              \"Won Best Employee Award for last 2 consecutive year (2020 & 2021). Won Best Employee Award for last 2 consecutive year (2020 & 2021).\",\r\n          },\r\n          { title: \"Won inter-zone cricket competition (2020). \" },\r\n          {\r\n            title: \"Runner up for state level table tennis competition (2020).\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Experience\",\r\n      componentType: 'Experience',\r\n      path: \"Experience/Experience\",\r\n      componentData: {\r\n        title: \"Experience\",\r\n        items: [\r\n          {\r\n            experienceTitle: \"Android Developer\",\r\n            company: \"Google\",\r\n            date: \"2018 - 2020\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 3 key projects of major clients.\",\r\n          },\r\n          {\r\n            experienceTitle: \"Front End Developer\",\r\n            company: \"Amazon\",\r\n            date: \"2014 - 2018\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 4 key projects of major clients.\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  sidebar: [\r\n    {\r\n      name: \"SkillsWithProgress\",\r\n      componentType: 'SkillsWithProgress',\r\n      path: \"SkillsWithProgress/SkillsWithProgress\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { title: \"HTML\", proficiency: 80 },\r\n          { title: \"CSS\", proficiency: 80 },\r\n          { title: \"Javascript\", proficiency: \"70\" },\r\n          { title: \"React\", proficiency: 50 },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Skills\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"HTML\" },\r\n          { title: \"CSS\" },\r\n          { title: \"JavaScript\" },\r\n          { title: \"React\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Tools\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Tools\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [{ title: \"Git\" }, { title: \"Webpack\" }, { title: \"Gulp\" }],\r\n      },\r\n    },\r\n    {\r\n      name: \"Hobbies\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Hobbies\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"Reading\" },\r\n          { title: \"Swimming\" },\r\n          { title: \"Hiking\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Social\",\r\n      componentType: 'Social',\r\n      path: \"Social/Social\",\r\n      componentData: {\r\n        title: \"Social\",\r\n        items: [\r\n          {\r\n            socialPlatform: \"Facebook\",\r\n            username: \"@username\",\r\n          },\r\n          {\r\n            socialPlatform: \"Twitter\",\r\n            username: \"@username\",\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n  componentLibrary: [\r\n    {\r\n      name: \"Languages\",\r\n      componentType: 'Languages',\r\n      path: \"Languages/Languages\",\r\n      componentData: {\r\n        title: \"Languages\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { language: \"English\", proficiency: \"Proficient\" },\r\n          { language: \"Hindi\", proficiency: \"Native\" },\r\n          { language: \"Spanish\", proficiency: \"Beginner\" },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nclass GoogleLogin extends Component {\r\n  // If not using arrow function then we need to bind `this` like below\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {isSignedIn: null};\r\n  //     this.onAuthChange = this.onAuthChange.bind(this)\r\n  // }\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"1051932499833-smce802vivdpiijmo5bg4donrr6n40fg.apps.googleusercontent.com\",\r\n          scope: \"email profile\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // listen for auth changes in future\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedInStatus) => {\r\n    if (isSignedInStatus) {\r\n      this.props.signInAction({\r\n        userId: this.auth.currentUser.get().getId(),\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n    } else {\r\n      this.props.signOutAction();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn().then(() => {\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const name = this.auth.currentUser.get().getBasicProfile().getName();\r\n      const email = this.auth.currentUser.get().getBasicProfile().getEmail();\r\n      this.props.signInAction({\r\n        userId: userId,\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n\r\n      // If first time user then create a new resume\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .get()\r\n        .then((doc) => {\r\n          // Existing user then redirect else create a new resume\r\n          if (doc.exists) {\r\n            localStorage.setItem(\r\n              \"token\",\r\n              this.auth.currentUser.get().getAuthResponse().id_token\r\n            );\r\n            this.props.history.replace(\"builder\");\r\n          } else {\r\n            initialData.header.filter(\r\n              (item) => item.name === \"BasicInfo\"\r\n            )[0].componentData = {\r\n              fullName: name,\r\n              email: email,\r\n              website: \"www.example.com\",\r\n              phone: \"1234567890\",\r\n              address: \"123, ABC Street, XYZ City, ABC State, 123456\",\r\n            };\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(userId)\r\n              .set({\r\n                resumeJson: JSON.stringify(initialData),\r\n                userId: userId,\r\n                name: name,\r\n                email: email,\r\n              })\r\n              .then(() => {\r\n                localStorage.setItem(\r\n                  \"token\",\r\n                  this.auth.currentUser.get().getAuthResponse().id_token\r\n                );\r\n                this.props.history.replace(\"builder\");\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut().then(() => {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.signOutAction();\r\n    });\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return (\r\n        <div className=\"header-login-button-wrap\">\r\n          <CircularProgress className=\"login-loader\" size={18} />\r\n        </div>\r\n      );\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignOutClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignInClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Create Resume\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderAuthButton();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { signInAction, signOutAction };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(GoogleLogin));\r\n","import React from \"react\";\r\nimport {AppBar, Box, Toolbar, Button} from '@mui/material';\r\nimport logo from '../../logo.svg';\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport GoogleLogin from '../Login/GoogleLogin'\r\n\r\nimport './GlobalHeader.css'\r\n\r\nconst GlobalHeader = () => {\r\n    return (useLocation().pathname !== '/builder') ? (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar elevation={0} className=\"global-header\" color=\"transparent\" position=\"static\">\r\n                <Toolbar>\r\n                    <img src={logo} className=\"header-logo\" alt=\"Resume Builder\"/>\r\n                    <div className=\"header-logo-text\">\r\n                        <span>Resume Builder</span>\r\n                    </div>\r\n                    <nav>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/\"\r\n                            exact\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Home\r\n                        </Button>\r\n                        <Button \r\n                            component={NavLink}\r\n                            to=\"/about\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                About\r\n                        </Button>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/contact\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Contact\r\n                        </Button>\r\n                        <GoogleLogin></GoogleLogin>\r\n                    </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    ) : <span></span>\r\n}\r\n\r\nexport default  React.memo(GlobalHeader);","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>About</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>Contact</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeData: null, loading: 'idle'\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getResumeDataByUserId = createAsyncThunk(\r\n  'resume/getResumeDataByUserId',\r\n  async (userId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('users').doc(userId).get()).data();\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeDataByUserId = createAsyncThunk(\r\n  'resume/updateResumeDataByUserId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"users\").doc(apiData.userId).set({resumeJson: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n)\r\n  \r\n\r\nexport const resumeDataSlice = createSlice({\r\n    name: 'resumeDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateResumeDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeData));\r\n            data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getResumeDataByUserId.fulfilled, (state, action) => {\r\n            state.resumeData = action.payload;\r\n        })\r\n\r\n        .addCase(updateResumeDataByUserId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n      })\r\n    },\r\n  });\r\n\r\nexport const { updateResumeDataReducer } = resumeDataSlice.actions;  \r\n\r\nexport default resumeDataSlice.reducer;","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n// import AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\n// import DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nimport \"./GlobalResumeSetting.css\";\r\n\r\nconst GlobalResumeSetting = (props) => {\r\n  const fontSizes = [\r\n    {\r\n      value: \"x-small\",\r\n      label: \"XS\",\r\n    },\r\n    {\r\n      value: \"small\",\r\n      label: \"S\",\r\n    },\r\n    {\r\n      value: \"medium\",\r\n      label: \"M\",\r\n    },\r\n    {\r\n      value: \"large\",\r\n      label: \"L\",\r\n    },\r\n    {\r\n      value: \"larger\",\r\n      label: \"XL\",\r\n    }\r\n  ];\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const changeHeadingFont = (e, size) => {\r\n    props.setHeadingFontSize(size)\r\n  }\r\n\r\n  const changeSubheadingFont = (e, size) => {\r\n    props.setSubeadingFontSize(size);\r\n  }\r\n\r\n  const changeBodyFont = (e, size) => {\r\n    props.setBodyFontSize(size);\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"resume-setting-wrap\">\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Heading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className=\"font-size-div\" onClick={(event) => changeHeadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Subheading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className=\"font-size-div\" onClick={(event) => changeSubheadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Body</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className=\"font-size-div\" onClick={(event) => changeBodyFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={closeEditor}>Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default  React.memo(GlobalResumeSetting);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nconst AchievementEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [achievementItems, setAchievementItems] = useState(editorData.items);\r\n    const [showIcon, setShowIcon] = useState(editorData.showIcon);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowIconChange = (event) => {\r\n        setShowIcon(event.target.checked);\r\n    }\r\n\r\n\r\n    const onAchievementChange = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills[index] = { title: event.target.value };\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onAddAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setAchievementItems(skills);\r\n    }\r\n    const onDeleteAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index, 1);\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showIcon: showIcon, items: achievementItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Icon: <Switch label=\"Rounded\" onChange={onShowIconChange} checked={showIcon} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {achievementItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                        onChange={(event) => onAchievementChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        multiline\r\n                                        rows={2}\r\n                                        inputProps={{style: {fontSize: 14, lineHeight: 1.2}}}\r\n                                        style = {{width: 380}}\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddAchievement(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteAchievement(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!achievementItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default AchievementEditor;","import React, { useState } from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AchievementEditor from \"./AchievementEditor\";\r\n\r\nimport \"./Achievement.css\";\r\n\r\nconst Achievement = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling achievment', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-achievement\">\r\n      <div className=\"resume-section-title\">\r\n        <span>{props.componentItem.componentData.title}</span>\r\n        <span className=\"edit-component-icon\">\r\n          <EditIcon onClick={openEditor} />\r\n        </span>\r\n      </div> \r\n\r\n      <div className=\"achievement-item-wrap\">\r\n        {props.componentItem.componentData.items.map((item, index) => {\r\n          return (\r\n            <div key={`achievement-${index}`} className=\"achievement-item\">\r\n              <span className={`achievement-icon ${props.componentItem.componentData.showIcon ? '' : 'd-none'}`}>\r\n                <StarIcon />\r\n              </span>\r\n              <span className=\"achievement-summary\">\r\n                {item.title}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <AchievementEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Achievement);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst BasicInfoEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDataChange = (event, property) => {\r\n        const newName = event.target.value;\r\n        let newEditorData = {...editorData};\r\n        newEditorData = {...newEditorData, [property]: newName};\r\n        setEditorData(newEditorData);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth readOnly autoComplete='off' value='Basic Info' variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        <div className='editor-item' >\r\n                            <div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Full Name'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'fullName')}\r\n                                        value={editorData.fullName}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Current Role/Designation'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'currentRole')}\r\n                                        value={editorData.currentRole}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Email'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'email')}\r\n                                        value={editorData.email}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240} }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Phone'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'phone')}\r\n                                        value={editorData.phone}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Website'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'website')}\r\n                                        value={editorData.website}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Address'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'address')}\r\n                                        value={editorData.address}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BasicInfoEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport BasicInfoEditor from \"./BasicInfoEditor\";\r\n\r\nimport './BasicInfo.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst BasicInfo = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <div className=\"resume-section resume-section-basic-info\">\r\n            {/* <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n            <span className=\"edit-component-icon\">\r\n                <EditIcon onClick={openEditor} />\r\n            </span> */}\r\n\r\n            <div className=\"basic-section-title\">\r\n                <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>\r\n            <p className=\"basic-info current-role\">{props.componentItem.componentData.currentRole}</p>\r\n            <div>\r\n            <Grid mt={1} \r\n            container \r\n            justifyContent=\"left\" \r\n            alignItems=\"center\" \r\n            rowSpacing={0.5} \r\n            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <PhoneIcon fontSize=\"15\"></PhoneIcon> \r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.phone}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <MailIcon fontSize=\"15\"></MailIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.email}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <LanguageIcon fontSize=\"15\"></LanguageIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.website}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <HomeIcon fontSize=\"15\"></HomeIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.address}</Box>\r\n                    </Item>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n\r\n            <BasicInfoEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(BasicInfo);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onEducationTitleChange = (event, index) => {\r\n        const newTitle = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], title: newTitle};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onUniversityChange = (event, index) => {\r\n        const newUniversity = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], university: newUniversity};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n\r\n    const onDateChange = (event, index) => {\r\n        const newDate = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], date: newDate};\r\n        console.log(educationItems);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onGpaChange = (event, index) => {\r\n        const newGPA = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], gpa: newGPA};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onAddEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index + 1, 0, { title: '', university: '', date: '', gpa: '' });\r\n        setEducationItems(newEducationItems);\r\n    }\r\n    const onDeleteEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index, 1);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        console.log('educationItems', educationItems);\r\n        setEditorData({ ...editorData, title: title,  items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            console.log('props', props);\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onEducationTitleChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onUniversityChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Year'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onDateChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                placeholder='YYYY - YYYY'\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onGpaChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon onClick={(event) => onAddEducation(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon onClick={(event) => onDeleteEducation(event, index)}  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!educationItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport EducationEditor from \"./EducationEditor\";\r\n\r\nimport './Education.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst Education = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling education', open);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-education\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>     \r\n            <div className=\"education-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div key={index} className=\"education-item\">\r\n                            <div className=\"resume-section-subtitle\">\r\n                                <span className=\"education-title full-width-field\">{item.title}</span>\r\n                                <span className=\"education-university full-width-field\">{item.university}</span>\r\n                            </div>\r\n                            <Grid\r\n                                container \r\n                                justifyContent=\"start\" \r\n                                alignItems=\"center\" \r\n                                rowSpacing={0.5} \r\n                                columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                                <Grid item md={6} xs={6} justifyContent=\"start\" alignItems=\"center\">\r\n                                    <Item>\r\n                                        <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                        <Box component=\"span\" sx={{ pl: 0.8}}>{item.date}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                                <Grid item md={6} xs={6} justifyContent=\"start\" alignItems=\"center\" >\r\n                                    <Item>\r\n                                        <SchoolIcon fontSize=\"15\"></SchoolIcon>\r\n                                        <Box component=\"span\" sx={{ pl: 0.8}}>{item.gpa}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <EducationEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(Education);","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst ExperienceEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [experienceItems, setExperienceItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"experienceItems\", experienceItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: experienceItems.filter(\r\n        (item, index) => item.experienceTitle.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onAddExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index + 1, 0, {\r\n      experienceTitle: \"\",\r\n      company: \"\",\r\n      date: \"\",\r\n      location: \"\",\r\n      experienceSummary: \"\",\r\n    });\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index, 1);\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {experienceItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Job Role\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceTitle\")\r\n                        }\r\n                        value={item.experienceTitle}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Company\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"company\")\r\n                        }\r\n                        value={item.company}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Date\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"date\")\r\n                        }\r\n                        value={item.date}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"location\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"location\")\r\n                        }\r\n                        value={item.location}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Summary\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceSummary\")\r\n                        }\r\n                        value={item.experienceSummary}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        rows={3}\r\n                        style = {{width: 380}}\r\n                        multiline\r\n                        \r\n                      />\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddExperience(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!experienceItems.filter(item => item.experienceTitle.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExperienceEditor;\r\n","import React,{useState} from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport './Experience.css'\r\nimport ExperienceEditor from \"./ExperienceEditor\";\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst Experience = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    console.log('calling experience', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-experience\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n                </div>     \r\n            <div className=\"experience-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"experience-item\">\r\n                        <span className=\"experience-title full-width-field resume-section-subtitle\">{item.experienceTitle}</span>\r\n                        <Grid\r\n                            container \r\n                            justifyContent=\"start\" \r\n                            alignItems=\"center\" \r\n                            rowSpacing={0.5} \r\n                            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                            <Grid item md={4} xs={6}>\r\n                                <Item>\r\n                                    <BusinessIcon fontSize=\"15\"></BusinessIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.company}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={6}>\r\n                                <Item>\r\n                                    <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.date}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={6}>\r\n                                <Item>\r\n                                    <LocationOnIcon fontSize=\"15\"></LocationOnIcon>\r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.location}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <span className=\"experience-summary\">\r\n                        {item.experienceSummary}\r\n                        </span>    \r\n                        \r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <ExperienceEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Experience);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst LanguagesEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [languageItems, setLanguageItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onLanguageChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages[index] = { language: event.target.value, proficiency: 'Beginner' };\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onAddLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index + 1, 0, { language: '' });\r\n        setLanguageItems(languages);\r\n    }\r\n    const onDeleteLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index, 1);\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        switch (event.target.value) {\r\n            case 25:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        \r\n            case 50:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Intermediate'};\r\n                break;\r\n            \r\n            case 75:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Proficient'};\r\n                break;\r\n\r\n            case 100:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Native'};\r\n                break;     \r\n            default:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        }\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: languageItems.filter((item, index) => item.language.length > 0) });\r\n        closeEditor();\r\n        setFirstTime(true);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    const getProficiencyValue = (prof) => {\r\n        let val = 25;\r\n        switch (prof) {\r\n            case 'Beginner':\r\n                val = 25;\r\n                break;\r\n        \r\n            case 'Intermediate':\r\n                val = 50;\r\n                break;\r\n            \r\n            case 'Proficient':\r\n                val = 75;\r\n                break;\r\n\r\n            case 'Native':\r\n                val = 100;\r\n                break;     \r\n            default:\r\n                val = 25\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {languageItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onLanguageChange(event, index)}\r\n                                        value={item.language}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ getProficiencyValue(item.proficiency) }\r\n                                            step={25}\r\n                                            marks\r\n                                            min={25}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddLanguage(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteLanguage(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!languageItems.filter(item => item.language.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LanguagesEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport LanguagesEditor from \"./LanguagesEditor\";\r\n\r\nimport \"./Languages.css\";\r\n\r\nconst Languages = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling languages', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  const getProgressFromProficiency = (proficiency) => {\r\n    let val = 25;\r\n    switch (proficiency) {\r\n        case 'Beginner':\r\n            val = 25;\r\n            break;\r\n    \r\n        case 'Intermediate':\r\n            val = 50;\r\n            break;\r\n        \r\n        case 'Proficient':\r\n            val = 75;\r\n            break;\r\n\r\n        case 'Native':\r\n            val = 100;\r\n            break;     \r\n        default:\r\n            val = 25\r\n            break;\r\n    }\r\n    return val;\r\n  }\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"language-wrapper\">\r\n          <div className=\"language-header\">\r\n              <div className=\"language-title\">{item.language}</div>\r\n              <div className={`language-level ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"language-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={ getProgressFromProficiency(item.proficiency) } />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n\r\n      <LanguagesEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Languages);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [professionalSummaryItems, setprofessionalSummaryItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"professionalSummaryItems\", professionalSummaryItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: professionalSummaryItems.filter(\r\n        (item, index) => item.summary.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newprofessionalSummaryItems = [...professionalSummaryItems];\r\n    newprofessionalSummaryItems[index] = {\r\n      ...newprofessionalSummaryItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setprofessionalSummaryItems(newprofessionalSummaryItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {professionalSummaryItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Summary\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"summary\")\r\n                        }\r\n                        fullWidth\r\n                        value={item.summary}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        style = {{width: 380}}\r\n                        size=\"small\"\r\n                        rows={5}\r\n                        multiline\r\n                      />\r\n\r\n                    </div>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!professionalSummaryItems.filter(item => item.summary.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React,{useState} from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport ProfessionalSummaryEditor from \"./ProfessionalSummaryEditor\";\r\n\r\nimport \"./ProfessionalSummary.css\";\r\n\r\nconst ProfessionalSummary = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log(\"calling ProfessionalSummary\", open);\r\n\r\n  const openEditor = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n<div className=\"resume-section resume-section-professional-summary\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"professional-summary-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='professional-summary-item' key={index}>\r\n                             <span className=\"professional-summary-summary-body\">{item.summary}</span>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <ProfessionalSummaryEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(ProfessionalSummary);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillItems, setSkillItems] = useState(editorData.items);\r\n    const [rounded, setRounded] = useState(editorData.rounded);\r\n    const [filled, setFilled] = useState(editorData.filled);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onRoundedChange = (event) => {\r\n        setRounded(event.target.checked);\r\n    }\r\n\r\n    const onFilledChange = (event) => {\r\n        setFilled(event.target.checked);\r\n    }\r\n\r\n    const onSkillChange = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills[index] = { title: event.target.value };\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onAddSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setSkillItems(skills);\r\n    }\r\n    const onDeleteSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index, 1);\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, rounded: rounded, filled: filled, title: title, items: skillItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Rounded: <Switch label=\"Rounded\" onChange={onRoundedChange} checked={rounded} />\r\n                        </div>\r\n                        <div>\r\n                            Filled: <Switch label=\"Filled\" onChange={onFilledChange} checked={filled} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onSkillChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddSkill(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkill(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsEditor;","import React, {useState} from 'react';\r\nimport {Chip} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsEditor from \"./SkillsEditor\";\r\n\r\nimport './Skills.css'\r\nconst Skills = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling skills', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-skills\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"skills-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <Chip key={index} label={item.title} className={`resume-section-body skills-chip ${props.componentItem.componentData.rounded ? '' : 'no-rounded'}`} variant={props.componentItem.componentData.filled ? 'filled' : 'outlined'} />\r\n                );\r\n            })}\r\n            </div>\r\n\r\n\r\n            <SkillsEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Skills);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsWithProgressEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillsProgressItems, setSkillsProgressItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onskillsProgressItemsChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = { title: event.target.value, proficiency: 0 };\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onAddSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index + 1, 0, { title: '', proficiency: 0 });\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n    const onDeleteSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index, 1);\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = {title: newSkillsProgressItems[index].title, proficiency: event.target.value};\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: skillsProgressItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillsProgressItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onskillsProgressItemsChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ Number(item.proficiency) }\r\n                                            step={10}\r\n                                            marks\r\n                                            min={0}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddSkills(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkills(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillsProgressItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsWithProgressEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsWithProgressEditor from \"./SkillsWithProgressEditor\";\r\n\r\nimport \"./SkillsWithProgress.css\";\r\n\r\nconst SkillsWithProgress = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling SkillsWith Progress Bar', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className={props.componentItem.componentData.showProficiencyProgress ? 'skill-wrapper' : 'skill-wrapper min-margin'}>\r\n          <div className=\"skill-header\">\r\n              <div className=\"skill-title\">{item.title}</div>\r\n              <div className={`skill-percentage ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}%</div>\r\n          </div>\r\n          <div className=\"skill-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={Number(item.proficiency)} />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n    <SkillsWithProgressEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(SkillsWithProgress);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [socialItems, setSocialItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"socialItems\", socialItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: socialItems.filter(\r\n        (item, index) => item.socialPlatform.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems[index] = {\r\n      ...newSocialItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onAddSocial = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index + 1, 0, {\r\n        socialPlatform: \"\",\r\n        username: \"\"\r\n    });\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index, 1);\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {socialItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Social Platform\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"socialPlatform\")\r\n                        }\r\n                        value={item.socialPlatform}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Username or URL\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"username\")\r\n                        }\r\n                        value={item.username}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddSocial(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!socialItems.filter(item => item.socialPlatform.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React, {useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SocialEditor from \"./SocialEditor\";\r\n\r\nimport './Social.css'\r\nconst Social = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling Social', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-Social\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"social-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='social-item' key={index}>\r\n                            <div className='social-platform'>{item.socialPlatform}</div>\r\n                            <div className='social-username'>{item.username}</div>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n            <SocialEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Social);","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { AppBar, Button, Box, Toolbar, Link, Paper, Grid, Autocomplete, TextField } from '@mui/material';\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport GoogleLogin from '../../components/Login/GoogleLogin'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getResumeDataByUserId, updateResumeDataByUserId } from '../../reducers/resumeDataSlice';\r\nimport WebAssetOutlinedIcon from '@mui/icons-material/WebAssetOutlined';\r\nimport WebOutlinedIcon from '@mui/icons-material/WebOutlined';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\n\r\nimport './Builder.css'\r\nimport logo from '../../logo.svg';\r\nimport GlobalResumeSetting from \"../../components/GlobalResumeSetting/GlobalResumeSetting\";\r\n\r\nimport Achievement from '../../components/Achievements/Achievement'\r\nimport BasicInfo from '../../components/BasicInfo/BasicInfo'\r\nimport Education from '../../components/Education/Education'\r\nimport Experience from '../../components/Experience/Experience'\r\nimport Languages from '../../components/Languages/Languages';\r\nimport ProfessionalSummary from '../../components/ProfessionalSummary/ProfessionalSummary';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsWithProgress from '../../components/SkillsWithProgress/SkillsWithProgress';\r\nimport Social from '../../components/Social/Social';\r\n\r\n\r\nfunction Builder() {\r\n  let resumeHTML;\r\n  const {authReducer, resumeDataReducer} = useSelector((state) => state);\r\n  const [arr, setItems] = useState(null);\r\n  const [sidebar, setSidebar] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [bodyFontSize, setBodyFontSize] = useState('small');\r\n  const [headingFontSize, setHeadingFontSize] = useState('large');\r\n  const [subheadingFontSize, setSubeadingFontSize] = useState('medium');\r\n\r\n  const  openGlobalSetting = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n      console.log('calling builder effect');\r\n      setItems(resumeDataReducer.resumeData);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resumeDataReducer]);\r\n    \r\n  useEffect(() => {\r\n    getResumeData();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n\r\n  function getResumeData() {\r\n    console.log('geting data again');\r\n    dispatch(getResumeDataByUserId(authReducer.userId)).then((res) => {\r\n      setItems(res.payload);\r\n    });\r\n\r\n    // if (authReducer.userId) {\r\n    //   console.log(authReducer.userId);\r\n    //   const ref = firebase.firestore().collection('users').doc(authReducer.userId);\r\n    //   ref.get().then((doc) => {\r\n    //     const items = doc.data();\r\n    //     console.log('data', items);\r\n    //     const data = JSON.parse(items.resumeJson);\r\n    //     setItems(data);\r\n    //   });\r\n    // }\r\n    \r\n  }\r\n\r\n  function updateResumeData(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeDataByUserId({data:newData, userId: authReducer.userId}));\r\n    }\r\n  }\r\n\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now())\r\n  }\r\n\r\n  const copyComponent = (event, item, index, column) => {\r\n    item = {...item, copy: true, name: `${item.name}-${getUniqueId()}`};\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index + 1, 0, item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const deleteComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    const { destination, source, draggableId } = result;\r\n    // if canceling the dragNdrop in between\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    // if rearranging in same column\r\n    if (destination.droppableId === source.droppableId) {\r\n        const newArr = Array.from(arr[source.droppableId]);\r\n        newArr.splice(source.index, 1);\r\n        newArr.splice(destination.index, 0, arr[destination.droppableId].filter(x => x.name === draggableId)[0]);\r\n        \r\n        const colId = destination.droppableId;\r\n        \r\n        const newColumn = {\r\n          ...arr,\r\n          [colId]: newArr\r\n        }\r\n        setItems(newColumn);\r\n        updateResumeData(newColumn);\r\n    } else {\r\n      // Else if moving from sidebar to main column or vice-versa\r\n      const sourceId = source.droppableId;\r\n      const destId = destination.droppableId;\r\n      const sourceArr = Array.from(arr[source.droppableId]);\r\n      const destArr = Array.from(arr[destination.droppableId]);\r\n      // remove from source\r\n      sourceArr.splice(source.index, 1);\r\n      // add to destination\r\n      destArr.splice(destination.index, 0, arr[source.droppableId].filter(x => x.name === result.draggableId)[0]);\r\n      const newColumn = {\r\n        ...arr,\r\n        [sourceId]: sourceArr,\r\n        [destId]: destArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    }\r\n  }\r\n\r\n  function getComponent(componentType, item, columnName) {\r\n      switch (componentType) {\r\n        case 'Achievements':\r\n            return <Achievement componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'BasicInfo':\r\n          return <BasicInfo componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Experience':\r\n            return <Experience componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Education':\r\n            return <Education componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Languages':\r\n            return <Languages componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'ProfessionalSummary':\r\n          return <ProfessionalSummary componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Skills':\r\n          return <Skills componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'SkillsWithProgress':\r\n          return <SkillsWithProgress componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Social':\r\n            return <Social componentColumn={columnName} componentItem={item} />;  \r\n            \r\n        default:\r\n            return null;\r\n    }\r\n  }\r\n\r\n\r\n  if (arr) {\r\n    resumeHTML = <DragDropContext onDragEnd={onDragEnd}>\r\n    <div className=\"resume-paper-wrap\">\r\n    <GlobalResumeSetting setHeadingFontSize={setHeadingFontSize} setSubeadingFontSize={setSubeadingFontSize} setBodyFontSize={setBodyFontSize} open={open} setOpen={setOpen}></GlobalResumeSetting>\r\n      <Grid container spacing={2}>\r\n          <Grid item xs={8}>\r\n            <div className=\"layout-options\">\r\n            <span>\r\n                Setting: \r\n              </span>\r\n              <Box sx={{width: 5}}></Box>\r\n              <SettingsOutlinedIcon onClick={openGlobalSetting}></SettingsOutlinedIcon>\r\n              <Box sx={{width: 10}}></Box>\r\n              <span>\r\n                Layout: \r\n              </span>\r\n              <Box sx={{width: 5}}></Box>\r\n              \r\n              <WebAssetOutlinedIcon onClick={() => {\r\n                setSidebar(false)\r\n                const newArr = {...arr, main: [...arr['main'], ...arr['sidebar']], sidebar: []};\r\n                setItems(newArr);\r\n                }}></WebAssetOutlinedIcon>\r\n              <Box sx={{width: 8}}></Box>\r\n              <WebOutlinedIcon onClick={() => {setSidebar(true)}}></WebOutlinedIcon>\r\n            </div>\r\n            <Paper className={`resume-paper heading-font-${headingFontSize} subheading-font-${subheadingFontSize} body-font-${bodyFontSize}`} sx={{fontSize: bodyFontSize}} elevation={3} >\r\n              <Grid container>\r\n                <Grid item xs={12} id=\"header\">\r\n                  <Droppable droppableId=\"header\">\r\n                    {(provided, snapshot) => (\r\n                      <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                        <Suspense fallback={<div>Loading</div>}>\r\n                          {arr.header.map((item, index) => {\r\n                            return (\r\n                              <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                  <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'} \r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                    { getComponent(item.componentType, item, 'header') }\r\n                                    <div className=\"overlay\">\r\n                                      <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                        <DragIndicatorIcon/>\r\n                                      </span>\r\n                                      <span className=\"copy-component\">\r\n                                        <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                      <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                            );\r\n                          }\r\n                          )}\r\n                          {provided.placeholder}\r\n                        </Suspense>\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </Grid>\r\n                <Grid item xs={sidebar ? 7 : 12} id=\"main\">\r\n                <Droppable droppableId=\"main\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.main.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'} \r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                  \r\n                                  { getComponent(item.componentType, item, 'main') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'main')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'main')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid>\r\n                \r\n                {sidebar ? \r\n                <Grid item xs={5} id=\"sidebar\">\r\n                <Droppable droppableId=\"sidebar\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over sidebar-column' : 'resume-paper-content sidebar-column'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.sidebar.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                  { getComponent(item.componentType, item, 'sidebar') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'sidebar')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'sidebar')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid> : null}\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <div className=\"component-library-header\">\r\n              <div>\r\n                <span className=\"component-library-title\">All Widgets</span>\r\n              </div>\r\n              <Autocomplete\r\n                id=\"component-library-filter\"\r\n                options={[\r\n                  { label: 'Education', id: 1 },\r\n                  { label: 'Skills', id: 2 },\r\n                ]}\r\n                sx={{ width: 150 }}\r\n                renderInput={(params) => <TextField {...params} placeholder=\"Filter\"  variant=\"standard\" />}\r\n              />\r\n            </div>            \r\n            <Paper style={{padding: '20px'}} className=\"widget-library\" elevation={0}>\r\n\r\n            <Droppable droppableId=\"componentLibrary\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.componentLibrary.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n\r\n                                  { getComponent(item.componentType, item, 'componentLibrary') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'componentLibrary')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'componentLibrary')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n\r\n  </DragDropContext>;\r\n  } else {\r\n    resumeHTML = <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"builder-wrap\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <AppBar elevation={0} className=\"global-header\" color=\"inherit\" position=\"fixed\">\r\n            <Toolbar className=\"builder-header\">\r\n              <div className=\"header-filters\">\r\n                <img src={logo} className=\"header-logo\" alt=\"Resume Builder\" />\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link active\" href=\"#\">About</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Experience</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Education</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Skills</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Languages</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Achievement</Link>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                    onClick={window.print}\r\n                    variant=\"contained\"\r\n                    color=\"primary\" \r\n                    disableElevation\r\n                    className=\"header-download-button\">\r\n                        Download Resume\r\n                </Button>\r\n                <GoogleLogin></GoogleLogin>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n      \r\n      {resumeHTML}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Builder;","import './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport { Container, Box } from '@mui/material';\r\n\r\nimport GlobalHeader from '../GlobalHeader/GlobalHeader';\r\nimport About from '../../pages/About/About';\r\nimport Contact from '../../pages/Contact/Contact';\r\nimport Builder from '../../pages/Builder/Builder';\r\n\r\nfunction App() {\r\nconst isSignedIn = useSelector(state => state.authReducer.isSignedIn);\r\n  return (\r\n      <Router>\r\n        <GlobalHeader/>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/builder\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Builder></Builder>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact></Contact>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About/>\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                  <h1>Home Page</h1>\r\n                </Box> \r\n              </Container>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\n// Or Create your Own theme:\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#09915A'\r\n      }\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        variants: [\r\n          {\r\n            props: { variant: 'space-40', color: 'primary' },\r\n            style: {\r\n              paddingLeft: '40px',\r\n              paddingRight: '40px'\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  export default theme;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authSlice from \"./authSlice\";\r\nimport resumeDataSlice from \"./resumeDataSlice\";\r\n\r\n// export default combineReducers({\r\n//     authReducer: authReducer\r\n// });\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authReducer: authSlice,\r\n    resumeDataReducer: resumeDataSlice\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme'\nimport {store} from './reducers';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}