{"version":3,"sources":["logo.svg","reducers/authSlice.js","firebase.js","globals.js","components/Login/GoogleLogin.js","components/GlobalHeader/GlobalHeader.js","pages/About/About.js","pages/Contact/Contact.js","reducers/resumeDataSlice.js","reducers/globalSettingsSlice.js","components/GlobalResumeSetting/GlobalResumeSetting.js","components/Achievements/AchievementEditor.js","components/Achievements/Achievement.js","components/BasicInfo/BasicInfoEditor.js","components/BasicInfo/BasicInfo.js","components/Education/EducationEditor.js","components/Education/Education.js","components/Experience/ExperienceEditor.js","components/Experience/Experience.js","components/Languages/LanguagesEditor.js","components/Languages/Languages.js","components/ProfessionalSummary/ProfessionalSummaryEditor.js","components/ProfessionalSummary/ProfessionalSummary.js","components/Skills/SkillsEditor.js","components/Skills/Skills.js","components/SkillsWithProgress/SkillsWithProgressEditor.js","components/SkillsWithProgress/SkillsWithProgress.js","components/Social/SocialEditor.js","components/Social/Social.js","pages/Builder/Builder.js","components/App/App.js","theme/index.js","reducers/index.js","index.js"],"names":["INITIAL_STATE","isSignedIn","localStorage","getItem","userId","name","email","authSlice","createSlice","initialState","reducers","signInAction","state","action","payload","signOutAction","actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","richEditorSettings","toolbar","initialData","globalSettings","bodyFontSize","headingFontSize","subheadingFontSize","bodyFontColor","headingFontColor","subheadingFontColor","headerBackgroundColor","sidebarBackgroundColor","aboutSectionFontColor","headingAlignment","resumeJson","header","componentType","path","componentData","title","items","summary","main","university","date","gpa","showIcon","experienceTitle","company","location","experienceSummary","sidebar","filled","rounded","socialPlatform","username","pageTwo","showProficiency","showProficiencyProgress","proficiency","componentLibrary","language","colors","fontSizes","value","label","GoogleLogin","onAuthChange","isSignedInStatus","props","auth","currentUser","get","getId","getBasicProfile","getName","getEmail","onSignInClick","signIn","then","firestore","collection","doc","exists","setItem","getAuthResponse","id_token","history","replace","filter","item","fullName","website","phone","address","set","JSON","stringify","catch","error","console","log","onSignOutClick","signOut","removeItem","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","this","className","CircularProgress","size","Button","onClick","variant","color","disableElevation","renderAuthButton","Component","mapDispatchToProps","connect","authReducer","withRouter","GlobalHeader","useLocation","pathname","Box","sx","flexGrow","AppBar","elevation","position","Toolbar","src","logo","alt","component","NavLink","to","exact","React","memo","About","Container","maxWidth","m","textAlign","Contact","getResumeDataByUserId","createAsyncThunk","thunkAPI","a","data","response","parse","updateResumeDataByUserId","apiData","update","resumeDataSlice","resumeData","loading","updateResumeDataReducer","column","extraReducers","builder","addCase","fulfilled","getGlobalSettingsByUserId","updateGlobalSettingsUserId","globalSettingsSlice","updateSettingsDataReducer","GlobalResumeSetting","useState","headerFontColorToggle","headingFontColorToggle","subheadingFontColorToggle","bodyFontToggle","headerBackgroundColorToggle","sidebarBackgroundColorToogle","colorsToggles","setColorsToggles","closeEditor","setOpen","changeFontColor","property","document","querySelector","style","setProperty","changeHeadingAlignment","e","alignment","setGlobalResumeSettings","globalResumeSettings","openColorToggle","colorToggleProp","Dialog","fullWidth","open","onClose","DialogContent","backgroundColor","onChangeComplete","hex","triangle","map","font","index","event","bodyFontColorToggle","sidebarBackgroundColorToggle","DialogActions","updateGlobalSetting","AchievementEditor","editorData","setEditorData","firstime","setFirstTime","setTitle","achievementItems","setAchievementItems","setShowIcon","dispatch","useDispatch","useEffect","componentName","componentColumn","TextField","autoComplete","onChange","newVal","target","Switch","checked","mb","mt","mr","skills","onAchievementChange","multiline","rows","inputProps","fontSize","lineHeight","width","splice","onAddAchievement","onDeleteAchievement","length","disabled","Achievement","componentItem","BasicInfoEditor","onDataChange","newName","newEditorData","readOnly","currentRole","Item","styled","theme","typography","caption","display","alignItems","BasicInfo","Grid","container","justifyContent","rowSpacing","columnSpacing","xs","sm","md","pl","EducationEditor","educationItems","setEducationItems","newTitle","newEducationItems","onEducationTitleChange","newUniversity","onUniversityChange","newDate","onDateChange","placeholder","newGPA","onGpaChange","onAddEducation","onDeleteEducation","height","Divider","palette","text","secondary","Education","ExperienceEditor","experienceItems","setExperienceItems","onFieldChange","newValue","newExperienceItems","defaultValue","modules","val","onSummaryChange","onAddExperience","onDeleteExperience","Experience","dangerouslySetInnerHTML","__html","LanguagesEditor","languageItems","setLanguageItems","setShowProficiency","setShowProficiencyProgress","getProficiencyValue","prof","onShowProficiencyChange","onShowProficiencyProgressChange","languages","onLanguageChange","Slider","step","marks","min","max","onProficiencyChange","onAddLanguage","onDeleteLanguage","Languages","getProgressFromProficiency","LinearProgress","SocialEditor","professionalSummaryItems","setprofessionalSummaryItems","newprofessionalSummaryItems","ProfessionalSummary","ProfessionalSummaryEditor","SkillsEditor","skillItems","setSkillItems","setRounded","setFilled","onSkillChange","onAddSkill","onDeleteSkill","Skills","Chip","SkillsWithProgressEditor","skillsProgressItems","setSkillsProgressItems","newSkillsProgressItems","onskillsProgressItemsChange","Number","onAddSkills","onDeleteSkills","SkillsWithProgress","socialItems","setSocialItems","newSocialItems","onAddSocial","Social","Builder","resumeHTML","useSelector","resumeDataReducer","globalSettingsReducer","arr","setItems","setSidebar","setPageTwo","updateResumeData","newData","res","root","copyComponent","copy","Math","floor","random","Date","now","newArr","deleteComponent","getComponent","columnName","onDragEnd","result","destination","source","draggableId","droppableId","Array","from","x","colId","newColumn","sourceId","destId","sourceArr","destArr","spacing","icon","mergedArr","setTimeout","getElementById","scrollIntoView","behavior","id","Paper","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","fallback","isDragging","draggableProps","key","dragHandleProps","Autocomplete","options","renderInput","params","padding","Link","underline","href","print","App","createTheme","primary","components","MuiButton","variants","paddingLeft","paddingRight","store","configureStore","reducer","ReactDOM","render","ThemeProvider"],"mappings":"6iBAAe,MAA0B,iC,+CCEnCA,EAAgB,CAClBC,WAA+C,MAAjCC,aAAaC,QAAQ,SACnCC,OAAQ,KACRC,KAAM,KACNC,MAAO,MAGEC,EAAYC,YAAY,CACjCH,KAAM,OACNI,aAAcT,EACdU,SAAU,CACNC,aAAc,SAACC,EAAOC,GAClBD,EAAMX,YAAa,EACnBW,EAAMR,OAASS,EAAOC,QAAQV,OAC9BQ,EAAMP,KAAOQ,EAAOC,QAAQT,KAC5BO,EAAMN,MAAQO,EAAOC,QAAQR,OAEjCS,cAAe,SAACH,GACZA,EAAMX,YAAa,EACnBW,EAAMR,OAAS,KACfQ,EAAMP,KAAO,KACbO,EAAMN,MAAQ,SAKnB,EAAwCC,EAAUS,QAA1CL,EAAR,EAAQA,aAAcI,EAAtB,EAAsBA,cAEdR,IAAf,Q,gBChBAU,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAMMP,QAAf,EChBaQ,EAAqB,CAChCC,QAAS,CACP,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAChC,CAAC,OAAQ,SAAU,YAAY,SAAU,cACzC,CAAC,CAAC,KAAQ,WAAY,CAAC,KAAQ,UAAW,CAAC,OAAU,MAAO,CAAC,OAAU,OACvE,CAAC,CAAE,MAAS,IAAM,CAAE,WAAc,KAClC,CAAC,OAAQ,SACT,CAAC,WAIQC,EAAc,CACzBC,eAAgB,CACdC,aAAc,QACdC,gBAAiB,QACjBC,mBAAoB,QACpBC,cAAe,UACfC,iBAAkB,UAClBC,oBAAqB,UACrBC,sBAAuB,UACvBC,uBAAwB,UACxBC,sBAAuB,UACvBC,iBAAkB,QAEpBC,WAAY,CACZC,OAAQ,CACJ,CACInC,KAAM,YACNoC,cAAe,YACfC,KAAM,uBAEV,CACIrC,KAAM,sBACNoC,cAAe,sBACfC,KAAM,0CACNC,cAAe,CACXC,MAAO,uBACPC,MAAO,CACL,CACEC,QAAS,6BAOzBC,KAAM,CACJ,CACE1C,KAAM,YACNoC,cAAe,YACfC,KAAM,sBACNC,cAAe,CACbC,MAAO,YACPC,MAAO,CACL,CACED,MAAO,wCACPI,WAAY,4BACZC,KAAM,cACNC,IAAK,cAEP,CACEN,MAAO,yBACPI,WAAY,yCACZC,KAAM,cACNC,IAAK,kBAKb,CACE7C,KAAM,eACNoC,cAAe,eACfC,KAAM,2BACNC,cAAe,CACbC,MAAO,eACPO,UAAU,EACVN,MAAO,CACL,CACED,MACE,yIAEJ,CAAEA,MAAO,+CACT,CACEA,MAAO,iEAKf,CACEvC,KAAM,aACNoC,cAAe,aACfC,KAAM,wBACNC,cAAe,CACbC,MAAO,aACPC,MAAO,CACL,CACEO,gBAAiB,oBACjBC,QAAS,SACTJ,KAAM,cACNK,SAAU,WACVC,kBACE,oIAEJ,CACEH,gBAAiB,sBACjBC,QAAS,SACTJ,KAAM,cACNK,SAAU,WACVC,kBACE,wIAMZC,QAAS,CACP,CACEnD,KAAM,SACNoC,cAAe,SACfC,KAAM,gBACNC,cAAe,CACbC,MAAO,SACPa,QAAQ,EACRC,SAAS,EACTb,MAAO,CACL,CAAED,MAAO,QACT,CAAEA,MAAO,OACT,CAAEA,MAAO,cACT,CAAEA,MAAO,YAIf,CACEvC,KAAM,QACNoC,cAAe,SACfC,KAAM,gBACNC,cAAe,CACbC,MAAO,QACPa,QAAQ,EACRC,SAAS,EACTb,MAAO,CAAC,CAAED,MAAO,OAAS,CAAEA,MAAO,WAAa,CAAEA,MAAO,WAG7D,CACEvC,KAAM,UACNoC,cAAe,SACfC,KAAM,gBACNC,cAAe,CACbC,MAAO,UACPa,QAAQ,EACRC,SAAS,EACTb,MAAO,CACL,CAAED,MAAO,WACT,CAAEA,MAAO,YACT,CAAEA,MAAO,aAIf,CACEvC,KAAM,SACNoC,cAAe,SACfC,KAAM,gBACNC,cAAe,CACbC,MAAO,SACPC,MAAO,CACL,CACEc,eAAgB,SAChBC,SAAU,aAEZ,CACED,eAAgB,WAChBC,SAAU,iBAMpBC,QAAS,CACP,CACExD,KAAM,qBACNoC,cAAe,qBACfC,KAAM,wCACNC,cAAe,CACbC,MAAO,SACPkB,iBAAiB,EACjBC,yBAAyB,EACzBlB,MAAO,CACL,CAAED,MAAO,OAAQoB,YAAa,IAC9B,CAAEpB,MAAO,MAAOoB,YAAa,IAC7B,CAAEpB,MAAO,aAAcoB,YAAa,MACpC,CAAEpB,MAAO,QAASoB,YAAa,QAKvCC,iBAAkB,CAChB,CACE5D,KAAM,YACNoC,cAAe,YACfC,KAAM,sBACNC,cAAe,CACbC,MAAO,YACPkB,iBAAiB,EACjBC,yBAAyB,EACzBlB,MAAO,CACL,CAAEqB,SAAU,UAAWF,YAAa,cACpC,CAAEE,SAAU,QAASF,YAAa,UAClC,CAAEE,SAAU,UAAWF,YAAa,kBAQjCG,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAG/KC,EAAY,CACvB,CACEC,MAAO,UACPC,MAAO,MAET,CACED,MAAO,QACPC,MAAO,KAET,CACED,MAAO,SACPC,MAAO,KAET,CACED,MAAO,QACPC,MAAO,KAET,CACED,MAAO,SACPC,MAAO,O,OCpOLC,E,4MA0BJC,aAAe,SAACC,GACVA,EACF,EAAKC,MAAM/D,aAAa,CACtBP,OAAQ,EAAKuE,KAAKC,YAAYC,MAAMC,QACpCzE,KAAM,EAAKsE,KAAKC,YAAYC,MAAME,kBAAkBC,UACpD1E,MAAO,EAAKqE,KAAKC,YAAYC,MAAME,kBAAkBE,aAGvD,EAAKP,MAAM3D,iB,EAIfmE,cAAgB,WACd,EAAKP,KAAKQ,SAASC,MAAK,WACtB,IAAMhF,EAAS,EAAKuE,KAAKC,YAAYC,MAAMC,QACrCzE,EAAO,EAAKsE,KAAKC,YAAYC,MAAME,kBAAkBC,UACrD1E,EAAQ,EAAKqE,KAAKC,YAAYC,MAAME,kBAAkBE,WAC5D,EAAKP,MAAM/D,aAAa,CACtBP,OAAQA,EACRC,KAAM,EAAKsE,KAAKC,YAAYC,MAAME,kBAAkBC,UACpD1E,MAAO,EAAKqE,KAAKC,YAAYC,MAAME,kBAAkBE,aAIvDhE,EACGoE,YACAC,WAAW,SACXC,IAAInF,GACJyE,MACAO,MAAK,SAACG,GAEDA,EAAIC,QACNtF,aAAauF,QACX,QACA,EAAKd,KAAKC,YAAYC,MAAMa,kBAAkBC,UAEhD,EAAKjB,MAAMkB,QAAQC,QAAQ,aAE3BlE,EAAYY,WAAWC,OAAOsD,QAC5B,SAACC,GAAD,MAAwB,cAAdA,EAAK1F,QACf,GAAGsC,cAAgB,CACnBqD,SAAU3F,EACVC,MAAOA,EACP2F,QAAS,kBACTC,MAAO,aACPC,QAAS,gDAEXlF,EACGoE,YACAC,WAAW,SACXC,IAAInF,GACJgG,IAAI,CACH7D,WAAY8D,KAAKC,UAAU3E,EAAYY,YACvCX,eAAgByE,KAAKC,UAAU3E,EAAYC,gBAC3CxB,OAAQA,EACRC,KAAMA,EACNC,MAAOA,IAER8E,MAAK,WACJlF,aAAauF,QACX,QACA,EAAKd,KAAKC,YAAYC,MAAMa,kBAAkBC,UAEhD,EAAKjB,MAAMkB,QAAQC,QAAQ,kBAIlCU,OAAM,SAACC,GACNC,QAAQC,IAAI,0BAA2BF,U,EAK/CG,eAAiB,WACf,EAAKhC,KAAKiC,UAAUxB,MAAK,WACvBlF,aAAa2G,WAAW,SACxB,EAAKnC,MAAM3D,oB,uDA9Ff,WAAqB,IAAD,OAClB+F,OAAOC,KAAKC,KAAK,gBAAgB,WAC/BF,OAAOC,KAAKE,OACTC,KAAK,CACJC,SACE,4EACFC,MAAO,kBAERhC,MAAK,WACJ,EAAKT,KAAOmC,OAAOC,KAAKM,MAAMC,kBAE9B,EAAK9C,aAAa,EAAKG,KAAK1E,WAAW4E,OAEvC,EAAKF,KAAK1E,WAAWsH,OAAO,EAAK/C,sB,8BAqFzC,WACE,OAA8B,OAA1BgD,KAAK9C,MAAMzE,WAEX,qBAAKwH,UAAU,2BAAf,SACE,cAACC,EAAA,EAAD,CAAkBD,UAAU,eAAeE,KAAM,OAG5CH,KAAK9C,MAAMzE,WAElB,cAAC2H,EAAA,EAAD,CACEC,QAASL,KAAKb,eACdmB,QAAQ,YACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,sBALZ,oBAYA,cAACG,EAAA,EAAD,CACEC,QAASL,KAAKtC,cACd4C,QAAQ,YACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,sBALZ,6B,oBAaN,WACE,OAAOD,KAAKS,uB,GA7IUC,aAuJpBC,EAAqB,CAAExH,eAAcI,iBAE5BqH,eARS,SAACxH,GACvB,MAAO,CACLX,WAAYW,EAAMyH,YAAYpI,cAQhCkI,EAFaC,CAGbE,YAAW/D,IC5JPgE,G,OAAe,WACjB,MAAmC,aAA3BC,cAAcC,SAClB,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACI,cAACC,EAAA,EAAD,CAAQC,UAAW,EAAGrB,UAAU,gBAAgBM,MAAM,cAAcgB,SAAS,SAA7E,SACI,eAACC,EAAA,EAAD,WACI,qBAAKC,IAAKC,EAAMzB,UAAU,cAAc0B,IAAI,mBAC5C,qBAAK1B,UAAU,mBAAf,SACI,oDAEJ,gCACI,cAACG,EAAA,EAAD,CACIwB,UAAWC,IACXC,GAAG,IACHC,OAAK,EACLzB,QAAQ,OACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,iCAPd,kBAUA,cAACG,EAAA,EAAD,CACIwB,UAAWC,IACXC,GAAG,SACHxB,QAAQ,OACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,iCANd,mBASA,cAACG,EAAA,EAAD,CACIwB,UAAWC,IACXC,GAAG,WACHxB,QAAQ,OACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,iCANd,qBASA,cAAC,EAAD,cAKhB,2BAGQ+B,MAAMC,KAAKlB,GCnDrBmB,E,4JACF,WACI,OACI,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAAClB,EAAA,EAAD,CAAKmB,EAAE,OAAOC,UAAU,SAAxB,SACI,+C,GALA5B,aAYLwB,ICZTK,E,4JACF,WACI,OACI,cAACJ,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAAClB,EAAA,EAAD,CAAKmB,EAAE,OAAOC,UAAU,SAAxB,SACI,iD,GALE5B,aAYP6B,I,6ICNFC,GAAwBC,YACnC,+BADmD,yCAEnD,WAAO7J,EAAQ8J,GAAf,gBAAAC,EAAA,sEACgClJ,EAASoE,YAAYC,WAAW,SAASC,IAAInF,GAAQyE,MADrF,8BAC4FuF,OAD5F,cACQC,EADR,yBAEShE,KAAKiE,MAAMD,EAAS9H,aAF7B,2CAFmD,yDASxCgI,GAA2BN,YACtC,kCADsD,yCAEtD,WAAOO,EAASN,GAAhB,UAAAC,EAAA,sEACelJ,EAASoE,YAAYC,WAAW,SAASC,IAAIiF,EAAQpK,QAAQqK,OAAO,CAAClI,WAAY8D,KAAKC,UAAUkE,EAAQJ,QADvH,gCAESI,EAAQJ,MAFjB,2CAFsD,yDAS3CM,GAAkBlK,YAAY,CACvCH,KAAM,kBACNI,aA3BkB,CAClBkK,WAAY,KAAMC,QAAS,QA2B3BlK,SAAU,CACNmK,wBAAyB,SAACjK,EAAOC,GAC7B,IAAMuJ,EAAO/D,KAAKiE,MAAMjE,KAAKC,UAAU1F,EAAM+J,aAC7CP,EAAKvJ,EAAOC,QAAQgK,QAAQhF,QAAO,SAAAC,GAAI,OAAIA,EAAK1F,OAASQ,EAAOC,QAAQT,QAAM,GAAGsC,cAAgB9B,EAAOC,QAAQsJ,KAChHxJ,EAAM+J,WAAaP,IAG3BW,cAAe,SAACC,GAEZA,EAAQC,QAAQjB,GAAsBkB,WAAW,SAACtK,EAAOC,GACrDD,EAAM+J,WAAa9J,EAAOC,WAG7BmK,QAAQV,GAAyBW,WAAW,SAACtK,EAAOC,GACnDD,EAAM+J,WAAa9J,EAAOC,cAKrB+J,GAA4BH,GAAgB1J,QAA5C6J,wBAEAH,MAAf,QC1CaS,GAA4BlB,YACvC,mCADuD,yCAEvD,WAAO7J,EAAQ8J,GAAf,gBAAAC,EAAA,sEACgClJ,EAASoE,YAAYC,WAAW,SAASC,IAAInF,GAAQyE,MADrF,8BAC4FuF,OAD5F,cACQC,EADR,yBAEShE,KAAKiE,MAAMD,EAASzI,iBAF7B,2CAFuD,yDAS5CwJ,GAA6BnB,YACxC,oCADwD,yCAExD,WAAOO,EAASN,GAAhB,UAAAC,EAAA,sEACelJ,EAASoE,YAAYC,WAAW,SAASC,IAAIiF,EAAQpK,QAAQqK,OAAO,CAAC7I,eAAgByE,KAAKC,UAAUkE,EAAQJ,QAD3H,gCAESI,EAAQJ,MAFjB,2CAFwD,yDAS7CiB,GAAsB7K,YAAY,CAC3CH,KAAM,sBACNI,aA3BkB,CAClBmB,eAAgB,MA2BhBlB,SAAU,CACN4K,0BAA2B,SAAC1K,EAAOC,GAC/B,IAAMuJ,EAAO/D,KAAKiE,MAAMjE,KAAKC,UAAU1F,EAAMgB,iBAE7ChB,EAAM+J,WAAaP,IAG3BW,cAAe,SAACC,GAEZA,EAAQC,QAAQE,GAA0BD,WAAW,SAACtK,EAAOC,GACzDD,EAAMgB,eAAiBf,EAAOC,WAGjCmK,QAAQG,GAA2BF,WAAW,SAACtK,EAAOC,GACrDD,EAAMgB,eAAiBf,EAAOC,cAOzBuK,IAF8BA,GAAoBrK,QAAlDsK,0BAEAD,GAAf,S,8PCrCME,GAAsB,SAAC7G,GAE3B,MAA0C8G,mBAAS,CACjDC,uBAAuB,EACvBC,wBAAwB,EACxBC,2BAA2B,EAC3BC,gBAAgB,EAChBC,6BAA6B,EAC7BC,8BAA8B,IANhC,mBAAOC,EAAP,KAAsBC,EAAtB,KASMC,EAAc,WAClBvH,EAAMwH,SAAQ,IAGVC,EAAkB,SAACC,EAAUrE,GACpBsE,SAASC,cAAc,SAC/BC,MAAMC,YAAYJ,EAAUrE,IAgD7B0E,EAAyB,SAACC,EAAGC,GACjCjI,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8DvK,iBAAkBqK,MAQ5EG,EAAkB,SAACC,GACvBf,EAAiB,2BAAID,GAAL,kBAAqBgB,GAAmBhB,EAAcgB,OAIxE,OACE,eAACC,GAAA,EAAD,CACEpD,SAAS,KACTqD,WAAW,EACXC,KAAMxI,EAAMwI,KACZC,QAASlB,EAJX,UAME,cAACmB,GAAA,EAAD,UACE,sBAAK3F,UAAU,sBAAf,UAEA,sBAAKA,UAAU,yBAAf,UAEI,qBAAKA,UAAU,yBAAf,SACE,2DAEF,sBAAKA,UAAU,sBAAf,UACE,uBAAMA,UAAU,4BAAhB,uBAEE,cAAC,KAAD,CAAKA,UAAU,gCAAiCI,QAAS,WAAQiF,EAAgB,0BAA6BnE,GAAI,CAAC0E,gBAAiB3I,EAAMmI,qBAAqBxK,4BAEjK,qBAAKoF,UAAS,oCAAsE,IAAxCsE,EAAcN,sBAAiC,GAAK,UAAhG,SACE,cAAC,KAAD,CAAc1D,MAAQrD,EAAMmI,qBAAqBxK,sBAAwBiL,iBAhFnD,SAACvF,GACnCrD,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8DxK,sBAAuB0F,EAAMwF,OAC3FT,EAAgB,0BA8EoH3I,OAAQA,EAAQqJ,SAAS,iBAMvJ,sBAAK/F,UAAU,yBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,6CAEF,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,4BAAhB,uBACA,qBAAKA,UAAU,2BAAf,SACGrD,EAAUqJ,KAAI,SAACC,EAAMC,GACpB,OACE,qBAAiBlG,UAAS,wBAAmB/C,EAAMmI,qBAAqB/K,kBAAoB4L,EAAKrJ,MAAQ,SAAW,IAAMwD,QAAS,SAAC+F,GAAD,OA9DvHjG,EA8D2J+F,EAAKrJ,WA7D5LK,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8D/K,gBAAiB6F,KADvD,IAAIA,GA8DZ,SAAqL+F,EAAKpJ,OAAhLqJ,WAMlB,sBAAKlG,UAAU,sBAAf,UACE,uBAAMA,UAAU,4BAAhB,uBAEE,cAAC,KAAD,CAAKA,UAAU,gCAAgCI,QAAS,WAAQiF,EAAgB,2BAA8BnE,GAAI,CAAC0E,gBAAiB3I,EAAMmI,qBAAqB5K,uBAEjK,qBAAKwF,UAAS,oCAAuE,IAAzCsE,EAAcL,uBAAkC,GAAK,UAAjG,SACE,cAAC,KAAD,CAAc3D,MAAQrD,EAAMmI,qBAAqB5K,iBAAmBqL,iBAtGnD,SAACvF,GAC/BrD,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8D5K,iBAAkB8F,EAAMwF,OACtFpB,EAAgB,uBAAwBpE,EAAMwF,KAC9CT,EAAgB,2BAmG2G3I,OAAQA,EAAQqJ,SAAS,cAK3I,sBAAK/F,UAAU,sBAAf,UACE,sBAAMA,UAAU,4BAAhB,+BAGA,sBAAKA,UAAU,2BAAf,UACI,qBAAKA,UAAS,gCAA2E,SAAhD/C,EAAMmI,qBAAqBvK,iBAA8B,SAAW,IAAMuF,QAAS,SAAC+F,GAAD,OAAWnB,EAAuBmB,EAAO,SAArK,SACE,cAAC,KAAD,MAGF,qBAAKnG,UAAS,gCAA2E,WAAhD/C,EAAMmI,qBAAqBvK,iBAAgC,SAAW,IAAMuF,QAAS,SAAC+F,GAAD,OAAWnB,EAAuBmB,EAAO,WAAvK,SACE,cAAC,KAAD,MAGF,qBAAKnG,UAAS,gCAA2E,UAAhD/C,EAAMmI,qBAAqBvK,iBAA+B,SAAW,IAAMuF,QAAS,SAAC+F,GAAD,OAAWnB,EAAuBmB,EAAO,UAAtK,SACE,cAAC,KAAD,eAOV,sBAAKnG,UAAU,yBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,gDAEF,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,4BAAhB,uBACA,qBAAKA,UAAU,2BAAf,SACGrD,EAAUqJ,KAAI,SAACC,EAAMC,GACpB,OACE,qBAAiBlG,UAAS,wBAAmB/C,EAAMmI,qBAAqB9K,qBAAuB2L,EAAKrJ,MAAQ,SAAW,IAAMwD,QAAS,SAAC+F,GAAD,OAzGvHjG,EAyG8J+F,EAAKrJ,WAxGlMK,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8D9K,mBAAoB4F,KADvD,IAAIA,GAyGf,SAA2L+F,EAAKpJ,OAAtLqJ,WAMlB,sBAAKlG,UAAU,sBAAf,UACE,uBAAMA,UAAU,4BAAhB,uBAEE,cAAC,KAAD,CAAKA,UAAU,gCAAgCI,QAAS,WAAQiF,EAAgB,8BAAiCnE,GAAI,CAAC0E,gBAAiB3I,EAAMmI,qBAAqB3K,0BAEpK,qBAAKuF,UAAS,oCAA0E,IAA5CsE,EAAcJ,0BAAqC,GAAK,UAApG,SACE,cAAC,KAAD,CAAc5D,MAAOrD,EAAMmI,qBAAqB3K,oBAAqBoL,iBA/IjD,SAACvF,GACjCrD,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8D3K,oBAAqB6F,EAAMwF,OACzFpB,EAAgB,0BAA2BpE,EAAMwF,KACjDT,EAAgB,8BA4I8G3I,OAAQA,EAAQqJ,SAAS,iBAMjJ,sBAAK/F,UAAU,yBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,0CAEF,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,4BAAhB,uBACA,qBAAKA,UAAU,2BAAf,SACGrD,EAAUqJ,KAAI,SAACC,EAAMC,GACpB,OACE,qBAAiBlG,UAAS,wBAAmB/C,EAAMmI,qBAAqBhL,eAAiB6L,EAAKrJ,MAAQ,SAAW,IAAMwD,QAAS,SAAC+F,GAAD,OAhIvHjG,EAgIwJ+F,EAAKrJ,WA/HtLK,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8DhL,aAAc8F,KADvD,IAAIA,GAgIT,SAA+K+F,EAAKpJ,OAA1KqJ,WAMlB,sBAAKlG,UAAU,sBAAf,UACE,uBAAMA,UAAU,4BAAhB,uBAEE,cAAC,KAAD,CAAKA,UAAU,gCAAgCI,QAAS,WAAQiF,EAAgB,wBAA2BnE,GAAI,CAAC0E,gBAAiB3I,EAAMmI,qBAAqB7K,oBAE9J,qBAAKyF,UAAS,oCAAoE,IAAtCsE,EAAc8B,oBAA+B,GAAK,UAA9F,SACE,cAAC,KAAD,CAAc9F,MAAOrD,EAAM1C,cAAesL,iBApK5B,SAACvF,GAC3BrD,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8D7K,cAAe+F,EAAMwF,OACnFpB,EAAgB,oBAAqBpE,EAAMwF,KAC3CT,EAAgB,wBAiK6E3I,OAAQA,EAAQqJ,SAAS,iBAMhH,sBAAK/F,UAAU,yBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,iDAEF,sBAAKA,UAAU,sBAAf,UACE,uBAAMA,UAAU,4BAAhB,oCAEE,cAAC,KAAD,CAAKA,UAAU,gCAAgCI,QAAS,WAAQiF,EAAgB,gCAAmCnE,GAAI,CAAC0E,gBAAiB3I,EAAMmI,qBAAqB1K,4BAEtK,qBAAKsF,UAAS,oCAA4E,IAA9CsE,EAAcF,4BAAuC,GAAK,UAAtG,SACE,cAAC,KAAD,CAAc9D,MAAOrD,EAAMmI,qBAAqB1K,sBAAuBmL,iBA9KjD,SAACvF,GACnCrD,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8D1K,sBAAuB4F,EAAMwF,OAC3FT,EAAgB,gCA4KkH3I,OAAQA,EAAQqJ,SAAS,cAInJ,sBAAK/F,UAAU,sBAAf,UACE,uBAAMA,UAAU,4BAAhB,qCAEE,cAAC,KAAD,CAAKA,UAAU,gCAAgCI,QAAS,WAAQiF,EAAgB,iCAAoCnE,GAAI,CAAC0E,gBAAiB3I,EAAMmI,qBAAqBzK,6BAEvK,qBAAKqF,UAAS,oCAA6E,IAA/CsE,EAAc+B,6BAAwC,GAAK,UAAvG,SACE,cAAC,KAAD,CAAc/F,MAAOrD,EAAMmI,qBAAqBzK,uBAAwBkL,iBAnLjD,SAACvF,GACpCrD,EAAMkI,wBAAN,2BAAkClI,EAAMmI,sBAAxC,IAA8DzK,uBAAwB2F,EAAMwF,OAC5FT,EAAgB,iCAiLoH3I,OAAQA,EAAQqJ,SAAS,sBAQ3J,eAACO,GAAA,EAAD,WACE,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QAxKC,WACbnD,EAAMsJ,oBAAoBtJ,EAAMmI,sBAChCZ,KAsKI,yBAMQzC,OAAMC,KAAK8B,I,oGClJZ0C,GArGW,SAACvJ,GACvB,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS0C,EAAWtL,OAA9C,mBAAOA,EAAP,KAAc0L,EAAd,KACA,EAAgD9C,mBAAS0C,EAAWrL,OAApE,mBAAO0L,EAAP,KAAyBC,EAAzB,KACA,EAAgChD,mBAAS0C,EAAW/K,UAApD,mBAAOA,EAAP,KAAiBsL,EAAjB,KACMC,EAAWC,cAoCX1C,EAAc,WAChBvH,EAAMwH,SAAQ,IAYlB,OATA0C,qBAAU,WACFR,IACAM,EAAS7D,GAAwB,CAAExK,KAAMqE,EAAMmK,cAAe/D,OAAQpG,EAAMoK,gBAAiB1E,KAAM8D,KACnGG,GAAa,MAGlB,CAACH,IAIA,eAAClB,GAAA,EAAD,CAAQpD,SAAS,KAAKqD,WAAW,EAAMC,KAAMxI,EAAMwI,KAAMC,QAASlB,EAAlE,UACI,cAACmB,GAAA,EAAD,UACI,sBAAK3F,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAACsH,EAAA,EAAD,CAAW9B,WAAS,EAAC+B,aAAa,MAAMC,SApDtC,SAACrB,GACnB,IAAMsB,EAAStB,EAAMuB,OAAO9K,MAC5BiK,EAASY,IAkDwE7K,MAAOzB,EAAOkF,QAAQ,eAG3F,qBAAKL,UAAU,sBAAf,SACI,8CACe,cAAC2H,GAAA,EAAD,CAAQ9K,MAAM,UAAU2K,SApDlC,SAACrB,GACtBa,EAAYb,EAAMuB,OAAOE,UAmD0DA,QAASlM,SAIhF,qBAAKsE,UAAU,oBAAf,SACK8G,EAAiBd,KAAI,SAAC1H,EAAM4H,GACzB,OACI,sBAAKlG,UAAU,cAAf,UACI,cAACsH,EAAA,EAAD,CACIzK,MAAO,WAAaqJ,EAAQ,GAC5BhF,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OA1DlB,SAACA,EAAOD,GAChC,IAAI8B,EAAM,YAAOlB,GACjBkB,EAAO9B,GAAS,CAAE/K,MAAOgL,EAAMuB,OAAO9K,OACtCmK,EAAoBiB,GAuDiCC,CAAoB9B,EAAOD,IAChDtJ,MAAO0B,EAAKnD,MACZ,WAAU+K,EACVgC,WAAS,EACTC,KAAM,EACNC,WAAY,CAACtD,MAAO,CAACuD,SAAU,GAAIC,WAAY,MAC/CxD,MAAS,CAACyD,MAAO,OAErB,cAAC,KAAD,CAAenI,QAAS,SAAC+F,GAAD,OA5D/B,SAACA,EAAOD,GAC7B,IAAI8B,EAAM,YAAOlB,GACjBkB,EAAOQ,OAAOtC,EAAQ,EAAG,EAAG,CAAE/K,MAAO,KACrC4L,EAAoBiB,GAyD2CS,CAAiBtC,EAAOD,IAAQlG,UAAU,kBAC7E,cAAC,KAAD,CAAmBI,QAAS,SAAC+F,GAAD,OAxDhC,SAACA,EAAOD,GAChC,IAAI8B,EAAM,YAAOlB,GACjBkB,EAAOQ,OAAOtC,EAAO,GACrBa,EAAoBiB,GAqD+CU,CAAoBvC,EAAOD,IAAQlG,UAAS,2BAAgC,IAAVkG,EAAc,SAAW,QAbpGA,aAqBtD,eAACI,GAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QA5DL,SAAC+F,GACZO,EAAc,2BAAKD,GAAN,IAAkBtL,MAAOA,EAAOO,SAAUA,EAAUN,MAAO0L,EAAiBzI,QAAO,SAACC,EAAM4H,GAAP,OAAiB5H,EAAKnD,MAAMwN,OAAS,QACrI/B,GAAa,GACbpC,IACAxF,QAAQC,IAAIwH,IAwDqBmC,UAAW9B,EAAiBzI,QAAO,SAAAC,GAAI,OAAIA,EAAKnD,MAAMwN,OAAS,KAAGA,OAA3F,yBCnGVE,I,OAAc,SAAC5L,GACnB,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KACAzF,QAAQC,IAAI,qBAAsBwG,GAMlC,OACE,sBAAKzF,UAAU,4CAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,+BAAO/C,EAAM6L,cAAc5N,cAAcC,QACzC,sBAAM6E,UAAU,sBAAhB,SACE,cAAC,KAAD,CAAUI,QATE,WAChBqE,GAAQ,WAYR,qBAAKzE,UAAU,wBAAf,SACG/C,EAAM6L,cAAc5N,cAAcE,MAAM4K,KAAI,SAAC1H,EAAM4H,GAClD,OACE,sBAAkClG,UAAU,mBAA5C,UACE,sBAAMA,UAAS,2BAAsB/C,EAAM6L,cAAc5N,cAAcQ,SAAW,GAAK,UAAvF,SACE,cAAC,KAAD,MAEF,sBAAMsE,UAAU,sBAAhB,SACG1B,EAAKnD,UALV,sBAAyB+K,SAY/B,cAAC,GAAD,CAAmBT,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,qBAMxJ6G,OAAMC,KAAK6G,I,6FCmFZE,GAtHS,SAAC9L,GACrB,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACMK,EAAWC,cAEX8B,EAAe,SAAC7C,EAAOxB,GACzB,IAAMsE,EAAU9C,EAAMuB,OAAO9K,MACzBsM,EAAa,eAAOzC,GACxByC,EAAa,2BAAOA,GAAP,kBAAuBvE,EAAWsE,IAC/CvC,EAAcwC,IAUZ1E,EAAc,WAChBvH,EAAMwH,SAAQ,IAYlB,OATA0C,qBAAU,WACFR,IACDM,EAAS7D,GAAwB,CAAExK,KAAMqE,EAAMmK,cAAe/D,OAAQpG,EAAMoK,gBAAiB1E,KAAM8D,KACnGG,GAAa,MAGjB,CAACH,IAIA,eAAClB,GAAA,EAAD,CAAQpD,SAAS,KAAKqD,WAAW,EAAMC,KAAMxI,EAAMwI,KAAMC,QAASlB,EAAlE,UACI,cAACmB,GAAA,EAAD,UACI,sBAAK3F,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAACsH,EAAA,EAAD,CAAW9B,WAAS,EAAC2D,UAAQ,EAAC5B,aAAa,MAAM3K,MAAM,aAAayD,QAAQ,eAEhF,qBAAKL,UAAU,oBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,gCACI,8BACI,cAACsH,EAAA,EAAD,CACIzK,MAAM,YACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAAW6C,EAAa7C,EAAO,aACzCvJ,MAAO6J,EAAWlI,SAClB6J,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,GAAIE,MAAO,MAC5CrI,KAAK,YAGb,8BACI,cAACoH,EAAA,EAAD,CACIzK,MAAM,2BACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAAW6C,EAAa7C,EAAO,gBACzCvJ,MAAO6J,EAAW2C,YAClBhB,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,GAAIE,MAAO,MAC5CrI,KAAK,YAGb,8BACI,cAACoH,EAAA,EAAD,CACIzK,MAAM,QACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAAW6C,EAAa7C,EAAO,UACzCvJ,MAAO6J,EAAW5N,MAClBuP,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,GAAIE,MAAO,MAC5CrI,KAAK,YAGb,8BACI,cAACoH,EAAA,EAAD,CACIzK,MAAM,QACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAAW6C,EAAa7C,EAAO,UACzCvJ,MAAO6J,EAAWhI,MAClB2J,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,GAAIE,MAAO,MAC5CrI,KAAK,YAGb,8BACI,cAACoH,EAAA,EAAD,CACIzK,MAAM,UACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAAW6C,EAAa7C,EAAO,YACzCvJ,MAAO6J,EAAWjI,QAClB4J,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,GAAIE,MAAO,MAC5CrI,KAAK,YAGb,8BACI,cAACoH,EAAA,EAAD,CACIzK,MAAM,UACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAAW6C,EAAa7C,EAAO,YACzCvJ,MAAO6J,EAAW/H,QAClB0J,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,GAAIE,MAAO,MAC5CrI,KAAK,QACLgI,WAAS,EACTC,KAAM,kBASlC,eAAC7B,GAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QApGL,SAAC+F,GACZO,EAAc,eAAKD,IACnBG,GAAa,GACbpC,IACAxF,QAAQC,IAAIwH,IAgGJ,yBC7GV4C,I,OAAOC,aAAOrI,IAAPqI,EAAY,gBAAGC,EAAH,EAAGA,MAAH,mBAAC,eACnBA,EAAMC,WAAWC,SADC,IAErBpH,UAAW,OACXqH,QAAS,OACTC,WAAY,eAGVC,GAAY,SAAC3M,GACf,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KAKA,OACI,sBAAKzE,UAAU,2CAAf,UAMI,sBAAKA,UAAU,sBAAf,UACI,sBAAMA,UAAU,kBAAhB,SAAmC/C,EAAM6L,cAAc5N,cAAcqD,WACrE,sBAAMyB,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAbN,WAChBqE,GAAQ,WAeJ,mBAAGzE,UAAU,0BAAb,SAAwC/C,EAAM6L,cAAc5N,cAAckO,cAC1E,8BACA,eAACS,EAAA,EAAD,CAAM/B,GAAI,EACVgC,WAAS,EACTC,eAAe,OACfJ,WAAW,SACXK,WAAY,GACZC,cAAe,CAAEC,GAAI,GAAKC,GAAI,GAAKC,GAAI,IALvC,UAMI,cAACP,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAI,EAAf,SACI,eAACb,GAAD,WACI,cAAC,KAAD,CAAWhB,SAAS,OACpB,cAACpH,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,GAAhC,SAAqCpN,EAAM6L,cAAc5N,cAAcuD,aAG/E,cAACoL,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAI,EAAf,SACI,eAACb,GAAD,WACI,cAAC,KAAD,CAAUhB,SAAS,OACnB,cAACpH,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,GAAhC,SAAqCpN,EAAM6L,cAAc5N,cAAcrC,aAG/E,cAACgR,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAI,EAAf,SACI,eAACb,GAAD,WACI,cAAC,KAAD,CAAchB,SAAS,OACvB,cAACpH,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,GAAhC,SAAqCpN,EAAM6L,cAAc5N,cAAcsD,eAG/E,cAACqL,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAI,EAAf,SACI,eAACb,GAAD,WACI,cAAC,KAAD,CAAUhB,SAAS,OACnB,cAACpH,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,GAAhC,SAAqCpN,EAAM6L,cAAc5N,cAAcwD,oBAMnF,cAAC,GAAD,CAAiB+G,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,oBAK5J6G,OAAMC,KAAK4H,I,oDCiFZU,GApJS,SAACrN,GACrB,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS0C,EAAWtL,OAA9C,mBAAOA,EAAP,KAAc0L,EAAd,KACA,EAA4C9C,mBAAS0C,EAAWrL,OAAhE,mBAAOmP,EAAP,KAAuBC,EAAvB,KACMvD,EAAWC,cAwDX1C,EAAc,WAChBvH,EAAMwH,SAAQ,IAalB,OAVA0C,qBAAU,WACFR,IACA3H,QAAQC,IAAI,QAAShC,GACtBgK,EAAS7D,GAAwB,CAAExK,KAAMqE,EAAMmK,cAAe/D,OAAQpG,EAAMoK,gBAAiB1E,KAAM8D,KACnGG,GAAa,MAGjB,CAACH,IAIA,eAAClB,GAAA,EAAD,CAAQpD,SAAS,KAAKqD,WAAW,EAAMC,KAAMxI,EAAMwI,KAAMC,QAASlB,EAAlE,UACI,cAACmB,GAAA,EAAD,UACI,sBAAK3F,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAACsH,EAAA,EAAD,CAAW9B,WAAS,EAAC+B,aAAa,MAAMC,SAzEtC,SAACrB,GACnB,IAAMsB,EAAStB,EAAMuB,OAAO9K,MAC5BiK,EAASY,IAuEwE7K,MAAOzB,EAAOkF,QAAQ,eAE3F,qBAAKL,UAAU,oBAAf,SACKuK,EAAevE,KAAI,SAAC1H,EAAM4H,GACvB,OACI,gCACI,sBAAKlG,UAAU,cAAf,UACI,gCACI,cAACsH,EAAA,EAAD,CACIzK,MAAM,0BACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OA/EvB,SAACA,EAAOD,GACnC,IAAMuE,EAAWtE,EAAMuB,OAAO9K,MAC1B8N,EAAiB,YAAOH,GAC5BG,EAAkBxE,GAAlB,2BAA+BwE,EAAkBxE,IAAjD,IAAyD/K,MAAOsP,IAChED,EAAkBE,GA2E2CC,CAAuBxE,EAAOD,IACnDtJ,MAAO0B,EAAKnD,MACZ,WAAU+K,EACVkC,WAAY,CAACtD,MAAO,CAACuD,SAAU,KAC/BnI,KAAK,UAET,cAACoH,EAAA,EAAD,CACIzK,MAAM,uBACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAjF3B,SAACA,EAAOD,GAC/B,IAAM0E,EAAgBzE,EAAMuB,OAAO9K,MAC/B8N,EAAiB,YAAOH,GAC5BG,EAAkBxE,GAAlB,2BAA+BwE,EAAkBxE,IAAjD,IAAyD3K,WAAYqP,IACrEJ,EAAkBE,GA6E2CG,CAAmB1E,EAAOD,IAC/CtJ,MAAO0B,EAAK/C,WACZ,WAAU2K,EACVkC,WAAY,CAACtD,MAAO,CAACuD,SAAU,KAC/BnI,KAAK,UAET,cAACoH,EAAA,EAAD,CACIzK,MAAM,mBACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAlFjC,SAACA,EAAOD,GACzB,IAAM4E,EAAU3E,EAAMuB,OAAO9K,MACzB8N,EAAiB,YAAOH,GAC5BG,EAAkBxE,GAAlB,2BAA+BwE,EAAkBxE,IAAjD,IAAyD1K,KAAMsP,IAC/D9L,QAAQC,IAAIsL,GACZC,EAAkBE,GA6E2CK,CAAa5E,EAAOD,IACzCtJ,MAAO0B,EAAK9C,KACZ,WAAU0K,EACV8E,YAAY,cACZ5C,WAAY,CAACtD,MAAO,CAACuD,SAAU,KAC/BnI,KAAK,UAET,cAACoH,EAAA,EAAD,CACIzK,MAAM,qBACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OApFlC,SAACA,EAAOD,GACxB,IAAM+E,EAAS9E,EAAMuB,OAAO9K,MACxB8N,EAAiB,YAAOH,GAC5BG,EAAkBxE,GAAlB,2BAA+BwE,EAAkBxE,IAAjD,IAAyDzK,IAAKwP,IAC9DT,EAAkBE,GAgF2CQ,CAAY/E,EAAOD,IACxCtJ,MAAO0B,EAAK7C,IACZ,WAAUyK,EACVkC,WAAY,CAACtD,MAAO,CAACuD,SAAU,KAC/BnI,KAAK,aAIb,cAAC,KAAD,CAAeE,QAAS,SAAC+F,GAAD,OArFrC,SAACA,EAAOD,GAC3B,IAAIwE,EAAiB,YAAOH,GAC5BG,EAAkBlC,OAAOtC,EAAQ,EAAG,EAAG,CAAE/K,MAAO,GAAII,WAAY,GAAIC,KAAM,GAAIC,IAAK,KACnF+O,EAAkBE,GAkFiDS,CAAehF,EAAOD,IAAQlG,UAAU,kBAC3E,cAAC,KAAD,CAAmBI,QAAS,SAAC+F,GAAD,OAjFtC,SAACA,EAAOD,GAC9B,IAAIwE,EAAiB,YAAOH,GAC5BG,EAAkBlC,OAAOtC,EAAO,GAChCsE,EAAkBE,GA8EqDU,CAAkBjF,EAAOD,IAASlG,UAAS,2BAAgC,IAAVkG,EAAc,SAAW,SAErI,cAACjF,EAAA,EAAD,CAAKC,GAAI,CAACmK,OAAQ,MAClB,cAACC,GAAA,EAAD,IACA,cAACrK,EAAA,EAAD,CAAKC,GAAI,CAACmK,OAAQ,QA/CZnF,aAuD9B,eAACI,GAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QAzFL,SAAC+F,GACZnH,QAAQC,IAAI,iBAAkBsL,GAC9B7D,EAAc,2BAAKD,GAAN,IAAkBtL,MAAOA,EAAQC,MAAOmP,EAAelM,QAAO,SAACC,EAAM4H,GAAP,OAAiB5H,EAAKnD,MAAMwN,OAAS,QAChH/B,GAAa,GACbpC,IACAxF,QAAQC,IAAIwH,IAoFqBmC,UAAW2B,EAAelM,QAAO,SAAAC,GAAI,OAAIA,EAAKnD,MAAMwN,OAAS,KAAGA,OAAzF,yBC/IVU,I,OAAOC,aAAOrI,IAAPqI,EAAY,gBAAGC,EAAH,EAAGA,MAAH,mBAAC,eACnBA,EAAMC,WAAWC,SADC,IAErBpH,UAAW,OACXqH,QAAS,OACTC,WAAY,SACZrJ,MAAOiJ,EAAMgC,QAAQC,KAAKC,gBAGxBC,GAAY,SAACzO,GACf,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KACAzF,QAAQC,IAAI,oBAAqBwG,GAMjC,OACI,sBAAKzF,UAAU,0CAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,+BAAO/C,EAAM6L,cAAc5N,cAAcC,QACzC,sBAAM6E,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QATN,WAChBqE,GAAQ,WAWJ,qBAAKzE,UAAU,sBAAf,SACK/C,EAAM6L,cAAc5N,cAAcE,MAAM4K,KAAI,SAAC1H,EAAM4H,GAChD,OACI,sBAAiBlG,UAAU,iBAA3B,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAMA,UAAU,mCAAhB,SAAoD1B,EAAKnD,QACzD,sBAAM6E,UAAU,wCAAhB,SAAyD1B,EAAK/C,gBAElE,eAACsO,EAAA,EAAD,CACIC,WAAS,EACTC,eAAe,QACfJ,WAAW,SACXK,WAAY,GACZC,cAAe,CAAEC,GAAI,GAAKC,GAAI,GAAKC,GAAI,IAL3C,UAMI,cAACP,EAAA,EAAD,CAAMvL,MAAI,EAAC8L,GAAI,EAAGF,GAAI,EAAGH,eAAe,QAAQJ,WAAW,SAA3D,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAmB3J,UAAU,wBAC7B,cAACiB,EAAA,EAAD,CAAKjB,UAAU,sBAAsB2B,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,IAAhE,SAAuE/L,EAAK9C,YAGpF,cAACqO,EAAA,EAAD,CAAMvL,MAAI,EAAC8L,GAAI,EAAGF,GAAI,EAAGH,eAAe,QAAQJ,WAAW,SAA3D,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAY3J,UAAU,wBACtB,cAACiB,EAAA,EAAD,CAAKjB,UAAU,sBAAsB2B,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,IAAhE,SAAuE/L,EAAK7C,gBApBlFyK,QA6BtB,cAAC,GAAD,CAAiBT,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,oBAK5J6G,OAAMC,KAAK0J,I,wECoIZC,GA9LU,SAAC1O,GACxB,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS0C,EAAWtL,OAA9C,mBAAOA,EAAP,KAAc0L,EAAd,KACMI,EAAWC,cACjB,EAA8CnD,mBAAS0C,EAAWrL,OAAlE,mBAAOwQ,EAAP,KAAwBC,EAAxB,KAqBMC,EAAgB,SAAC3F,EAAOD,EAAOvB,GACnC,IAAMoH,EAAW5F,EAAMuB,OAAO9K,MAC1BoP,EAAkB,YAAOJ,GAC7BI,EAAmB9F,GAAnB,2BACK8F,EAAmB9F,IADxB,kBAEGvB,EAAWoH,IAEdF,EAAmBG,IA8BfxH,EAAc,WAClBvH,EAAMwH,SAAQ,IAkBhB,OAfA0C,qBAAU,WACJR,IACF3H,QAAQC,IAAI,QAAShC,GACrBgK,EACE7D,GAAwB,CACtBxK,KAAMqE,EAAMmK,cACZ/D,OAAQpG,EAAMoK,gBACd1E,KAAM8D,KAGVG,GAAa,MAGd,CAACH,IAGF,eAAClB,GAAA,EAAD,CACEpD,SAAS,KACTqD,WAAW,EACXC,KAAMxI,EAAMwI,KACZC,QAASlB,EAJX,UAME,cAACmB,GAAA,EAAD,UACE,sBAAK3F,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAACsH,EAAA,EAAD,CACE9B,WAAS,EACT+B,aAAa,MACbC,SA1EU,SAACrB,GACrB,IAAMsB,EAAStB,EAAMuB,OAAO9K,MAC5BiK,EAASY,IAyEC7K,MAAOzB,EACPkF,QAAQ,eAIZ,qBAAKL,UAAU,oBAAf,SACG4L,EAAgB5F,KAAI,SAAC1H,EAAM4H,GAC1B,OACE,gCACE,sBAAKlG,UAAU,cAAf,UACE,gCACE,cAACsH,EAAA,EAAD,CACEzK,MAAM,WACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OACR2F,EAAc3F,EAAOD,EAAO,oBAE9BtJ,MAAO0B,EAAK3C,gBACZyM,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,KACjCnI,KAAK,UAGP,cAACoH,EAAA,EAAD,CACEzK,MAAM,UACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OACR2F,EAAc3F,EAAOD,EAAO,YAE9BtJ,MAAO0B,EAAK1C,QACZwM,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,KACjCnI,KAAK,UAGP,cAACoH,EAAA,EAAD,CACEzK,MAAM,mBACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OACR2F,EAAc3F,EAAOD,EAAO,SAE9BtJ,MAAO0B,EAAK9C,KACZ4M,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,KACjCnI,KAAK,UAGP,cAACoH,EAAA,EAAD,CACEzK,MAAM,WACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OACR2F,EAAc3F,EAAOD,EAAO,aAE9BtJ,MAAO0B,EAAKzC,SACZuM,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,KACjCnI,KAAK,UAIP,cAAC,KAAD,CACA+L,aAAc3N,EAAKxC,kBACnBoQ,QAASlS,EACTuP,MAAO,OACP/B,SAAU,SAAC2E,GAAD,OAxHN,SAACA,EAAKjG,GAC5B,IAAI8F,EAAkB,YAAOJ,GAC7BI,EAAmB9F,GAAnB,2BACK8F,EAAmB9F,IADxB,IAEEpK,kBAAmBqQ,IAErBN,EAAmBG,GAmHCI,CAAgBD,EAAKjG,SAGzB,cAAC,KAAD,CACE9F,QAAS,SAAC+F,GAAD,OApHL,SAACA,EAAOD,GAC9B,IAAI8F,EAAkB,YAAOJ,GAC7BI,EAAmBxD,OAAOtC,EAAQ,EAAG,EAAG,CACtCvK,gBAAiB,GACjBC,QAAS,GACTJ,KAAM,GACNK,SAAU,GACVC,kBAAmB,KAErB+P,EAAmBG,GA2GmBK,CAAgBlG,EAAOD,IAC3ClG,UAAU,kBAEZ,cAAC,KAAD,CACEI,QAAS,SAAC+F,GAAD,OA5GF,SAACA,EAAOD,GACjC,IAAI8F,EAAkB,YAAOJ,GAC7BI,EAAmBxD,OAAOtC,EAAO,GACjC2F,EAAmBG,GAyGmBM,CAAmBnG,EAAOD,IAC9ClG,UAAS,2BACG,IAAVkG,EAAc,SAAW,SAI/B,cAACjF,EAAA,EAAD,CAAKC,GAAI,CAAEmK,OAAQ,MACnB,cAACC,GAAA,EAAD,IACA,cAACrK,EAAA,EAAD,CAAKC,GAAI,CAAEmK,OAAQ,QArEXnF,aA6EpB,eAACI,GAAA,EAAD,WACE,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QAhLC,SAAC+F,GACdnH,QAAQC,IAAI,kBAAmB2M,GAC/BlF,EAAc,2BACTD,GADQ,IAEXtL,MAAOA,EACPC,MAAOwQ,EAAgBvN,QACrB,SAACC,EAAM4H,GAAP,OAAiB5H,EAAK3C,gBAAgBgN,OAAS,QAGnD/B,GAAa,GACbpC,IACAxF,QAAQC,IAAIwH,IAqKiBmC,UAAWgD,EAAgBvN,QAAO,SAAAC,GAAI,OAAIA,EAAK3C,gBAAgBgN,OAAS,KAAGA,OAApG,yBC1LFU,GAAOC,aAAOrI,IAAPqI,EAAY,gBAAGC,EAAH,EAAGA,MAAH,mBAAC,eACnBA,EAAMC,WAAWC,SADC,IAErBpH,UAAW,OACXqH,QAAS,OACTC,WAAY,cAGV4C,GAAa,SAACtP,GAChB,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KAEAzF,QAAQC,IAAI,qBAAsBwG,GAMlC,OACI,sBAAKzF,UAAU,2CAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,+BAAO/C,EAAM6L,cAAc5N,cAAcC,QACzC,sBAAM6E,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QATN,WAChBqE,GAAQ,WAWJ,qBAAKzE,UAAU,uBAAf,SACC/C,EAAM6L,cAAc5N,cAAcE,MAAM4K,KAAI,SAAC1H,EAAM4H,GAChD,OACI,sBAAiBlG,UAAU,kBAA3B,UACI,sBAAMA,UAAU,4DAAhB,SAA6E1B,EAAK3C,kBAClF,eAACkO,EAAA,EAAD,CACIC,WAAS,EACTC,eAAe,QACfJ,WAAW,SACXK,WAAY,GACZC,cAAe,CAAEC,GAAI,GAAKC,GAAI,GAAKC,GAAI,IAL3C,UAMI,cAACP,EAAA,EAAD,CAAMvL,MAAI,EAAC8L,GAAI,EAAGF,GAAI,EAAtB,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAc7B,SAAS,OACvB,cAACpH,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,GAAhC,SAAqC/L,EAAK1C,eAGlD,cAACiO,EAAA,EAAD,CAAMvL,MAAI,EAAC8L,GAAI,EAAGF,GAAI,EAAtB,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAmB7B,SAAS,OAC5B,cAACpH,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,GAAhC,SAAqC/L,EAAK9C,YAGlD,cAACqO,EAAA,EAAD,CAAMvL,MAAI,EAAC8L,GAAI,EAAGF,GAAI,EAAtB,SACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAgB7B,SAAS,OACzB,cAACpH,EAAA,EAAD,CAAKU,UAAU,OAAOT,GAAI,CAAEmJ,GAAI,GAAhC,SAAqC/L,EAAKzC,mBAItD,qBAAKmE,UAAU,mCAAmCwM,wBAAyB,CAACC,OAAQnO,EAAKxC,uBA3BnFoK,QAmClB,cAAC,GAAD,CAAkBT,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,oBAK9J6G,OAAMC,KAAKuK,I,oBCmGXG,GArKS,SAACzP,GACrB,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS0C,EAAWtL,OAA9C,mBAAOA,EAAP,KAAc0L,EAAd,KACA,EAA0C9C,mBAAS0C,EAAWrL,OAA9D,mBAAOuR,EAAP,KAAsBC,EAAtB,KACA,EAA8C7I,mBAAS0C,EAAWpK,iBAAlE,mBAAOA,EAAP,KAAwBwQ,EAAxB,KACA,EAA8D9I,mBAAS0C,EAAWnK,yBAAlF,mBAAOA,EAAP,KAAgCwQ,EAAhC,KACM7F,EAAWC,cA+DX1C,EAAc,WAChBvH,EAAMwH,SAAQ,IAGlB0C,qBAAU,WACFR,IACAM,EAAS7D,GAAwB,CAAExK,KAAMqE,EAAMmK,cAAe/D,OAAQpG,EAAMoK,gBAAiB1E,KAAM8D,KACnGG,GAAa,MAGlB,CAACH,IAEJ,IAAMsG,EAAsB,SAACC,GACzB,IAAIb,EAAM,GACV,OAAQa,GAgBJ,QACIb,EAAM,GACN,MAbJ,IAAK,eACDA,EAAM,GACN,MAEJ,IAAK,aACDA,EAAM,GACN,MAEJ,IAAK,SACDA,EAAM,IAMd,OAAOA,GAGX,OACI,eAAC5G,GAAA,EAAD,CAAQpD,SAAS,KAAKqD,WAAW,EAAMC,KAAMxI,EAAMwI,KAAMC,QAASlB,EAAlE,UACI,cAACmB,GAAA,EAAD,UACI,sBAAK3F,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAACsH,EAAA,EAAD,CAAW9B,WAAS,EAAC+B,aAAa,MAAMC,SAvGtC,SAACrB,GACnB,IAAMsB,EAAStB,EAAMuB,OAAO9K,MAC5BiK,EAASY,IAqGwE7K,MAAOzB,EAAOkF,QAAQ,eAG3F,sBAAKL,UAAU,sBAAf,UACI,qDACsB,cAAC2H,GAAA,EAAD,CAAQ9K,MAAM,cAAc2K,SAAW,SAACrB,GAAD,OAvGjD,SAACA,GAC7B0G,EAAmB1G,EAAMuB,OAAOE,SAsGwDqF,CAAwB9G,IAAQyB,QAASvL,OAEjH,8DAC+B,cAACsL,GAAA,EAAD,CAAQ9K,MAAM,uBAAuB2K,SAAU,SAACrB,GAAD,OAtG1D,SAACA,GACrC2G,EAA2B3G,EAAMuB,OAAOE,SAqGiEsF,CAAgC/G,IAAQyB,QAAStL,UAI9I,qBAAK0D,UAAU,oBAAf,SACK2M,EAAc3G,KAAI,SAAC1H,EAAM4H,GACtB,OACI,sBAAKlG,UAAU,cAAf,UACI,cAACsH,EAAA,EAAD,CACIzK,MAAO,WAAaqJ,EAAQ,GAC5BhF,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OA7GrB,SAACA,EAAOD,GAC7B,IAAIiH,EAAS,YAAOR,GACpBQ,EAAUjH,GAAS,CAAEzJ,SAAU0J,EAAMuB,OAAO9K,MAAOL,YAAa,YAChEqQ,EAAiBO,GA0GoCC,CAAiBjH,EAAOD,IAC7CtJ,MAAO0B,EAAK7B,SACZ,WAAUyJ,EACVhG,KAAK,UAET,sBAAKF,UAAU,gBAAf,UACK1B,EAAK/B,YACN,cAAC8Q,GAAA,EAAD,CACI,aAAW,cACXzQ,MAAQmQ,EAAoBzO,EAAK/B,aACjC+Q,KAAM,GACNC,OAAK,EACLC,IAAK,GACLC,IAAK,IACLjG,SAAU,SAACrB,GAAD,OA1GtB,SAACA,EAAOD,GAChC,IAAIiH,EAAS,YAAOR,GACpB,OAAQxG,EAAMuB,OAAO9K,OAgBjB,QACIuQ,EAAUjH,GAAS,CAACzJ,SAAU0Q,EAAUjH,GAAOzJ,SAAUF,YAAa,YACtE,MAbJ,KAAK,GACD4Q,EAAUjH,GAAS,CAACzJ,SAAU0Q,EAAUjH,GAAOzJ,SAAUF,YAAa,gBACtE,MAEJ,KAAK,GACD4Q,EAAUjH,GAAS,CAACzJ,SAAU0Q,EAAUjH,GAAOzJ,SAAUF,YAAa,cACtE,MAEJ,KAAK,IACD4Q,EAAUjH,GAAS,CAACzJ,SAAU0Q,EAAUjH,GAAOzJ,SAAUF,YAAa,UAM9EqQ,EAAiBO,GAoFwCO,CAAoBvH,EAAOD,SAGxD,cAAC,KAAD,CAAe9F,QAAS,SAAC+F,GAAD,OAxHlC,SAACA,EAAOD,GAC1B,IAAIiH,EAAS,YAAOR,GACpBQ,EAAU3E,OAAOtC,EAAQ,EAAG,EAAG,CAAEzJ,SAAU,KAC3CmQ,EAAiBO,GAqH8CQ,CAAcxH,EAAOD,IAAQlG,UAAU,kBAC1E,cAAC,KAAD,CAAmBI,QAAS,SAAC+F,GAAD,OApHnC,SAACA,EAAOD,GAC7B,IAAIiH,EAAS,YAAOR,GACpBQ,EAAU3E,OAAOtC,EAAO,GACxB0G,EAAiBO,GAiHkDS,CAAiBzH,EAAOD,IAAQlG,UAAS,2BAAgC,IAAVkG,EAAc,SAAW,QAtBjGA,aA8BtD,eAACI,GAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QA/FL,SAAC+F,GACZO,EAAc,2BAAKD,GAAN,IAAkBtL,MAAOA,EAAOkB,gBAAiBA,EAAiBC,wBAAyBA,EAAyBlB,MAAOuR,EAActO,QAAO,SAACC,EAAM4H,GAAP,OAAiB5H,EAAK7B,SAASkM,OAAS,QACrMnE,IACAoC,GAAa,IA4FoBgC,UAAW+D,EAActO,QAAO,SAAAC,GAAI,OAAIA,EAAK7B,SAASkM,OAAS,KAAGA,OAA3F,yBCpKVkF,I,OAAY,SAAC5Q,GACjB,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KACAzF,QAAQC,IAAI,oBAAqBwG,GAEjC,IAIMqI,EAA6B,SAACvR,GAClC,IAAI4P,EAAM,GACV,OAAQ5P,GAgBJ,QACI4P,EAAM,GACN,MAbJ,IAAK,eACDA,EAAM,GACN,MAEJ,IAAK,aACDA,EAAM,GACN,MAEJ,IAAK,SACDA,EAAM,IAMd,OAAOA,GAET,OACE,sBAAKnM,UAAU,yCAAf,UACE,sBAAKA,UAAU,uBAAf,UACI,+BAAO/C,EAAM6L,cAAc5N,cAAcC,QACzC,sBAAM6E,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAjCF,WAChBqE,GAAQ,WAmCPxH,EAAM6L,cAAc5N,cAAcE,MAAM4K,KAAI,SAAC1H,EAAM4H,GAClD,OACE,sBAAiBlG,UAAU,mBAA3B,UACA,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,iBAAf,SAAiC1B,EAAK7B,WACtC,sBAAKuD,UAAS,yBAAoB/C,EAAM6L,cAAc5N,cAAcmB,gBAAkB,GAAK,UAA3F,gBAA2GiC,EAAK/B,kBAEpH,qBAAKyD,UAAU,oBAAf,SACE,cAAC+N,GAAA,EAAD,CAAgB/N,UAAW/C,EAAM6L,cAAc5N,cAAcoB,wBAA0B,GAAK,SAAU+D,QAAQ,cAAczD,MAAQkR,EAA2BxP,EAAK/B,mBAN5J2J,MAad,cAAC,GAAD,CAAiBT,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,qBAKtJ6G,OAAMC,KAAK6L,ICuDZG,GA7GM,SAAC/Q,GACpB,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS0C,EAAWtL,OAA9C,mBAAOA,EAAP,KAAc0L,EAAd,KACMI,EAAWC,cACjB,EAAgEnD,mBAAS0C,EAAWrL,OAApF,mBAAO6S,EAAP,KAAiCC,EAAjC,KA+BM1J,EAAc,WAClBvH,EAAMwH,SAAQ,IAkBhB,OAfA0C,qBAAU,WACJR,IACF3H,QAAQC,IAAI,QAAShC,GACrBgK,EACE7D,GAAwB,CACtBxK,KAAMqE,EAAMmK,cACZ/D,OAAQpG,EAAMoK,gBACd1E,KAAM8D,KAGVG,GAAa,MAGd,CAACH,IAGF,eAAClB,GAAA,EAAD,CACEpD,SAAS,KACTqD,WAAW,EACXC,KAAMxI,EAAMwI,KACZC,QAASlB,EAJX,UAME,cAACmB,GAAA,EAAD,UACE,sBAAK3F,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAACsH,EAAA,EAAD,CACE9B,WAAS,EACT+B,aAAa,MACbC,SA/CU,SAACrB,GACrB,IAAMsB,EAAStB,EAAMuB,OAAO9K,MAC5BiK,EAASY,IA8CC7K,MAAOzB,EACPkF,QAAQ,eAIZ,qBAAKL,UAAU,oBAAf,SACGiO,EAAyBjI,KAAI,SAAC1H,EAAM4H,GACnC,OACE,gCACE,qBAAKlG,UAAU,cAAf,SACE,8BAEA,cAAC,KAAD,CACEiM,aAAc3N,EAAKjD,QACnB6Q,QAASlS,EACTuP,MAAO,OACP/B,SAAU,SAAC2E,GAAD,OA3DR,SAACA,EAAKjG,EAAOvB,GACjC,IAAMoH,EAAWI,EACbgC,EAA2B,YAAOF,GACtCE,EAA4BjI,GAA5B,2BACKiI,EAA4BjI,IADjC,kBAEGvB,EAAWoH,IAEdmC,EAA4BC,GAqDRrC,CAAcK,EAAKjG,EAAO,kBAIhC,cAACjF,EAAA,EAAD,CAAKC,GAAI,CAAEmK,OAAQ,MACnB,cAACC,GAAA,EAAD,IACA,cAACrK,EAAA,EAAD,CAAKC,GAAI,CAAEmK,OAAQ,QAfXnF,aAuBpB,eAACI,GAAA,EAAD,WACE,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QA/FC,SAAC+F,GACdnH,QAAQC,IAAI,2BAA4BgP,GACxCvH,EAAc,2BACTD,GADQ,IAEXtL,MAAOA,EACPC,MAAO6S,EAAyB5P,QAC9B,SAACC,EAAM4H,GAAP,OAAiB5H,EAAKjD,QAAQsN,OAAS,QAG3C/B,GAAa,GACbpC,IACAxF,QAAQC,IAAIwH,IAoFiBmC,UAAWqF,EAAyB5P,QAAO,SAAAC,GAAI,OAAIA,EAAKjD,QAAQsN,OAAS,KAAGA,OAArG,yBC5GFyF,I,OAAsB,SAACnR,GAC3B,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KACAzF,QAAQC,IAAI,8BAA+BwG,GAM3C,OAIF,sBAAKzF,UAAU,qDAAf,UACY,sBAAKA,UAAU,uBAAf,UACI,+BAAO/C,EAAM6L,cAAc5N,cAAcC,QACzC,sBAAM6E,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAZT,WACjBqE,GAAQ,WAeA,qBAAKzE,UAAU,iCAAf,SACK/C,EAAM6L,cAAc5N,cAAcE,MAAM4K,KAAI,SAAC1H,EAAM4H,GAChD,OACI,qBAAKlG,UAAU,4BAAf,SACK,sBAAMA,UAAU,kDAAkDwM,wBAAyB,CAACC,OAAQnO,EAAKjD,YAD9D6K,QAQ5D,cAACmI,GAAD,CAA2B5I,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,qBAKtK6G,OAAMC,KAAKoM,ICuEZE,GAtGM,SAACrR,GAClB,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS0C,EAAWtL,OAA9C,mBAAOA,EAAP,KAAc0L,EAAd,KACA,EAAoC9C,mBAAS0C,EAAWrL,OAAxD,mBAAOmT,EAAP,KAAmBC,EAAnB,KACA,EAA8BzK,mBAAS0C,EAAWxK,SAAlD,mBAAOA,EAAP,KAAgBwS,EAAhB,KACA,EAA4B1K,mBAAS0C,EAAWzK,QAAhD,mBAAOA,EAAP,KAAe0S,EAAf,KACMzH,EAAWC,cAuCX1C,EAAc,WAChBvH,EAAMwH,SAAQ,IAWlB,OARA0C,qBAAU,WACFR,IACAM,EAAS7D,GAAwB,CAAExK,KAAMqE,EAAMmK,cAAe/D,OAAQpG,EAAMoK,gBAAiB1E,KAAM8D,KACnGG,GAAa,MAGlB,CAACH,IAGA,eAAClB,GAAA,EAAD,CAAQpD,SAAS,KAAKqD,WAAW,EAAMC,KAAMxI,EAAMwI,KAAMC,QAASlB,EAAlE,UACI,cAACmB,GAAA,EAAD,UACI,sBAAK3F,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAACsH,EAAA,EAAD,CAAW9B,WAAS,EAAC+B,aAAa,MAAMC,SAtDtC,SAACrB,GACnB,IAAMsB,EAAStB,EAAMuB,OAAO9K,MAC5BiK,EAASY,IAoDwE7K,MAAOzB,EAAOkF,QAAQ,eAE3F,sBAAKL,UAAU,sBAAf,UACI,4CACa,cAAC2H,GAAA,EAAD,CAAQ9K,MAAM,UAAU2K,SArDjC,SAACrB,GACrBsI,EAAWtI,EAAMuB,OAAOE,UAoDwDA,QAAS3L,OAEzE,2CACY,cAAC0L,GAAA,EAAD,CAAQ9K,MAAM,SAAS2K,SApDhC,SAACrB,GACpBuI,EAAUvI,EAAMuB,OAAOE,UAmDsDA,QAAS5L,UAG1E,qBAAKgE,UAAU,oBAAf,SACKuO,EAAWvI,KAAI,SAAC1H,EAAM4H,GACnB,OACI,sBAAKlG,UAAU,cAAf,UACI,cAACsH,EAAA,EAAD,CACIzK,MAAO,WAAaqJ,EAAQ,GAC5BhF,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OA1DxB,SAACA,EAAOD,GAC1B,IAAI8B,EAAM,YAAOuG,GACjBvG,EAAO9B,GAAS,CAAE/K,MAAOgL,EAAMuB,OAAO9K,OACtC4R,EAAcxG,GAuDuC2G,CAAcxI,EAAOD,IAC1CtJ,MAAO0B,EAAKnD,MACZ,WAAU+K,EACVhG,KAAK,UAET,cAAC,KAAD,CAAeE,QAAS,SAAC+F,GAAD,OAzDrC,SAACA,EAAOD,GACvB,IAAI8B,EAAM,YAAOuG,GACjBvG,EAAOQ,OAAOtC,EAAQ,EAAG,EAAG,CAAE/K,MAAO,KACrCqT,EAAcxG,GAsDiD4G,CAAWzI,EAAOD,IAAQlG,UAAU,kBACvE,cAAC,KAAD,CAAmBI,QAAS,SAAC+F,GAAD,OArDtC,SAACA,EAAOD,GAC1B,IAAI8B,EAAM,YAAOuG,GACjBvG,EAAOQ,OAAOtC,EAAO,GACrBsI,EAAcxG,GAkDqD6G,CAAc1I,EAAOD,IAAQlG,UAAS,2BAAgC,IAAVkG,EAAc,SAAW,QAV9FA,aAkBtD,eAACI,GAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QAzDL,SAAC+F,GACZO,EAAc,2BAAKD,GAAN,IAAkBxK,QAASA,EAASD,OAAQA,EAAQb,MAAOA,EAAOC,MAAOmT,EAAWlQ,QAAO,SAACC,EAAM4H,GAAP,OAAiB5H,EAAKnD,MAAMwN,OAAS,QAC7I/B,GAAa,GACbpC,IACAxF,QAAQC,IAAIwH,IAqDqBmC,UAAW2F,EAAWlQ,QAAO,SAAAC,GAAI,OAAIA,EAAKnD,MAAMwN,OAAS,KAAGA,OAArF,yBCtGVmG,I,OAAS,SAAC7R,GACZ,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KACAzF,QAAQC,IAAI,iBAAkBwG,GAO9B,OACI,sBAAKzF,UAAU,uCAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,+BAAO/C,EAAM6L,cAAc5N,cAAcC,QACzC,sBAAM6E,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAVN,WAChBqE,GAAQ,WAaJ,qBAAKzE,UAAU,mBAAf,SACC/C,EAAM6L,cAAc5N,cAAcE,MAAM4K,KAAI,SAAC1H,EAAM4H,GAChD,OACI,cAAC6I,EAAA,EAAD,CAAkBlS,MAAOyB,EAAKnD,MAAO6E,UAAS,0CAAqC/C,EAAM6L,cAAc5N,cAAce,QAAU,GAAK,cAAgBoE,QAASpD,EAAM6L,cAAc5N,cAAcc,OAAS,SAAW,YAAxMkK,QAMnB,cAAC,GAAD,CAAcT,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,qBAK1J6G,OAAMC,KAAK8M,ICgGXE,GA1HkB,SAAC/R,GAC9B,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS0C,EAAWtL,OAA9C,mBAAOA,EAAP,KAAc0L,EAAd,KACA,EAAsD9C,mBAAS0C,EAAWrL,OAA1E,mBAAO6T,EAAP,KAA4BC,EAA5B,KACA,EAA8CnL,mBAAS0C,EAAWpK,iBAAlE,mBAAOA,EAAP,KAAwBwQ,EAAxB,KACA,EAA8D9I,mBAAS0C,EAAWnK,yBAAlF,mBAAOA,EAAP,KAAgCwQ,EAAhC,KACM7F,EAAWC,cA4CX1C,EAAc,WAChBvH,EAAMwH,SAAQ,IAYlB,OATA0C,qBAAU,WACFR,IACAM,EAAS7D,GAAwB,CAAExK,KAAMqE,EAAMmK,cAAe/D,OAAQpG,EAAMoK,gBAAiB1E,KAAM8D,KACnGG,GAAa,MAGlB,CAACH,IAIA,eAAClB,GAAA,EAAD,CAAQpD,SAAS,KAAKqD,WAAW,EAAMC,KAAMxI,EAAMwI,KAAMC,QAASlB,EAAlE,UACI,cAACmB,GAAA,EAAD,UACI,sBAAK3F,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAACsH,EAAA,EAAD,CAAW9B,WAAS,EAAC+B,aAAa,MAAMC,SA5DtC,SAACrB,GACnB,IAAMsB,EAAStB,EAAMuB,OAAO9K,MAC5BiK,EAASY,IA0DwE7K,MAAOzB,EAAOkF,QAAQ,eAG3F,sBAAKL,UAAU,sBAAf,UACI,qDACsB,cAAC2H,GAAA,EAAD,CAAQ9K,MAAM,cAAc2K,SAAW,SAACrB,GAAD,OA5DjD,SAACA,GAC7B0G,EAAmB1G,EAAMuB,OAAOE,SA2DwDqF,CAAwB9G,IAAQyB,QAASvL,OAEjH,8DAC+B,cAACsL,GAAA,EAAD,CAAQ9K,MAAM,uBAAuB2K,SAAU,SAACrB,GAAD,OA3D1D,SAACA,GACrC2G,EAA2B3G,EAAMuB,OAAOE,SA0DiEsF,CAAgC/G,IAAQyB,QAAStL,UAI9I,qBAAK0D,UAAU,oBAAf,SACKiP,EAAoBjJ,KAAI,SAAC1H,EAAM4H,GAC5B,OACI,sBAAKlG,UAAU,cAAf,UACI,cAACsH,EAAA,EAAD,CACIzK,MAAO,WAAaqJ,EAAQ,GAC5BhF,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OAlEV,SAACA,EAAOD,GACxC,IAAIiJ,EAAsB,YAAOF,GACjCE,EAAuBjJ,GAAS,CAAE/K,MAAOgL,EAAMuB,OAAO9K,MAAOL,YAAa,GAC1E2S,EAAuBC,GA+D8BC,CAA4BjJ,EAAOD,IACxDtJ,MAAO0B,EAAKnD,MACZ,WAAU+K,EACVhG,KAAK,UAET,sBAAKF,UAAU,gBAAf,UACK1B,EAAK/B,YACN,cAAC8Q,GAAA,EAAD,CACI,aAAW,cACXzQ,MAAQyS,OAAO/Q,EAAK/B,aACpB+Q,KAAM,GACNC,OAAK,EACLC,IAAK,EACLC,IAAK,IACLjG,SAAU,SAACrB,GAAD,OA/DtB,SAACA,EAAOD,GAChC,IAAIiJ,EAAsB,YAAOF,GACjCE,EAAuBjJ,GAAS,CAAC/K,MAAOgU,EAAuBjJ,GAAO/K,MAAOoB,YAAa4J,EAAMuB,OAAO9K,OACvGsS,EAAuBC,GA4DkCzB,CAAoBvH,EAAOD,SAGxD,cAAC,KAAD,CAAe9F,QAAS,SAAC+F,GAAD,OA7EpC,SAACA,EAAOD,GACxB,IAAIiJ,EAAsB,YAAOF,GACjCE,EAAuB3G,OAAOtC,EAAQ,EAAG,EAAG,CAAE/K,MAAO,GAAIoB,YAAa,IACtE2S,EAAuBC,GA0EwCG,CAAYnJ,EAAOD,IAAQlG,UAAU,kBACxE,cAAC,KAAD,CAAmBI,QAAS,SAAC+F,GAAD,OAzErC,SAACA,EAAOD,GAC3B,IAAIiJ,EAAsB,YAAOF,GACjCE,EAAuB3G,OAAOtC,EAAO,GACrCgJ,EAAuBC,GAsE4CI,CAAepJ,EAAOD,IAAQlG,UAAS,2BAAgC,IAAVkG,EAAc,SAAW,QAtB/FA,aA8BtD,eAACI,GAAA,EAAD,WACI,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QAvEL,SAAC+F,GACZO,EAAc,2BAAKD,GAAN,IAAkBtL,MAAOA,EAAOkB,gBAAiBA,EAAiBC,wBAAyBA,EAAyBlB,MAAO6T,EAAoB5Q,QAAO,SAACC,EAAM4H,GAAP,OAAiB5H,EAAKnD,MAAMwN,OAAS,QACxM/B,GAAa,GACbpC,KAoEiCoE,UAAWqG,EAAoB5Q,QAAO,SAAAC,GAAI,OAAIA,EAAKnD,MAAMwN,OAAS,KAAGA,OAA9F,yBCzHV6G,I,OAAqB,SAACvS,GAC1B,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KACAzF,QAAQC,IAAI,kCAAmCwG,GAM/C,OACE,sBAAKzF,UAAU,yCAAf,UACE,sBAAKA,UAAU,uBAAf,UACI,+BAAO/C,EAAM6L,cAAc5N,cAAcC,QACzC,sBAAM6E,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QATF,WAChBqE,GAAQ,WAWPxH,EAAM6L,cAAc5N,cAAcE,MAAM4K,KAAI,SAAC1H,EAAM4H,GAClD,OACE,sBAAiBlG,UAAW/C,EAAM6L,cAAc5N,cAAcoB,wBAA0B,gBAAkB,2BAA1G,UACA,sBAAK0D,UAAU,eAAf,UACI,qBAAKA,UAAU,cAAf,SAA8B1B,EAAKnD,QACnC,sBAAK6E,UAAS,2BAAsB/C,EAAM6L,cAAc5N,cAAcmB,gBAAkB,GAAK,UAA7F,gBAA6GiC,EAAK/B,kBAEtH,qBAAKyD,UAAU,iBAAf,SACE,cAAC+N,GAAA,EAAD,CAAgB/N,UAAW/C,EAAM6L,cAAc5N,cAAcoB,wBAA0B,GAAK,SAAU+D,QAAQ,cAAczD,MAAOyS,OAAO/Q,EAAK/B,mBANvI2J,MAYhB,cAAC,GAAD,CAA0BT,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,qBAM7J6G,OAAMC,KAAKwN,ICoHZxB,GApJM,SAAC/Q,GACpB,MAAoC8G,mBAAS9G,EAAMwJ,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAiC3C,oBAAS,GAA1C,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS0C,EAAWtL,OAA9C,mBAAOA,EAAP,KAAc0L,EAAd,KACMI,EAAWC,cACjB,EAAsCnD,mBAAS0C,EAAWrL,OAA1D,mBAAOqU,EAAP,KAAoBC,EAApB,KAqBM5D,EAAgB,SAAC3F,EAAOD,EAAOvB,GACnC,IAAMoH,EAAW5F,EAAMuB,OAAO9K,MAC1B+S,EAAc,YAAOF,GACzBE,EAAezJ,GAAf,2BACKyJ,EAAezJ,IADpB,kBAEGvB,EAAWoH,IAEd2D,EAAeC,IAkBXnL,EAAc,WAClBvH,EAAMwH,SAAQ,IAkBhB,OAfA0C,qBAAU,WACJR,IACF3H,QAAQC,IAAI,QAAShC,GACrBgK,EACE7D,GAAwB,CACtBxK,KAAMqE,EAAMmK,cACZ/D,OAAQpG,EAAMoK,gBACd1E,KAAM8D,KAGVG,GAAa,MAGd,CAACH,IAGF,eAAClB,GAAA,EAAD,CACEpD,SAAS,KACTqD,WAAW,EACXC,KAAMxI,EAAMwI,KACZC,QAASlB,EAJX,UAME,cAACmB,GAAA,EAAD,UACE,sBAAK3F,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAACsH,EAAA,EAAD,CACE9B,WAAS,EACT+B,aAAa,MACbC,SA9DU,SAACrB,GACrB,IAAMsB,EAAStB,EAAMuB,OAAO9K,MAC5BiK,EAASY,IA6DC7K,MAAOzB,EACPkF,QAAQ,eAIZ,qBAAKL,UAAU,oBAAf,SACGyP,EAAYzJ,KAAI,SAAC1H,EAAM4H,GACtB,OACE,gCACE,sBAAKlG,UAAU,cAAf,UACE,gCACE,cAACsH,EAAA,EAAD,CACEzK,MAAM,kBACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OACR2F,EAAc3F,EAAOD,EAAO,mBAE9BtJ,MAAO0B,EAAKpC,eACZkM,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,KACjCnI,KAAK,UAGP,cAACoH,EAAA,EAAD,CACEzK,MAAM,kBACNqE,GAAI,CAAE2G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBP,SAAU,SAACrB,GAAD,OACR2F,EAAc3F,EAAOD,EAAO,aAE9BtJ,MAAO0B,EAAKnC,SACZiM,WAAY,CAAEtD,MAAO,CAAEuD,SAAU,KACjCnI,KAAK,aAIT,cAAC,KAAD,CACEE,QAAS,SAAC+F,GAAD,OAnFT,SAACA,EAAOD,GAC1B,IAAIyJ,EAAc,YAAOF,GACzBE,EAAenH,OAAOtC,EAAQ,EAAG,EAAG,CAChChK,eAAgB,GAChBC,SAAU,KAEduT,EAAeC,GA6EuBC,CAAYzJ,EAAOD,IACvClG,UAAU,kBAEZ,cAAC,KAAD,CACEI,QAAS,SAAC+F,GAAD,OA9EF,SAACA,EAAOD,GACjC,IAAIyJ,EAAc,YAAOF,GACzBE,EAAenH,OAAOtC,EAAO,GAC7BwJ,EAAeC,GA2EuBrD,CAAmBnG,EAAOD,IAC9ClG,UAAS,2BACG,IAAVkG,EAAc,SAAW,SAI/B,cAACjF,EAAA,EAAD,CAAKC,GAAI,CAAEmK,OAAQ,MACnB,cAACC,GAAA,EAAD,IACA,cAACrK,EAAA,EAAD,CAAKC,GAAI,CAAEmK,OAAQ,QAvCXnF,aA+CpB,eAACI,GAAA,EAAD,WACE,cAACnG,EAAA,EAAD,CAAQC,QAASoE,EAAjB,oBACA,cAACrE,EAAA,EAAD,CAAQC,QAtIC,SAAC+F,GACdnH,QAAQC,IAAI,cAAewQ,GAC3B/I,EAAc,2BACTD,GADQ,IAEXtL,MAAOA,EACPC,MAAOqU,EAAYpR,QACjB,SAACC,EAAM4H,GAAP,OAAiB5H,EAAKpC,eAAeyM,OAAS,QAGlD/B,GAAa,GACbpC,IACAxF,QAAQC,IAAIwH,IA2HiBmC,UAAW6G,EAAYpR,QAAO,SAAAC,GAAI,OAAIA,EAAKpC,eAAeyM,OAAS,KAAGA,OAA/F,yBCnJFkH,I,OAAS,SAAC5S,GACZ,MAAwB8G,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KACAzF,QAAQC,IAAI,iBAAkBwG,GAO9B,OACI,sBAAKzF,UAAU,uCAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,+BAAO/C,EAAM6L,cAAc5N,cAAcC,QACzC,sBAAM6E,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAUI,QAVN,WAChBqE,GAAQ,WAaJ,qBAAKzE,UAAU,mBAAf,SACK/C,EAAM6L,cAAc5N,cAAcE,MAAM4K,KAAI,SAAC1H,EAAM4H,GAChD,OACI,sBAAKlG,UAAU,cAAf,UACI,qBAAKA,UAAU,0CAAf,SAA0D1B,EAAKpC,iBAC/D,qBAAK8D,UAAU,kBAAf,SAAkC1B,EAAKnC,aAFT+J,QAU9C,cAAC,GAAD,CAAcT,KAAMA,EAAMhB,QAASA,EAAS4C,gBAAiBpK,EAAMoK,gBAAiBD,cAAenK,EAAM6L,cAAclQ,KAAM6N,WAAYxJ,EAAM6L,cAAc5N,qBAK1J6G,OAAMC,KAAK6N,IC+dXC,OAzef,WACE,IAAIC,EACJ,EAAgEC,aAAY,SAAC7W,GAAD,OAAWA,KAAhFyH,EAAP,EAAOA,YAAaqP,EAApB,EAAoBA,kBAAmBC,EAAvC,EAAuCA,sBACvC,EAAwBnM,mBAAS,MAAjC,mBAAOoM,EAAP,KAAYC,EAAZ,KACA,EAA8BrM,oBAAS,GAAvC,mBAAOhI,EAAP,KAAgBsU,EAAhB,KACA,EAA8BtM,oBAAS,GAAvC,mBAAO3H,EAAP,KAAgBkU,EAAhB,KACMrJ,EAAWC,cACjB,EAAwBnD,oBAAS,GAAjC,mBAAO0B,EAAP,KAAahB,EAAb,KAEA,EAAwDV,mBAAS,MAAjE,mBAAOqB,EAAP,KAA6BD,EAA7B,KA0CA,SAASoL,EAAiBC,GACpB5P,EAAYjI,QACdsO,EAASnE,GAAyB,CAACH,KAAK6N,EAAS7X,OAAQiI,EAAYjI,UAtCzEwO,qBAAU,WACNnI,QAAQC,IAAI,0BACZmR,EAASH,EAAkB/M,YAC3BiC,EAAwB+K,EAAsB/V,kBAE7C,CAAC8V,IAEN9I,qBAAU,WAORF,EAAS1E,GAAsB3B,EAAYjI,SAASgF,MAAK,SAAC8S,GACpDA,EAAIpX,UACN+W,EAASK,EAAIpX,SACb2F,QAAQC,IAAIwR,EAAIpX,SAChBiX,EAAWG,EAAIpX,QAAQ+C,QAAQuM,OAAS,OAI5C1B,EAASvD,GAA0B9C,EAAYjI,SAASgF,MAAK,SAAC8S,GAE5D,GADAtL,EAAwBsL,EAAIpX,SACxBoX,EAAIpX,QAAS,CAEf,IAAMqX,EAAO9L,SAASC,cAAc,SACpC6L,EAAK5L,MAAMC,YAAY,uBAAwB0L,EAAIpX,QAAQmB,kBAC3DkW,EAAK5L,MAAMC,YAAY,0BAA2B0L,EAAIpX,QAAQoB,qBAC9DiW,EAAK5L,MAAMC,YAAY,oBAAqB0L,EAAIpX,QAAQkB,qBAnB3D,CAACqG,IAuCJ,IAIM+P,EAAgB,SAACxK,EAAO7H,EAAM4H,EAAO7C,GACzC/E,EAAI,2BAAOA,GAAP,IAAasS,MAAM,EAAMhY,KAAK,GAAD,OAAK0F,EAAK1F,KAAV,YAJ1BiY,KAAKC,MAAMD,KAAKE,SAAWC,KAAKC,UAKvC,IAAIC,EAAStS,KAAKiE,MAAMjE,KAAKC,UAAUsR,IACvCe,EAAO7N,GAAQmF,OAAOtC,EAAQ,EAAG,EAAG5H,GACpC8R,EAASc,GACTX,EAAiBW,IAGbC,EAAkB,SAAChL,EAAO7H,EAAM4H,EAAO7C,GAC3C,IAAI6N,EAAStS,KAAKiE,MAAMjE,KAAKC,UAAUsR,IACvCe,EAAO7N,GAAQmF,OAAOtC,EAAO,GAC7BkK,EAASc,GACTX,EAAiBW,IAkEnB,SAASE,EAAapW,EAAesD,EAAM+S,GACvC,OAAQrW,GACN,IAAK,eACD,OAAO,cAAC,GAAD,CAAaqM,gBAAiBgK,EAAYvI,cAAexK,IAEpE,IAAK,YACH,OAAO,cAAC,GAAD,CAAW+I,gBAAiBgK,EAAYvI,cAAexK,IAEhE,IAAK,aACD,OAAO,cAAC,GAAD,CAAY+I,gBAAiBgK,EAAYvI,cAAexK,IAEnE,IAAK,YACD,OAAO,cAAC,GAAD,CAAW+I,gBAAiBgK,EAAYvI,cAAexK,IAElE,IAAK,YACD,OAAO,cAAC,GAAD,CAAW+I,gBAAiBgK,EAAYvI,cAAexK,IAElE,IAAK,sBACH,OAAO,cAAC,GAAD,CAAqB+I,gBAAiBgK,EAAYvI,cAAexK,IAE1E,IAAK,SACH,OAAO,cAAC,GAAD,CAAQ+I,gBAAiBgK,EAAYvI,cAAexK,IAE7D,IAAK,qBACH,OAAO,cAAC,GAAD,CAAoB+I,gBAAiBgK,EAAYvI,cAAexK,IAEzE,IAAK,SACD,OAAO,cAAC,GAAD,CAAQ+I,gBAAiBgK,EAAYvI,cAAexK,IAE/D,QACI,OAAO,MAuRjB,OAjREyR,EADEI,GAAO/K,EACI,cAAC,KAAD,CAAiBkM,UA7EhC,SAAmBC,GACjB,IAAQC,EAAqCD,EAArCC,YAAaC,EAAwBF,EAAxBE,OAAQC,EAAgBH,EAAhBG,YAE7B,GAAKF,IAAgBA,EAAYG,cAAgBF,EAAOE,aAAeH,EAAYtL,QAAUuL,EAAOvL,OAKpG,GAAIsL,EAAYG,cAAgBF,EAAOE,YAAa,CAChD,IAAMT,EAASU,MAAMC,KAAK1B,EAAIsB,EAAOE,cACrCT,EAAO1I,OAAOiJ,EAAOvL,MAAO,GAC5BgL,EAAO1I,OAAOgJ,EAAYtL,MAAO,EAAGiK,EAAIqB,EAAYG,aAAatT,QAAO,SAAAyT,GAAC,OAAIA,EAAElZ,OAAS8Y,KAAa,IAErG,IAAMK,EAAQP,EAAYG,YAEpBK,EAAS,2BACV7B,GADU,kBAEZ4B,EAAQb,IAEXd,EAAS4B,GACTzB,EAAiByB,OACd,CAAC,IAAD,EAECC,EAAWR,EAAOE,YAClBO,EAASV,EAAYG,YACrBQ,EAAYP,MAAMC,KAAK1B,EAAIsB,EAAOE,cAClCS,EAAUR,MAAMC,KAAK1B,EAAIqB,EAAYG,cAE3CQ,EAAU3J,OAAOiJ,EAAOvL,MAAO,GAE/BkM,EAAQ5J,OAAOgJ,EAAYtL,MAAO,EAAGiK,EAAIsB,EAAOE,aAAatT,QAAO,SAAAyT,GAAC,OAAIA,EAAElZ,OAAS2Y,EAAOG,eAAa,IACxG,IAAMM,EAAS,2BACV7B,GADU,uBAEZ8B,EAAWE,GAFC,cAGZD,EAASE,GAHG,IAKfhC,EAAS4B,GACTzB,EAAiByB,KAwCN,SACb,sBAAKhS,UAAU,oBAAf,UACA,cAAC,GAAD,CACEoF,qBAAsBA,EACtBD,wBAAyBA,EACzBoB,oBAlIJ,SAA6BiK,GACvB5P,EAAYjI,QACdsO,EAAStD,GAA2B,CAAChB,KAAK6N,EAAS7X,OAAQiI,EAAYjI,WAiIvE8M,KAAMA,EACNhB,QAASA,IAGT,eAACoF,EAAA,EAAD,CAAMC,WAAS,EAACuI,QAAS,EAAzB,UACI,eAACxI,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAI,EAAf,UACE,sBAAKlK,UAAU,iBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC+O,EAAA,EAAD,CAAOzO,MAAM,UAAUgS,KAAM,cAAC,KAAD,IAA0BlS,QAzL1C,WACvBqE,GAAQ,IAwLqF5H,MAAM,eAG3F,qBAAKmD,UAAU,qBAAf,SACE,cAAC+O,EAAA,EAAD,CAAMzO,MAAM,UAAUgS,KAAM,cAAC,KAAD,IAA0BlS,QAAS,WAC/DiQ,GAAW,GACX,IAAMa,EAAM,2BAAOf,GAAP,IAAY7U,KAAK,GAAD,mBAAM6U,EAAG,MAAT,YAAsBA,EAAG,UAAcpU,QAAS,KAC5EqU,EAASc,IACNrU,MAAM,oBAGX,qBAAKmD,UAAU,qBAAf,SACA,cAAC+O,EAAA,EAAD,CAAMzO,MAAM,UAAUgS,KAAM,cAAC,KAAD,IAAqBlS,QAAS,WAAQiQ,GAAW,IAASxT,MAAM,cAG5F,qBAAKmD,UAAU,qBAAf,SAEI5D,EACA,cAAC2S,EAAA,EAAD,CAAMzO,MAAM,UAAUgS,KAAM,cAAC,KAAD,IAAkClS,QAxHrD,WACvBkQ,GAAW,GAEX,IAAIY,EAAStS,KAAKiE,MAAMjE,KAAKC,UAAUsR,IACjCoC,EAAS,sBAAOrB,EAAO1U,kBAAd,YAAmC0U,EAAO9U,UACzD8U,EAAO1U,iBAAmB+V,EAC1BrB,EAAO9U,QAAU,GACjBgU,EAASc,GACTX,EAAiBW,IAgHsFrU,MAAM,gBAC7F,cAACkS,EAAA,EAAD,CAAMzO,MAAM,UAAUgS,KAAM,cAAC,KAAD,IAAkClS,QAnI1D,WACpBkQ,GAAW,GACXkC,YAAW,WACE5N,SAAS6N,eAAe,WAChCC,eAAe,CAChBC,SAAU,UACX,OACC,MA4HkG9V,MAAM,kBAMpG,sBAAKmD,UAAU,yBAAyB4S,GAAG,sBAA3C,UACA,cAACC,EAAA,EAAD,CAAO7S,UAAS,yCAAoCoF,EAAqBvK,iBAAzD,yBAA0FuK,EAAqB/K,gBAA/G,4BAAkJ+K,EAAqB9K,mBAAvK,sBAAuM8K,EAAqBhL,cAAgB8G,GAAI,CAACmH,SAAUjD,EAAqBhL,aAAckG,MAAO8E,EAAqB7K,eAAgB8G,UAAW,EAArW,SACE,eAACwI,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAI,GAAI0I,GAAG,SAAS5S,UAAS,UAAKmQ,EAAIpV,OAAO4N,OAAS,EAAI,GAAK,cAAgBzH,GAAI,CAAC0E,gBAAiBR,EAAqB1K,sBAAuB4F,MAAO8E,EAAqBxK,uBAAxL,SACE,cAAC,KAAD,CAAW+W,YAAY,SAAvB,SACG,SAACmB,EAAUC,GAAX,OACC,6CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0DlT,UAAW+S,EAASI,eAAiB,oCAAsC,uBAArI,SACE,eAAC,WAAD,CAAUC,SAAU,0CAApB,UACGjD,EAAIpV,OAAOiL,KAAI,SAAC1H,EAAM4H,GACrB,OACE,cAAC,KAAD,CAA2BwL,YAAapT,EAAK1F,KAAMsN,MAAOA,EAA1D,SACG,SAAC4M,EAAUC,GAAX,OACC,uDAAK/S,UAAW+S,EAASM,WAAa,qBAAuB,sBACzDL,IAAKF,EAASG,UACVH,EAASQ,gBAFjB,IAGIC,IAAKjV,EAAK1F,OACVwY,EAAa9S,EAAKtD,cAAesD,EAAM,UACzC,sBAAK0B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB8S,EAASU,iBAA3C,aACE,cAAC,KAAD,OAEF,sBAAMxT,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAAC+F,GAAD,OAAWwK,EAAcxK,EAAO7H,EAAM4H,EAAO,eAEjF,sBAAMlG,UAAW1B,EAAKsS,KAAO,mBAAqB,SAAlD,SACE,cAAC,KAAD,CAAmBxQ,QAAS,SAAC+F,GAAD,OAAWgL,EAAgBhL,EAAO7H,EAAM4H,EAAO,qBAfrE5H,EAAK1F,SAwBxBka,EAAS9H,uBAMpB,cAACnB,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAInO,EAAU,EAAI,GAAI6W,GAAG,OAAO5S,UAAS,UAAKmQ,EAAIpV,OAAO4N,OAAS,EAAI,GAAK,WAAtF,SACA,cAAC,KAAD,CAAWgJ,YAAY,OAAvB,SACG,SAACmB,EAAUC,GAAX,OACC,6CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0DlT,UAAW+S,EAASI,eAAiB,oCAAsC,uBAArI,SACE,eAAC,WAAD,CAAUC,SAAU,0CAApB,UACGjD,EAAI7U,KAAK0K,KAAI,SAAC1H,EAAM4H,GACnB,OACE,cAAC,KAAD,CAA2BwL,YAAapT,EAAK1F,KAAMsN,MAAOA,EAA1D,SACG,SAAC4M,EAAUC,GAAX,OACC,uDAAK/S,UAAW+S,EAASM,WAAa,yCAA2C,sBAC7EL,IAAKF,EAASG,UACVH,EAASQ,gBAFjB,IAGIC,IAAKjV,EAAK1F,OAEVwY,EAAa9S,EAAKtD,cAAesD,EAAM,QACzC,sBAAK0B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB8S,EAASU,iBAA3C,aACE,cAAC,KAAD,OAEF,sBAAMxT,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAAC+F,GAAD,OAAWwK,EAAcxK,EAAO7H,EAAM4H,EAAO,aAEjF,sBAAMlG,UAAW1B,EAAKsS,KAAO,mBAAqB,SAAlD,SACI,cAAC,KAAD,CAAmBxQ,QAAS,SAAC+F,GAAD,OAAWgL,EAAgBhL,EAAO7H,EAAM4H,EAAO,mBAhBvE5H,EAAK1F,SAyBxBka,EAAS9H,uBAOjBjP,EACD,cAAC8N,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAI,EAAG0I,GAAG,UAAU1R,GAAI,CAAC0E,gBAAiBR,EAAqBzK,wBAAyBqF,UAAS,UAAKmQ,EAAIpV,OAAO4N,OAAS,EAAI,GAAK,WAA9I,SACA,cAAC,KAAD,CAAWgJ,YAAY,UAAvB,SACG,SAACmB,EAAUC,GAAX,OACC,8CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0DlT,UAAW+S,EAASI,eAAiB,mDAAqD,sCAApJ,UACGL,EAASO,WACV,eAAC,WAAD,CAAUD,SAAU,0CAApB,UACGjD,EAAIpU,QAAQiK,KAAI,SAAC1H,EAAM4H,GACtB,OACE,cAAC,KAAD,CAA2BwL,YAAapT,EAAK1F,KAAMsN,MAAOA,EAA1D,SACG,SAAC4M,EAAUC,GAAX,OACC,uDAAK/S,UAAW+S,EAASM,WAAa,qBAAuB,sBACvDL,IAAKF,EAASG,UACVH,EAASQ,gBAFnB,IAGMC,IAAKjV,EAAK1F,OACZwY,EAAa9S,EAAKtD,cAAesD,EAAM,WACzC,sBAAK0B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB8S,EAASU,iBAA3C,aACE,cAAC,KAAD,OAEF,sBAAMxT,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAAC+F,GAAD,OAAWwK,EAAcxK,EAAO7H,EAAM4H,EAAO,gBAEjF,sBAAMlG,UAAW1B,EAAKsS,KAAO,mBAAqB,SAAlD,SACI,cAAC,KAAD,CAAmBxQ,QAAS,SAAC+F,GAAD,OAAWgL,EAAgBhL,EAAO7H,EAAM4H,EAAO,sBAfvE5H,EAAK1F,SAwBxBka,EAAS9H,wBAKR,UAGd,cAAC/J,EAAA,EAAD,CAAKC,GAAI,CAACmK,OAAQ,MACjBjP,EACD,cAACyW,EAAA,EAAD,CAAO7S,UAAS,yCAAoCoF,EAAqBvK,iBAAzD,yBAA0FuK,EAAqB/K,gBAA/G,4BAAkJ+K,EAAqB9K,mBAAvK,sBAAuM8K,EAAqBhL,cAAgB8G,GAAI,CAACmH,SAAUjD,EAAqBhL,aAAckG,MAAO8E,EAAqB7K,eAAgB8G,UAAW,EAArW,SACE,cAACwI,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMvL,MAAI,EAAC4L,GAAI,GAAI0I,GAAG,UAAU5S,UAAS,UAAKmQ,EAAIpV,OAAO4N,OAAS,EAAI,GAAK,WAA3E,SACA,cAAC,KAAD,CAAWgJ,YAAY,UAAvB,SACG,SAACmB,EAAUC,GAAX,OACC,6CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0DlT,UAAW+S,EAASI,eAAiB,oCAAsC,uBAArI,SACE,eAAC,WAAD,CAAUC,SAAU,0CAApB,UACGjD,EAAI/T,QAAQ4J,KAAI,SAAC1H,EAAM4H,GACtB,OACE,cAAC,KAAD,CAA2BwL,YAAapT,EAAK1F,KAAMsN,MAAOA,EAA1D,SACG,SAAC4M,EAAUC,GAAX,OACC,uDAAK/S,UAAW+S,EAASM,WAAa,yCAA2C,sBAC7EL,IAAKF,EAASG,UACVH,EAASQ,gBAFjB,IAGIC,IAAKjV,EAAK1F,OAEVwY,EAAa9S,EAAKtD,cAAesD,EAAM,WACzC,sBAAK0B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB8S,EAASU,iBAA3C,aACE,cAAC,KAAD,OAEF,sBAAMxT,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAAC+F,GAAD,OAAWwK,EAAcxK,EAAO7H,EAAM4H,EAAO,gBAEjF,sBAAMlG,UAAW1B,EAAKsS,KAAO,mBAAqB,SAAlD,SACI,cAAC,KAAD,CAAmBxQ,QAAS,SAAC+F,GAAD,OAAWgL,EAAgBhL,EAAO7H,EAAM4H,EAAO,sBAhBvE5H,EAAK1F,SAyBxBka,EAAS9H,2BAQpB,WAGJ,eAACnB,EAAA,EAAD,CAAM7J,UAAU,yBAAyB1B,MAAI,EAAC4L,GAAI,EAAlD,UACE,sBAAKlK,UAAU,2BAAf,UACE,8BACE,sBAAMA,UAAU,0BAAhB,2BAEF,cAACyT,EAAA,EAAD,CACEb,GAAG,2BACHc,QAAS,CACP,CAAE7W,MAAO,YAAa+V,GAAI,GAC1B,CAAE/V,MAAO,SAAU+V,GAAI,IAEzB1R,GAAI,CAAEqH,MAAO,KACboL,YAAa,SAACC,GAAD,OAAY,cAACtM,EAAA,EAAD,2BAAesM,GAAf,IAAuB5I,YAAY,SAAU3K,QAAQ,oBAGlF,cAACwS,EAAA,EAAD,CAAO/N,MAAO,CAAC+O,QAAS,QAAS7T,UAAU,iBAAiBqB,UAAW,EAAvE,SAEA,cAAC,KAAD,CAAWsQ,YAAY,mBAAvB,SACO,SAACmB,EAAUC,GAAX,OACC,8CAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAA1C,IAA0DlT,UAAW+S,EAASI,eAAiB,oCAAsC,uBAArI,UACGL,EAASO,WACV,eAAC,WAAD,CAAUD,SAAU,0CAApB,UACGjD,EAAI3T,iBAAiBwJ,KAAI,SAAC1H,EAAM4H,GAC/B,OACE,cAAC,KAAD,CAA2BwL,YAAapT,EAAK1F,KAAMsN,MAAOA,EAA1D,SACG,SAAC4M,EAAUC,GAAX,OACC,uDAAK/S,UAAW+S,EAASM,WAAa,yCAA2C,sBAC3EL,IAAKF,EAASG,UACVH,EAASQ,gBAFnB,IAGMC,IAAKjV,EAAK1F,OAEZwY,EAAa9S,EAAKtD,cAAesD,EAAM,oBACzC,sBAAK0B,UAAU,UAAf,UACE,8CAAMA,UAAU,eAAkB8S,EAASU,iBAA3C,aACE,cAAC,KAAD,OAEF,sBAAMxT,UAAU,iBAAhB,SACE,cAAC,KAAD,CAAyBI,QAAS,SAAC+F,GAAD,OAAWwK,EAAcxK,EAAO7H,EAAM4H,EAAO,yBAEjF,sBAAMlG,UAAW1B,EAAKsS,KAAO,mBAAqB,SAAlD,SACI,cAAC,KAAD,CAAmBxQ,QAAS,SAAC+F,GAAD,OAAWgL,EAAgBhL,EAAO7H,EAAM4H,EAAO,+BAhBvE5H,EAAK1F,SAyBxBka,EAAS9H,mCAajB,qBAAKhL,UAAU,iBAAf,SACG,cAACC,EAAA,EAAD,MAKhB,sBAAKD,UAAU,eAAf,UACI,cAACiB,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACE,cAACC,EAAA,EAAD,CAAQC,UAAW,EAAGrB,UAAU,gBAAgBM,MAAM,UAAUgB,SAAS,QAAzE,SACE,eAACC,EAAA,EAAD,CAASvB,UAAU,iBAAnB,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKwB,IAAKC,EAAMzB,UAAU,cAAc0B,IAAI,mBAC1C,cAACoS,EAAA,EAAD,CAAMC,UAAU,OAAO/T,UAAU,kCAAkCgU,KAAK,IAAxE,mBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO/T,UAAU,2BAA2BgU,KAAK,IAAjE,wBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO/T,UAAU,2BAA2BgU,KAAK,IAAjE,uBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO/T,UAAU,2BAA2BgU,KAAK,IAAjE,oBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO/T,UAAU,2BAA2BgU,KAAK,IAAjE,uBACA,cAACF,EAAA,EAAD,CAAMC,UAAU,OAAO/T,UAAU,2BAA2BgU,KAAK,IAAjE,4BAEJ,gCACE,cAAC7T,EAAA,EAAD,CACIC,QAASf,OAAO4U,MAChB5T,QAAQ,YACRC,MAAM,UACNC,kBAAgB,EAChBP,UAAU,yBALd,6BAQA,cAAC,EAAD,cAMT+P,MCpdQmE,OA9Bf,WACA,IAAM1b,EAAawX,aAAY,SAAA7W,GAAK,OAAIA,EAAMyH,YAAYpI,cACxD,OACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,8BACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOyC,KAAK,WAAZ,WACIzC,GAAgD,OAAlCC,aAAaC,QAAQ,WAAsB,cAAC,GAAD,KACxDF,GAA+C,MAAjCC,aAAaC,QAAQ,UAAqB,cAAC,IAAD,CAAUmJ,GAAG,SAE1E,cAAC,IAAD,CAAO5G,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAO6G,OAAK,EAAC7G,KAAK,IAAlB,SACE,cAACiH,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAClB,EAAA,EAAD,CAAKmB,EAAE,OAAOC,UAAU,SAAxB,SACE,0D,oBCTDkH,GAzBH4K,aAAY,CACtB5I,QAAS,CACP6I,QAAS,CACP9Y,KAAM,YAOV+Y,WAAY,CACVC,UAAW,CACTC,SAAU,CACR,CACEtX,MAAO,CAAEoD,QAAS,WAAYC,MAAO,WACrCwE,MAAO,CACL0P,YAAa,OACbC,aAAc,cCTfC,GAAQC,YAAe,CAClCC,QAAS,CACPhU,YAAa9H,EACbmX,kBAAmBhN,GACnBiN,sBAAuBtM,MCL3BiR,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAACK,GAAA,EAAD,CAAexL,MAAOA,GAAtB,SACE,cAAC,GAAD,QAGJ3E,SAAS6N,eAAe,W","file":"static/js/main.e3fbed11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn : (localStorage.getItem('token') == null) ? false : true,\r\n    userId: null,\r\n    name: null,\r\n    email: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        signInAction: (state, action) => {\r\n            state.isSignedIn = true;\r\n            state.userId = action.payload.userId;\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n        },\r\n        signOutAction: (state) => {\r\n            state.isSignedIn = false;\r\n            state.userId = null;\r\n            state.name = null;\r\n            state.email = null;\r\n        },\r\n    },\r\n  });\r\n  \r\nexport const { signInAction, signOutAction } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBjh7R7l6f9rTW8Oll_uzx2q50uJNWRjbU\",\r\n  authDomain: \"resume-builder-c4248.firebaseapp.com\",\r\n  projectId: \"resume-builder-c4248\",\r\n  storageBucket: \"resume-builder-c4248.appspot.com\",\r\n  messagingSenderId: \"790181104761\",\r\n  appId: \"1:790181104761:web:3f3e105c4d46cd7c09d8a8\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","export const richEditorSettings = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n    [{ 'color': [] }, { 'background': [] }],\r\n    ['link', 'image'],\r\n    ['clean']\r\n  ],\r\n};\r\n\r\nexport const initialData = {\r\n  globalSettings: {\r\n    bodyFontSize: 'small',\r\n    headingFontSize: 'large',\r\n    subheadingFontSize: 'small',\r\n    bodyFontColor: '#000000',\r\n    headingFontColor: '#000000',\r\n    subheadingFontColor: '#000000',\r\n    headerBackgroundColor: '#ffffff',\r\n    sidebarBackgroundColor: '#ffffff',\r\n    aboutSectionFontColor: '#000000',\r\n    headingAlignment: 'left',\r\n  },\r\n  resumeJson: {\r\n  header: [\r\n      {\r\n          name: \"BasicInfo\",\r\n          componentType: 'BasicInfo',\r\n          path: \"BasicInfo/BasicInfo\"\r\n      },\r\n      {\r\n          name: \"ProfessionalSummary\",\r\n          componentType: 'ProfessionalSummary',\r\n          path: \"ProfessionalSummary/ProfessionalSummary\",\r\n          componentData: {\r\n              title: \"Professional Summary\",\r\n              items: [\r\n                {\r\n                  summary: \"This is summary body.\"\r\n                },\r\n              ],\r\n          }\r\n      }\r\n\r\n  ],\r\n  main: [\r\n    {\r\n      name: \"Education\",\r\n      componentType: 'Education',\r\n      path: \"Education/Education\",\r\n      componentData: {\r\n        title: \"Education\",\r\n        items: [\r\n          {\r\n            title: \"Executive MBA, Engineering Management\",\r\n            university: \"The University of Arizona\",\r\n            date: \"2010 - 2014\",\r\n            gpa: \"CGPA 09/10\",\r\n          },\r\n          {\r\n            title: \"Engineering Management\",\r\n            university: \"The University of California, Berkeley\",\r\n            date: \"2008 - 2010\",\r\n            gpa: \"CGPA 7.5/10\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Achievements\",\r\n      componentType: 'Achievements',\r\n      path: \"Achievements/Achievement\",\r\n      componentData: {\r\n        title: \"Achievements\",\r\n        showIcon: true,\r\n        items: [\r\n          {\r\n            title:\r\n              \"Won Best Employee Award for last 2 consecutive year (2020 & 2021). Won Best Employee Award for last 2 consecutive year (2020 & 2021).\",\r\n          },\r\n          { title: \"Won inter-zone cricket competition (2020). \" },\r\n          {\r\n            title: \"Runner up for state level table tennis competition (2020).\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Experience\",\r\n      componentType: 'Experience',\r\n      path: \"Experience/Experience\",\r\n      componentData: {\r\n        title: \"Experience\",\r\n        items: [\r\n          {\r\n            experienceTitle: \"Android Developer\",\r\n            company: \"Google\",\r\n            date: \"2018 - 2020\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 3 key projects of major clients.\",\r\n          },\r\n          {\r\n            experienceTitle: \"Front End Developer\",\r\n            company: \"Amazon\",\r\n            date: \"2014 - 2018\",\r\n            location: \"New York\",\r\n            experienceSummary:\r\n              \"Worked with team of 5 members and provided end-to-end solutions for clients & Lead developer in 4 key projects of major clients.\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n  sidebar: [\r\n    {\r\n      name: \"Skills\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"HTML\" },\r\n          { title: \"CSS\" },\r\n          { title: \"JavaScript\" },\r\n          { title: \"React\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Tools\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Tools\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [{ title: \"Git\" }, { title: \"Webpack\" }, { title: \"Gulp\" }],\r\n      },\r\n    },\r\n    {\r\n      name: \"Hobbies\",\r\n      componentType: 'Skills',\r\n      path: \"Skills/Skills\",\r\n      componentData: {\r\n        title: \"Hobbies\",\r\n        filled: false,\r\n        rounded: true,\r\n        items: [\r\n          { title: \"Reading\" },\r\n          { title: \"Swimming\" },\r\n          { title: \"Hiking\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"Social\",\r\n      componentType: 'Social',\r\n      path: \"Social/Social\",\r\n      componentData: {\r\n        title: \"Social\",\r\n        items: [\r\n          {\r\n            socialPlatform: \"Github\",\r\n            username: \"@username\",\r\n          },\r\n          {\r\n            socialPlatform: \"LinkedIn\",\r\n            username: \"@username\",\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n  pageTwo: [\r\n    {\r\n      name: \"SkillsWithProgress\",\r\n      componentType: 'SkillsWithProgress',\r\n      path: \"SkillsWithProgress/SkillsWithProgress\",\r\n      componentData: {\r\n        title: \"Skills\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { title: \"HTML\", proficiency: 80 },\r\n          { title: \"CSS\", proficiency: 80 },\r\n          { title: \"Javascript\", proficiency: \"70\" },\r\n          { title: \"React\", proficiency: 50 },\r\n        ],\r\n      },\r\n    }\r\n  ],\r\n  componentLibrary: [\r\n    {\r\n      name: \"Languages\",\r\n      componentType: 'Languages',\r\n      path: \"Languages/Languages\",\r\n      componentData: {\r\n        title: \"Languages\",\r\n        showProficiency: true,\r\n        showProficiencyProgress: true,\r\n        items: [\r\n          { language: \"English\", proficiency: \"Proficient\" },\r\n          { language: \"Hindi\", proficiency: \"Native\" },\r\n          { language: \"Spanish\", proficiency: \"Beginner\" },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n}\r\n};\r\n\r\nexport const colors = ['#000000', '#ffffff', '#483d8b', '#f0f8ff', '#2f4f4f', '#bdb76b', '#183141', '#ffd700', '#D9E2E9', '#141428', '#94AA9E', '#B5282E', '#808000', '#191970', '#FBECD7', '#dc143c' ];\r\n\r\n\r\nexport const fontSizes = [\r\n  {\r\n    value: \"x-small\",\r\n    label: \"XS\",\r\n  },\r\n  {\r\n    value: \"small\",\r\n    label: \"S\",\r\n  },\r\n  {\r\n    value: \"medium\",\r\n    label: \"M\",\r\n  },\r\n  {\r\n    value: \"large\",\r\n    label: \"L\",\r\n  },\r\n  {\r\n    value: \"larger\",\r\n    label: \"XL\",\r\n  }\r\n];\r\n\r\nexport const headingAlignment = [\r\n  {\r\n    value: \"left\",\r\n    label: \"Left\",\r\n  },\r\n  {\r\n    value: \"center\",\r\n    label: \"Center\",\r\n  },\r\n  {\r\n    value: \"right\",\r\n    label: \"Right\",\r\n  }\r\n];","import React, { Component } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { signInAction, signOutAction } from \"../../reducers/authSlice.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport { initialData } from '../../globals.js';\r\n\r\nclass GoogleLogin extends Component {\r\n  // If not using arrow function then we need to bind `this` like below\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {isSignedIn: null};\r\n  //     this.onAuthChange = this.onAuthChange.bind(this)\r\n  // }\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"1051932499833-smce802vivdpiijmo5bg4donrr6n40fg.apps.googleusercontent.com\",\r\n          scope: \"email profile\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // listen for auth changes in future\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedInStatus) => {\r\n    if (isSignedInStatus) {\r\n      this.props.signInAction({\r\n        userId: this.auth.currentUser.get().getId(),\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n    } else {\r\n      this.props.signOutAction();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn().then(() => {\r\n      const userId = this.auth.currentUser.get().getId();\r\n      const name = this.auth.currentUser.get().getBasicProfile().getName();\r\n      const email = this.auth.currentUser.get().getBasicProfile().getEmail();\r\n      this.props.signInAction({\r\n        userId: userId,\r\n        name: this.auth.currentUser.get().getBasicProfile().getName(),\r\n        email: this.auth.currentUser.get().getBasicProfile().getEmail(),\r\n      });\r\n\r\n      // If first time user then create a new resume\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .get()\r\n        .then((doc) => {\r\n          // Existing user then redirect else create a new resume\r\n          if (doc.exists) {\r\n            localStorage.setItem(\r\n              \"token\",\r\n              this.auth.currentUser.get().getAuthResponse().id_token\r\n            );\r\n            this.props.history.replace(\"builder\");\r\n          } else {\r\n            initialData.resumeJson.header.filter(\r\n              (item) => item.name === \"BasicInfo\"\r\n            )[0].componentData = {\r\n              fullName: name,\r\n              email: email,\r\n              website: \"www.example.com\",\r\n              phone: \"1234567890\",\r\n              address: \"123, ABC Street, XYZ City, ABC State, 123456\",\r\n            };\r\n            firebase\r\n              .firestore()\r\n              .collection(\"users\")\r\n              .doc(userId)\r\n              .set({\r\n                resumeJson: JSON.stringify(initialData.resumeJson),\r\n                globalSettings: JSON.stringify(initialData.globalSettings),\r\n                userId: userId,\r\n                name: name,\r\n                email: email,\r\n              })\r\n              .then(() => {\r\n                localStorage.setItem(\r\n                  \"token\",\r\n                  this.auth.currentUser.get().getAuthResponse().id_token\r\n                );\r\n                this.props.history.replace(\"builder\");\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut().then(() => {\r\n      localStorage.removeItem(\"token\");\r\n      this.props.signOutAction();\r\n    });\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return (\r\n        <div className=\"header-login-button-wrap\">\r\n          <CircularProgress className=\"login-loader\" size={18} />\r\n        </div>\r\n      );\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignOutClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          onClick={this.onSignInClick}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className=\"header-login-button\"\r\n        >\r\n          Create Resume\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.renderAuthButton();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { signInAction, signOutAction };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(GoogleLogin));\r\n","import React from \"react\";\r\nimport {AppBar, Box, Toolbar, Button} from '@mui/material';\r\nimport logo from '../../logo.svg';\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport GoogleLogin from '../Login/GoogleLogin'\r\n\r\nimport './GlobalHeader.css'\r\n\r\nconst GlobalHeader = () => {\r\n    return (useLocation().pathname !== '/builder') ? (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar elevation={0} className=\"global-header\" color=\"transparent\" position=\"static\">\r\n                <Toolbar>\r\n                    <img src={logo} className=\"header-logo\" alt=\"Resume Builder\"/>\r\n                    <div className=\"header-logo-text\">\r\n                        <span>Resume Builder</span>\r\n                    </div>\r\n                    <nav>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/\"\r\n                            exact\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Home\r\n                        </Button>\r\n                        <Button \r\n                            component={NavLink}\r\n                            to=\"/about\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                About\r\n                        </Button>\r\n                        <Button\r\n                            component={NavLink}\r\n                            to=\"/contact\"\r\n                            variant=\"text\"\r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            className=\"mobile-d-none header-menu-link\">\r\n                                Contact\r\n                        </Button>\r\n                        <GoogleLogin></GoogleLogin>\r\n                    </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    ) : <span></span>\r\n}\r\n\r\nexport default  React.memo(GlobalHeader);","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>About</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport { Container, Box } from '@mui/material';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                    <h1>Contact</h1>  \r\n                </Box> \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    resumeData: null, loading: 'idle'\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getResumeDataByUserId = createAsyncThunk(\r\n  'resume/getResumeDataByUserId',\r\n  async (userId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('users').doc(userId).get()).data();\r\n    return JSON.parse(response.resumeJson);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateResumeDataByUserId = createAsyncThunk(\r\n  'resume/updateResumeDataByUserId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"users\").doc(apiData.userId).update({resumeJson: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n)\r\n  \r\n\r\nexport const resumeDataSlice = createSlice({\r\n    name: 'resumeDataSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateResumeDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.resumeData));\r\n            data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getResumeDataByUserId.fulfilled, (state, action) => {\r\n            state.resumeData = action.payload;\r\n        })\r\n\r\n        .addCase(updateResumeDataByUserId.fulfilled, (state, action) => {\r\n          state.resumeData = action.payload;\r\n      })\r\n    },\r\n  });\r\n\r\nexport const { updateResumeDataReducer } = resumeDataSlice.actions;  \r\n\r\nexport default resumeDataSlice.reducer;","import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport firebase from '../firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    globalSettings: null\r\n};\r\n\r\n\r\n\r\n// First, create the thunk\r\nexport const getGlobalSettingsByUserId = createAsyncThunk(\r\n  'resume/getGlobalSettingsByUserId',\r\n  async (userId, thunkAPI) => {\r\n    const response = await (await firebase.firestore().collection('users').doc(userId).get()).data();\r\n    return JSON.parse(response.globalSettings);\r\n  }\r\n)\r\n\r\n// First, create the thunk\r\nexport const updateGlobalSettingsUserId = createAsyncThunk(\r\n  'resume/updateGlobalSettingsUserId',\r\n  async (apiData, thunkAPI) => {\r\n    await (await firebase.firestore().collection(\"users\").doc(apiData.userId).update({globalSettings: JSON.stringify(apiData.data)}));\r\n    return apiData.data;\r\n  }\r\n)\r\n  \r\n\r\nexport const globalSettingsSlice = createSlice({\r\n    name: 'globalSettingsSlice',\r\n    initialState: INITIAL_STATE,\r\n    reducers: {\r\n        updateSettingsDataReducer: (state, action) => {\r\n            const data = JSON.parse(JSON.stringify(state.globalSettings));\r\n            //data[action.payload.column].filter(item => item.name === action.payload.name)[0].componentData = action.payload.data;\r\n            state.resumeData = data;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Add reducers for additional action types here, and handle loading state as needed\r\n        builder.addCase(getGlobalSettingsByUserId.fulfilled, (state, action) => {\r\n            state.globalSettings = action.payload;\r\n        })\r\n\r\n        .addCase(updateGlobalSettingsUserId.fulfilled, (state, action) => {\r\n          state.globalSettings = action.payload;\r\n      })\r\n    },\r\n  });\r\n\r\nexport const { updateSettingsDataReducer } = globalSettingsSlice.actions;  \r\n\r\nexport default globalSettingsSlice.reducer;","import React, { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { GithubPicker } from 'react-color';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { fontSizes, colors } from '../../globals.js';\r\nimport FormatAlignLeftOutlinedIcon from '@mui/icons-material/FormatAlignLeftOutlined';\r\nimport FormatAlignCenterOutlinedIcon from '@mui/icons-material/FormatAlignCenterOutlined';\r\nimport FormatAlignRightOutlinedIcon from '@mui/icons-material/FormatAlignRightOutlined';\r\n\r\nimport \"./GlobalResumeSetting.css\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst GlobalResumeSetting = (props) => {\r\n\r\n  const [colorsToggles, setColorsToggles] = useState({\r\n    headerFontColorToggle: false,\r\n    headingFontColorToggle: false,\r\n    subheadingFontColorToggle: false,\r\n    bodyFontToggle: false,\r\n    headerBackgroundColorToggle: false,\r\n    sidebarBackgroundColorToogle: false,\r\n  });\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const changeFontColor = (property, color) => {\r\n    const root = document.querySelector(\":root\");\r\n    root.style.setProperty(property, color)\r\n  }\r\n\r\n  const changeAboutSectionFontColor = (color) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, aboutSectionFontColor: color.hex});\r\n    openColorToggle('headerFontColorToggle');\r\n  }\r\n\r\n  const changeHeadingFontColor = (color) => {\r\n   props.setGlobalResumeSettings({...props.globalResumeSettings, headingFontColor: color.hex});\r\n   changeFontColor(\"--color-font-heading\", color.hex);\r\n   openColorToggle('headingFontColorToggle');\r\n  }\r\n\r\n  const changeSubheadingFontColor = (color) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, subheadingFontColor: color.hex});\r\n    changeFontColor(\"--color-font-subheading\", color.hex);\r\n    openColorToggle('subheadingFontColorToggle');\r\n  }\r\n\r\n  const changeBodyFontColor = (color) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, bodyFontColor: color.hex});\r\n    changeFontColor(\"--color-font-body\", color.hex);\r\n    openColorToggle('bodyFontColorToggle');\r\n  }\r\n\r\n  const changeHeaderBackgroundColor = (color) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, headerBackgroundColor: color.hex});\r\n    openColorToggle('headerBackgroundColorToggle');\r\n  }\r\n\r\n  const changeSidebarBackgroundColor = (color) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, sidebarBackgroundColor: color.hex});\r\n    openColorToggle('sidebarBackgroundColorToggle');\r\n  }\r\n  \r\n  const changeHeadingFont = (e, size) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, headingFontSize: size});\r\n  }\r\n\r\n  const changeSubheadingFont = (e, size) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, subheadingFontSize: size});\r\n  }\r\n\r\n  const changeBodyFont = (e, size) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, bodyFontSize: size});\r\n  }\r\n\r\n  const changeHeadingAlignment = (e, alignment) => {\r\n    props.setGlobalResumeSettings({...props.globalResumeSettings, headingAlignment: alignment});\r\n  }\r\n\r\n  const onSave = () => {\r\n    props.updateGlobalSetting(props.globalResumeSettings);\r\n    closeEditor();\r\n  }\r\n\r\n  const openColorToggle = (colorToggleProp) => {\r\n    setColorsToggles({...colorsToggles, [colorToggleProp]: !colorsToggles[colorToggleProp]});\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"resume-setting-wrap\">\r\n\r\n        <div className=\"resume-setting-section\">\r\n          {/* ABOUT SECTION SETTING */}\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Resume Header Section</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className='resume-setting-selected-color'  onClick={() => { openColorToggle('headerFontColorToggle'); }} sx={{backgroundColor: props.globalResumeSettings.aboutSectionFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headerFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={ props.globalResumeSettings.aboutSectionFontColor } onChangeComplete={changeAboutSectionFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* HEADING FONTS SETTING */} \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Heading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.globalResumeSettings.headingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeHeadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headingFontColorToggle'); }} sx={{backgroundColor: props.globalResumeSettings.headingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={ props.globalResumeSettings.headingFontColor } onChangeComplete={changeHeadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Heading Alignment\r\n              </span>\r\n              <div className=\"resume-setting-item-body\">\r\n                  <div className={`heading-alignment-div ${props.globalResumeSettings.headingAlignment === 'left' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'left')}>\r\n                    <FormatAlignLeftOutlinedIcon></FormatAlignLeftOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.globalResumeSettings.headingAlignment === 'center' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'center')}>\r\n                    <FormatAlignCenterOutlinedIcon></FormatAlignCenterOutlinedIcon>\r\n                  </div>\r\n\r\n                  <div className={`heading-alignment-div ${props.globalResumeSettings.headingAlignment === 'right' ? 'active' : ''}`} onClick={(event) => changeHeadingAlignment(event, 'right')}>\r\n                    <FormatAlignRightOutlinedIcon></FormatAlignRightOutlinedIcon>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* SUBHEADING FONTS SETTING */} \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Subheading</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.globalResumeSettings.subheadingFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeSubheadingFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('subheadingFontColorToggle'); }} sx={{backgroundColor: props.globalResumeSettings.subheadingFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.subheadingFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.globalResumeSettings.subheadingFontColor} onChangeComplete={changeSubheadingFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* BODY FONTS SETTING */}      \r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Body</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">Font Size</span>\r\n              <div className=\"resume-setting-item-body\">\r\n                {fontSizes.map((font, index) => {\r\n                  return (\r\n                    <div key={index} className={`font-size-div ${props.globalResumeSettings.bodyFontSize === font.value ? 'active' : ''}`} onClick={(event) => changeBodyFont(event, font.value)}>{font.label}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Font Color\r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('bodyFontColorToggle'); }} sx={{backgroundColor: props.globalResumeSettings.bodyFontColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.bodyFontColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.bodyFontColor} onChangeComplete={changeBodyFontColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* BACKGROUNDS SETTING */}\r\n          <div className=\"resume-setting-section\">\r\n            <div className=\"resume-setting-heading\">\r\n              <span>Backgrounds</span>\r\n            </div>\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Header Background Color \r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('headerBackgroundColorToggle'); }} sx={{backgroundColor: props.globalResumeSettings.headerBackgroundColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.headerBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.globalResumeSettings.headerBackgroundColor} onChangeComplete={changeHeaderBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"resume-setting-item\">\r\n              <span className=\"resume-setting-item-label\">\r\n                Sidebar Background Color \r\n                <Box className=\"resume-setting-selected-color\" onClick={() => { openColorToggle('sidebarBackgroundColorToggle'); }} sx={{backgroundColor: props.globalResumeSettings.sidebarBackgroundColor}}></Box>\r\n              </span>\r\n              <div className={`resume-setting-item-body ${colorsToggles.sidebarBackgroundColorToggle === true ? '' : 'd-none'}`}>\r\n                <GithubPicker color={props.globalResumeSettings.sidebarBackgroundColor} onChangeComplete={changeSidebarBackgroundColor} colors={colors} triangle=\"hide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave}>Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default  React.memo(GlobalResumeSetting);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nconst AchievementEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [achievementItems, setAchievementItems] = useState(editorData.items);\r\n    const [showIcon, setShowIcon] = useState(editorData.showIcon);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowIconChange = (event) => {\r\n        setShowIcon(event.target.checked);\r\n    }\r\n\r\n\r\n    const onAchievementChange = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills[index] = { title: event.target.value };\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onAddAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setAchievementItems(skills);\r\n    }\r\n    const onDeleteAchievement = (event, index) => {\r\n        let skills = [...achievementItems];\r\n        skills.splice(index, 1);\r\n        setAchievementItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showIcon: showIcon, items: achievementItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Icon: <Switch label=\"Rounded\" onChange={onShowIconChange} checked={showIcon} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {achievementItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                        onChange={(event) => onAchievementChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        multiline\r\n                                        rows={2}\r\n                                        inputProps={{style: {fontSize: 14, lineHeight: 1.2}}}\r\n                                        style = {{width: 380}}\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddAchievement(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteAchievement(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!achievementItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default AchievementEditor;","import React, { useState } from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AchievementEditor from \"./AchievementEditor\";\r\n\r\nimport \"./Achievement.css\";\r\n\r\nconst Achievement = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling achievment', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-achievement\">\r\n      <div className=\"resume-section-title\">\r\n        <span>{props.componentItem.componentData.title}</span>\r\n        <span className=\"edit-component-icon\">\r\n          <EditIcon onClick={openEditor} />\r\n        </span>\r\n      </div> \r\n\r\n      <div className=\"achievement-item-wrap\">\r\n        {props.componentItem.componentData.items.map((item, index) => {\r\n          return (\r\n            <div key={`achievement-${index}`} className=\"achievement-item\">\r\n              <span className={`achievement-icon ${props.componentItem.componentData.showIcon ? '' : 'd-none'}`}>\r\n                <StarIcon />\r\n              </span>\r\n              <span className=\"achievement-summary\">\r\n                {item.title}\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <AchievementEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Achievement);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst BasicInfoEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDataChange = (event, property) => {\r\n        const newName = event.target.value;\r\n        let newEditorData = {...editorData};\r\n        newEditorData = {...newEditorData, [property]: newName};\r\n        setEditorData(newEditorData);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth readOnly autoComplete='off' value='Basic Info' variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        <div className='editor-item' >\r\n                            <div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Full Name'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'fullName')}\r\n                                        value={editorData.fullName}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Current Role/Designation'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'currentRole')}\r\n                                        value={editorData.currentRole}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Email'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'email')}\r\n                                        value={editorData.email}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240} }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Phone'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'phone')}\r\n                                        value={editorData.phone}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Website'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'website')}\r\n                                        value={editorData.website}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Address'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'address')}\r\n                                        value={editorData.address}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BasicInfoEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport BasicInfoEditor from \"./BasicInfoEditor\";\r\n\r\nimport './BasicInfo.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }));\r\n\r\nconst BasicInfo = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <div className=\"resume-section resume-section-basic-info\">\r\n            {/* <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n            <span className=\"edit-component-icon\">\r\n                <EditIcon onClick={openEditor} />\r\n            </span> */}\r\n\r\n            <div className=\"basic-section-title\">\r\n                <span className=\"basic-info name\">{props.componentItem.componentData.fullName}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>\r\n            <p className=\"basic-info current-role\">{props.componentItem.componentData.currentRole}</p>\r\n            <div>\r\n            <Grid mt={1} \r\n            container \r\n            justifyContent=\"left\" \r\n            alignItems=\"center\" \r\n            rowSpacing={0.5} \r\n            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <PhoneIcon fontSize=\"15\"></PhoneIcon> \r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.phone}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <MailIcon fontSize=\"15\"></MailIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.email}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <LanguageIcon fontSize=\"15\"></LanguageIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.website}</Box>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <HomeIcon fontSize=\"15\"></HomeIcon>\r\n                        <Box component=\"span\" sx={{ pl: 1}}>{props.componentItem.componentData.address}</Box>\r\n                    </Item>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n\r\n            <BasicInfoEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(BasicInfo);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Divider, Box } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst EducationEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [educationItems, setEducationItems] = useState(editorData.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onEducationTitleChange = (event, index) => {\r\n        const newTitle = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], title: newTitle};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onUniversityChange = (event, index) => {\r\n        const newUniversity = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], university: newUniversity};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n\r\n    const onDateChange = (event, index) => {\r\n        const newDate = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], date: newDate};\r\n        console.log(educationItems);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onGpaChange = (event, index) => {\r\n        const newGPA = event.target.value;\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems[index] = {...newEducationItems[index], gpa: newGPA};\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onAddEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index + 1, 0, { title: '', university: '', date: '', gpa: '' });\r\n        setEducationItems(newEducationItems);\r\n    }\r\n    const onDeleteEducation = (event, index) => {\r\n        let newEducationItems = [...educationItems];\r\n        newEducationItems.splice(index, 1);\r\n        setEducationItems(newEducationItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        console.log('educationItems', educationItems);\r\n        setEditorData({ ...editorData, title: title,  items: educationItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            console.log('props', props);\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {educationItems.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className='editor-item' >\r\n                                        <div>\r\n                                            <TextField\r\n                                                label='Degree & Field of Study'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onEducationTitleChange(event, index)}\r\n                                                value={item.title}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='University or School'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onUniversityChange(event, index)}\r\n                                                value={item.university}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Date (From - To)'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onDateChange(event, index)}\r\n                                                value={item.date}\r\n                                                data-key={index}\r\n                                                placeholder='YYYY - YYYY'\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            <TextField\r\n                                                label='Percentage or CGPA'\r\n                                                sx={{ mb: 1, mt: 1, mr: 1}}\r\n                                                onChange={(event) => onGpaChange(event, index)}\r\n                                                value={item.gpa}\r\n                                                data-key={index}\r\n                                                inputProps={{style: {fontSize: 14}}}\r\n                                                size='small'\r\n                                            />\r\n                                            \r\n                                        </div>\r\n                                        <AddCircleIcon onClick={(event) => onAddEducation(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                        <DeleteForeverIcon onClick={(event) => onDeleteEducation(event, index)}  className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                    </div>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                    <Divider></Divider>\r\n                                    <Box sx={{height: 20}}></Box>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!educationItems.filter(item => item.title.length > 0).length}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EducationEditor;","import React, { useState } from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport EducationEditor from \"./EducationEditor\";\r\n\r\nimport './Education.css'\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\nconst Education = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling education', open);\r\n\r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-education\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n            </div>     \r\n            <div className=\"education-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div key={index} className=\"education-item\">\r\n                            <div className=\"resume-section-subtitle\">\r\n                                <span className=\"education-title full-width-field\">{item.title}</span>\r\n                                <span className=\"education-university full-width-field\">{item.university}</span>\r\n                            </div>\r\n                            <Grid\r\n                                container \r\n                                justifyContent=\"start\" \r\n                                alignItems=\"center\" \r\n                                rowSpacing={0.5} \r\n                                columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                                <Grid item md={4} xs={4} justifyContent=\"start\" alignItems=\"center\">\r\n                                    <Item>\r\n                                        <CalendarTodayIcon className=\"resume-section-body\"></CalendarTodayIcon> \r\n                                        <Box className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.date}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                                <Grid item md={4} xs={4} justifyContent=\"start\" alignItems=\"center\" >\r\n                                    <Item>\r\n                                        <SchoolIcon className=\"resume-section-body\"></SchoolIcon>\r\n                                        <Box className=\"resume-section-body\" component=\"span\" sx={{ pl: 0.8}}>{item.gpa}</Box>\r\n                                    </Item>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <EducationEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  React.memo(Education);","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst ExperienceEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [experienceItems, setExperienceItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"experienceItems\", experienceItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: experienceItems.filter(\r\n        (item, index) => item.experienceTitle.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onSummaryChange = (val, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems[index] = {\r\n      ...newExperienceItems[index],\r\n      experienceSummary: val,\r\n    };\r\n    setExperienceItems(newExperienceItems);\r\n  }\r\n\r\n  const onAddExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index + 1, 0, {\r\n      experienceTitle: \"\",\r\n      company: \"\",\r\n      date: \"\",\r\n      location: \"\",\r\n      experienceSummary: \"\",\r\n    });\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newExperienceItems = [...experienceItems];\r\n    newExperienceItems.splice(index, 1);\r\n    setExperienceItems(newExperienceItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {experienceItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Job Role\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"experienceTitle\")\r\n                        }\r\n                        value={item.experienceTitle}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Company\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"company\")\r\n                        }\r\n                        value={item.company}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Date (From - To)\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"date\")\r\n                        }\r\n                        value={item.date}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"location\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"location\")\r\n                        }\r\n                        value={item.location}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n\r\n                      <ReactQuill \r\n                      defaultValue={item.experienceSummary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onSummaryChange(val, index)\r\n                      } />\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddExperience(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!experienceItems.filter(item => item.experienceTitle.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExperienceEditor;\r\n","import React,{useState} from \"react\";\r\nimport {Grid, Box} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport './Experience.css'\r\nimport ExperienceEditor from \"./ExperienceEditor\";\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n    ...theme.typography.caption,\r\n    textAlign: 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  }));\r\n\r\nconst Experience = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    console.log('calling experience', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-experience\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor} />\r\n                </span>\r\n                </div>     \r\n            <div className=\"experience-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"experience-item\">\r\n                        <span className=\"experience-title full-width-field resume-section-subtitle\">{item.experienceTitle}</span>\r\n                        <Grid\r\n                            container \r\n                            justifyContent=\"start\" \r\n                            alignItems=\"center\" \r\n                            rowSpacing={0.5} \r\n                            columnSpacing={{ xs: 0.5, sm: 0.5, md: 0.5 }}>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <BusinessIcon fontSize=\"15\"></BusinessIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.company}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <CalendarTodayIcon fontSize=\"15\"></CalendarTodayIcon> \r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.date}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                            <Grid item md={4} xs={4}>\r\n                                <Item>\r\n                                    <LocationOnIcon fontSize=\"15\"></LocationOnIcon>\r\n                                    <Box component=\"span\" sx={{ pl: 1}}>{item.location}</Box>\r\n                                </Item>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className=\"experience-summary rich-text-div\" dangerouslySetInnerHTML={{__html: item.experienceSummary}}>\r\n\r\n                        </div>    \r\n                        \r\n                    </div>\r\n                );\r\n            })}\r\n            </div>\r\n            <ExperienceEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Experience);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst LanguagesEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [languageItems, setLanguageItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onLanguageChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages[index] = { language: event.target.value, proficiency: 'Beginner' };\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onAddLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index + 1, 0, { language: '' });\r\n        setLanguageItems(languages);\r\n    }\r\n    const onDeleteLanguage = (event, index) => {\r\n        let languages = [...languageItems];\r\n        languages.splice(index, 1);\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let languages = [...languageItems];\r\n        switch (event.target.value) {\r\n            case 25:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        \r\n            case 50:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Intermediate'};\r\n                break;\r\n            \r\n            case 75:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Proficient'};\r\n                break;\r\n\r\n            case 100:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Native'};\r\n                break;     \r\n            default:\r\n                languages[index] = {language: languages[index].language, proficiency: 'Beginner'};\r\n                break;\r\n        }\r\n        setLanguageItems(languages);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: languageItems.filter((item, index) => item.language.length > 0) });\r\n        closeEditor();\r\n        setFirstTime(true);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    const getProficiencyValue = (prof) => {\r\n        let val = 25;\r\n        switch (prof) {\r\n            case 'Beginner':\r\n                val = 25;\r\n                break;\r\n        \r\n            case 'Intermediate':\r\n                val = 50;\r\n                break;\r\n            \r\n            case 'Proficient':\r\n                val = 75;\r\n                break;\r\n\r\n            case 'Native':\r\n                val = 100;\r\n                break;     \r\n            default:\r\n                val = 25\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {languageItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onLanguageChange(event, index)}\r\n                                        value={item.language}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ getProficiencyValue(item.proficiency) }\r\n                                            step={25}\r\n                                            marks\r\n                                            min={25}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddLanguage(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteLanguage(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!languageItems.filter(item => item.language.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LanguagesEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport LanguagesEditor from \"./LanguagesEditor\";\r\n\r\nimport \"./Languages.css\";\r\n\r\nconst Languages = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling languages', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  const getProgressFromProficiency = (proficiency) => {\r\n    let val = 25;\r\n    switch (proficiency) {\r\n        case 'Beginner':\r\n            val = 25;\r\n            break;\r\n    \r\n        case 'Intermediate':\r\n            val = 50;\r\n            break;\r\n        \r\n        case 'Proficient':\r\n            val = 75;\r\n            break;\r\n\r\n        case 'Native':\r\n            val = 100;\r\n            break;     \r\n        default:\r\n            val = 25\r\n            break;\r\n    }\r\n    return val;\r\n  }\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className=\"language-wrapper\">\r\n          <div className=\"language-header\">\r\n              <div className=\"language-title\">{item.language}</div>\r\n              <div className={`language-level ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"language-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={ getProgressFromProficiency(item.proficiency) } />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n\r\n      <LanguagesEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(Languages);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport { richEditorSettings } from \"../../globals.js\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [professionalSummaryItems, setprofessionalSummaryItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"professionalSummaryItems\", professionalSummaryItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: professionalSummaryItems.filter(\r\n        (item, index) => item.summary.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (val, index, property) => {\r\n    const newValue = val;\r\n    let newprofessionalSummaryItems = [...professionalSummaryItems];\r\n    newprofessionalSummaryItems[index] = {\r\n      ...newprofessionalSummaryItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setprofessionalSummaryItems(newprofessionalSummaryItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {professionalSummaryItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n\r\n                    <ReactQuill \r\n                      defaultValue={item.summary}\r\n                      modules={richEditorSettings}\r\n                      theme={\"snow\"}\r\n                      onChange={(val) =>\r\n                        onFieldChange(val, index, \"summary\")\r\n                      } />\r\n                    </div>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!professionalSummaryItems.filter(item => item.summary.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React,{useState} from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport ProfessionalSummaryEditor from \"./ProfessionalSummaryEditor\";\r\n\r\nimport \"./ProfessionalSummary.css\";\r\n\r\nconst ProfessionalSummary = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log(\"calling ProfessionalSummary\", open);\r\n\r\n  const openEditor = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n<div className=\"resume-section resume-section-professional-summary\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"professional-summary-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='professional-summary-item' key={index}>\r\n                             <span className=\"professional-summary-summary-body rich-text-div\" dangerouslySetInnerHTML={{__html: item.summary}}></span>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <ProfessionalSummaryEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(ProfessionalSummary);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillItems, setSkillItems] = useState(editorData.items);\r\n    const [rounded, setRounded] = useState(editorData.rounded);\r\n    const [filled, setFilled] = useState(editorData.filled);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onRoundedChange = (event) => {\r\n        setRounded(event.target.checked);\r\n    }\r\n\r\n    const onFilledChange = (event) => {\r\n        setFilled(event.target.checked);\r\n    }\r\n\r\n    const onSkillChange = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills[index] = { title: event.target.value };\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onAddSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index + 1, 0, { title: '' });\r\n        setSkillItems(skills);\r\n    }\r\n    const onDeleteSkill = (event, index) => {\r\n        let skills = [...skillItems];\r\n        skills.splice(index, 1);\r\n        setSkillItems(skills);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, rounded: rounded, filled: filled, title: title, items: skillItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Rounded: <Switch label=\"Rounded\" onChange={onRoundedChange} checked={rounded} />\r\n                        </div>\r\n                        <div>\r\n                            Filled: <Switch label=\"Filled\" onChange={onFilledChange} checked={filled} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onSkillChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <AddCircleIcon onClick={(event) => onAddSkill(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkill(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsEditor;","import React, {useState} from 'react';\r\nimport {Chip} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsEditor from \"./SkillsEditor\";\r\n\r\nimport './Skills.css'\r\nconst Skills = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling skills', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-skills\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"skills-item-wrap\">\r\n            {props.componentItem.componentData.items.map((item, index) => {\r\n                return (\r\n                    <Chip key={index} label={item.title} className={`resume-section-body skills-chip ${props.componentItem.componentData.rounded ? '' : 'no-rounded'}`} variant={props.componentItem.componentData.filled ? 'filled' : 'outlined'} />\r\n                );\r\n            })}\r\n            </div>\r\n\r\n\r\n            <SkillsEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Skills);","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Slider, Switch } from '@mui/material';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst SkillsWithProgressEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const [title, setTitle] = useState(editorData.title);\r\n    const [skillsProgressItems, setSkillsProgressItems] = useState(editorData.items);\r\n    const [showProficiency, setShowProficiency] = useState(editorData.showProficiency);\r\n    const [showProficiencyProgress, setShowProficiencyProgress] = useState(editorData.showProficiencyProgress);\r\n    const dispatch = useDispatch();\r\n\r\n    const onTitleChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setTitle(newVal);\r\n    }\r\n\r\n    const onShowProficiencyChange = (event) => {\r\n        setShowProficiency(event.target.checked);\r\n    }\r\n\r\n    const onShowProficiencyProgressChange = (event) => {\r\n        setShowProficiencyProgress(event.target.checked);\r\n    }\r\n\r\n    const onskillsProgressItemsChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = { title: event.target.value, proficiency: 0 };\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onAddSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index + 1, 0, { title: '', proficiency: 0 });\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n    const onDeleteSkills = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems.splice(index, 1);\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onProficiencyChange = (event, index) => {\r\n        let newSkillsProgressItems = [...skillsProgressItems];\r\n        newSkillsProgressItems[index] = {title: newSkillsProgressItems[index].title, proficiency: event.target.value};\r\n        setSkillsProgressItems(newSkillsProgressItems);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData, title: title, showProficiency: showProficiency, showProficiencyProgress: showProficiencyProgress, items: skillsProgressItems.filter((item, index) => item.title.length > 0) });\r\n        setFirstTime(true);\r\n        closeEditor();\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n            dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n            setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth autoComplete='off' onChange={onTitleChange} value={title} variant=\"standard\" />\r\n                    </div>\r\n\r\n                    <div className=\"editor-options-wrap\">\r\n                        <div>\r\n                            Show Proficiency: <Switch label=\"Proficiency\" onChange={ (event) => onShowProficiencyChange(event)} checked={showProficiency} />\r\n                        </div>\r\n                        <div>\r\n                            Show Proficiency Progress: <Switch label=\"Proficiency Progress\" onChange={(event) => onShowProficiencyProgressChange(event)} checked={showProficiencyProgress}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"editor-items-wrap\">\r\n                        {skillsProgressItems.map((item, index) => {\r\n                            return (\r\n                                <div className='editor-item' key={index}>\r\n                                    <TextField\r\n                                        label={\"Option \" + (index + 1)}\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onskillsProgressItemsChange(event, index)}\r\n                                        value={item.title}\r\n                                        data-key={index}\r\n                                        size=\"small\"\r\n                                    />\r\n                                    <div className='progress-wrap'>\r\n                                        {item.proficiency}\r\n                                        <Slider\r\n                                            aria-label=\"Proficiency\"\r\n                                            value={ Number(item.proficiency) }\r\n                                            step={10}\r\n                                            marks\r\n                                            min={0}\r\n                                            max={100}\r\n                                            onChange={(event) => onProficiencyChange(event, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <AddCircleIcon onClick={(event) => onAddSkills(event, index)} className='add-item-icon'></AddCircleIcon>\r\n                                    <DeleteForeverIcon onClick={(event) => onDeleteSkills(event, index)} className={`delete-item-icon ${index === 0 ? 'd-none' : ''}`}></DeleteForeverIcon>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave} disabled={!skillsProgressItems.filter(item => item.title.length > 0).length} >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SkillsWithProgressEditor;","import React, { useState } from \"react\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SkillsWithProgressEditor from \"./SkillsWithProgressEditor\";\r\n\r\nimport \"./SkillsWithProgress.css\";\r\n\r\nconst SkillsWithProgress = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  console.log('calling SkillsWith Progress Bar', open);\r\n  \r\n  const  openEditor = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"resume-section resume-section-language\">\r\n      <div className=\"resume-section-title\">\r\n          <span>{props.componentItem.componentData.title}</span>\r\n          <span className=\"edit-component-icon\">\r\n              <EditIcon onClick={openEditor}/>\r\n          </span>\r\n      </div>\r\n      {props.componentItem.componentData.items.map((item, index) => {\r\n        return (\r\n          <div key={index} className={props.componentItem.componentData.showProficiencyProgress ? 'skill-wrapper' : 'skill-wrapper min-margin'}>\r\n          <div className=\"skill-header\">\r\n              <div className=\"skill-title\">{item.title}</div>\r\n              <div className={`skill-percentage ${props.componentItem.componentData.showProficiency ? '' : 'd-none'}`}> - {item.proficiency}</div>\r\n          </div>\r\n          <div className=\"skill-progress\">\r\n            <LinearProgress className={props.componentItem.componentData.showProficiencyProgress ? '' : 'd-none'} variant=\"determinate\" value={Number(item.proficiency)} />\r\n          </div>\r\n        </div>\r\n        );\r\n      })}\r\n\r\n    <SkillsWithProgressEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  React.memo(SkillsWithProgress);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Divider, Box } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateResumeDataReducer } from \"../../reducers/resumeDataSlice\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n\r\nconst SocialEditor = (props) => {\r\n  const [editorData, setEditorData] = useState(props.editorData);\r\n  const [firstime, setFirstTime] = useState(false);\r\n  const [title, setTitle] = useState(editorData.title);\r\n  const dispatch = useDispatch();\r\n  const [socialItems, setSocialItems] = useState(editorData.items);\r\n\r\n  const onSave = (event) => {\r\n    console.log(\"socialItems\", socialItems);\r\n    setEditorData({\r\n      ...editorData,\r\n      title: title,\r\n      items: socialItems.filter(\r\n        (item, index) => item.socialPlatform.length > 0\r\n      ),\r\n    });\r\n    setFirstTime(true);\r\n    closeEditor();\r\n    console.log(editorData);\r\n  };\r\n\r\n  const onTitleChange = (event) => {\r\n    const newVal = event.target.value;\r\n    setTitle(newVal);\r\n  };\r\n\r\n  const onFieldChange = (event, index, property) => {\r\n    const newValue = event.target.value;\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems[index] = {\r\n      ...newSocialItems[index],\r\n      [property]: newValue,\r\n    };\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onAddSocial = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index + 1, 0, {\r\n        socialPlatform: \"\",\r\n        username: \"\"\r\n    });\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const onDeleteExperience = (event, index) => {\r\n    let newSocialItems = [...socialItems];\r\n    newSocialItems.splice(index, 1);\r\n    setSocialItems(newSocialItems);\r\n  };\r\n\r\n  const closeEditor = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstime) {\r\n      console.log(\"props\", props);\r\n      dispatch(\r\n        updateResumeDataReducer({\r\n          name: props.componentName,\r\n          column: props.componentColumn,\r\n          data: editorData,\r\n        })\r\n      );\r\n      setFirstTime(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editorData]);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"sm\"\r\n      fullWidth={true}\r\n      open={props.open}\r\n      onClose={closeEditor}\r\n    >\r\n      <DialogContent>\r\n        <div className=\"editor-wrap\">\r\n          <div className=\"editor-heading-wrap\">\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n              variant=\"standard\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"editor-items-wrap\">\r\n            {socialItems.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"editor-item\">\r\n                    <div>\r\n                      <TextField\r\n                        label=\"Social Platform\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"socialPlatform\")\r\n                        }\r\n                        value={item.socialPlatform}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                      <TextField\r\n                        label=\"Username or URL\"\r\n                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                        onChange={(event) =>\r\n                          onFieldChange(event, index, \"username\")\r\n                        }\r\n                        value={item.username}\r\n                        inputProps={{ style: { fontSize: 14 } }}\r\n                        size=\"small\"\r\n                      />\r\n\r\n                    </div>\r\n                    <AddCircleIcon\r\n                      onClick={(event) => onAddSocial(event, index)}\r\n                      className=\"add-item-icon\"\r\n                    ></AddCircleIcon>\r\n                    <DeleteForeverIcon\r\n                      onClick={(event) => onDeleteExperience(event, index)}\r\n                      className={`delete-item-icon ${\r\n                        index === 0 ? \"d-none\" : \"\"\r\n                      }`}\r\n                    ></DeleteForeverIcon>\r\n                  </div>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                  <Divider></Divider>\r\n                  <Box sx={{ height: 20 }}></Box>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeEditor}>Cancel</Button>\r\n        <Button onClick={onSave} disabled={!socialItems.filter(item => item.socialPlatform.length > 0).length}>Save</Button>\r\n        {/*  */}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SocialEditor;\r\n","import React, {useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SocialEditor from \"./SocialEditor\";\r\n\r\nimport './Social.css'\r\nconst Social = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    console.log('calling Social', open);\r\n    \r\n    const  openEditor = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"resume-section resume-section-Social\">\r\n            <div className=\"resume-section-title\">\r\n                <span>{props.componentItem.componentData.title}</span>\r\n                <span className=\"edit-component-icon\">\r\n                    <EditIcon onClick={openEditor}/>\r\n                </span>\r\n            </div>   \r\n            \r\n            <div className=\"social-item-wrap\">\r\n                {props.componentItem.componentData.items.map((item, index) => {\r\n                    return (\r\n                        <div className='social-item' key={index}>\r\n                            <div className='social-platform resume-section-subtitle'>{item.socialPlatform}</div>\r\n                            <div className='social-username'>{item.username}</div>\r\n                        </div>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n\r\n            <SocialEditor open={open} setOpen={setOpen} componentColumn={props.componentColumn} componentName={props.componentItem.name} editorData={props.componentItem.componentData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Social);","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { AppBar, Button, Box, Toolbar, Link, Paper, Grid, Autocomplete, TextField, CircularProgress, Chip } from '@mui/material';\r\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport GoogleLogin from '../../components/Login/GoogleLogin'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getResumeDataByUserId, updateResumeDataByUserId } from '../../reducers/resumeDataSlice';\r\nimport { getGlobalSettingsByUserId, updateGlobalSettingsUserId } from '../../reducers/globalSettingsSlice';\r\nimport WebAssetOutlinedIcon from '@mui/icons-material/WebAssetOutlined';\r\nimport WebOutlinedIcon from '@mui/icons-material/WebOutlined';\r\nimport ContentCopyOutlinedIcon from '@mui/icons-material/ContentCopyOutlined';\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\n\r\nimport './Builder.css'\r\nimport logo from '../../logo.svg';\r\nimport GlobalResumeSetting from \"../../components/GlobalResumeSetting/GlobalResumeSetting\";\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport Achievement from '../../components/Achievements/Achievement'\r\nimport BasicInfo from '../../components/BasicInfo/BasicInfo'\r\nimport Education from '../../components/Education/Education'\r\nimport Experience from '../../components/Experience/Experience'\r\nimport Languages from '../../components/Languages/Languages';\r\nimport ProfessionalSummary from '../../components/ProfessionalSummary/ProfessionalSummary';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsWithProgress from '../../components/SkillsWithProgress/SkillsWithProgress';\r\nimport Social from '../../components/Social/Social';\r\n\r\n\r\nfunction Builder() {\r\n  let resumeHTML;\r\n  const {authReducer, resumeDataReducer, globalSettingsReducer} = useSelector((state) => state);\r\n  const [arr, setItems] = useState(null);\r\n  const [sidebar, setSidebar] = useState(true);\r\n  const [pageTwo, setPageTwo] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [globalResumeSettings, setGlobalResumeSettings] = useState(null);\r\n\r\n  const  openGlobalSetting = () => {\r\n      setOpen(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n      console.log('calling builder effect');\r\n      setItems(resumeDataReducer.resumeData);\r\n      setGlobalResumeSettings(globalSettingsReducer.globalSettings);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resumeDataReducer]);\r\n    \r\n  useEffect(() => {\r\n    getResumeData();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authReducer]);\r\n\r\n\r\n  function getResumeData() {\r\n    dispatch(getResumeDataByUserId(authReducer.userId)).then((res) => {\r\n      if (res.payload) {\r\n        setItems(res.payload);\r\n        console.log(res.payload)\r\n        setPageTwo(res.payload.pageTwo.length > 0);\r\n      }\r\n    });\r\n\r\n    dispatch(getGlobalSettingsByUserId(authReducer.userId)).then((res) => {\r\n      setGlobalResumeSettings(res.payload);\r\n      if (res.payload) {\r\n        \r\n        const root = document.querySelector(\":root\");\r\n        root.style.setProperty(\"--color-font-heading\", res.payload.headingFontColor);\r\n        root.style.setProperty(\"--color-font-subheading\", res.payload.subheadingFontColor);\r\n        root.style.setProperty(\"--color-font-body\", res.payload.bodyFontColor);\r\n      }\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  function updateResumeData(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateResumeDataByUserId({data:newData, userId: authReducer.userId}));\r\n    }\r\n  }\r\n\r\n  function updateGlobalSetting(newData) {\r\n    if (authReducer.userId) {\r\n      dispatch(updateGlobalSettingsUserId({data:newData, userId: authReducer.userId}));\r\n    }\r\n  }\r\n\r\n\r\n  const getUniqueId = () => {\r\n    return Math.floor(Math.random() * Date.now())\r\n  }\r\n\r\n  const copyComponent = (event, item, index, column) => {\r\n    item = {...item, copy: true, name: `${item.name}-${getUniqueId()}`};\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index + 1, 0, item);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  const deleteComponent = (event, item, index, column) => {\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    newArr[column].splice(index, 1);\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n\r\n  const addResumePage = () => {\r\n    setPageTwo(true); \r\n    setTimeout(() => {\r\n    const body = document.getElementById('pageTwo');\r\n    body.scrollIntoView({\r\n        behavior: 'smooth'\r\n    }, 500)\r\n    } , 500);\r\n  }\r\n\r\n  const removeResumePage = () => {\r\n    setPageTwo(false);\r\n\r\n    let newArr = JSON.parse(JSON.stringify(arr));\r\n    const mergedArr = [...newArr.componentLibrary, ...newArr.pageTwo];\r\n    newArr.componentLibrary = mergedArr;\r\n    newArr.pageTwo = [];\r\n    setItems(newArr);\r\n    updateResumeData(newArr);\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    const { destination, source, draggableId } = result;\r\n    // if canceling the dragNdrop in between\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    // if rearranging in same column\r\n    if (destination.droppableId === source.droppableId) {\r\n        const newArr = Array.from(arr[source.droppableId]);\r\n        newArr.splice(source.index, 1);\r\n        newArr.splice(destination.index, 0, arr[destination.droppableId].filter(x => x.name === draggableId)[0]);\r\n        \r\n        const colId = destination.droppableId;\r\n        \r\n        const newColumn = {\r\n          ...arr,\r\n          [colId]: newArr\r\n        }\r\n        setItems(newColumn);\r\n        updateResumeData(newColumn);\r\n    } else {\r\n      // Else if moving from sidebar to main column or vice-versa\r\n      const sourceId = source.droppableId;\r\n      const destId = destination.droppableId;\r\n      const sourceArr = Array.from(arr[source.droppableId]);\r\n      const destArr = Array.from(arr[destination.droppableId]);\r\n      // remove from source\r\n      sourceArr.splice(source.index, 1);\r\n      // add to destination\r\n      destArr.splice(destination.index, 0, arr[source.droppableId].filter(x => x.name === result.draggableId)[0]);\r\n      const newColumn = {\r\n        ...arr,\r\n        [sourceId]: sourceArr,\r\n        [destId]: destArr\r\n      }\r\n      setItems(newColumn);\r\n      updateResumeData(newColumn);\r\n    }\r\n  }\r\n\r\n  function getComponent(componentType, item, columnName) {\r\n      switch (componentType) {\r\n        case 'Achievements':\r\n            return <Achievement componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'BasicInfo':\r\n          return <BasicInfo componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Experience':\r\n            return <Experience componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Education':\r\n            return <Education componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Languages':\r\n            return <Languages componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'ProfessionalSummary':\r\n          return <ProfessionalSummary componentColumn={columnName} componentItem={item} />;    \r\n\r\n        case 'Skills':\r\n          return <Skills componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'SkillsWithProgress':\r\n          return <SkillsWithProgress componentColumn={columnName} componentItem={item} />;\r\n\r\n        case 'Social':\r\n            return <Social componentColumn={columnName} componentItem={item} />;\r\n            \r\n        default:\r\n            return null;\r\n    }\r\n  }\r\n\r\n\r\n  if (arr && globalResumeSettings) {\r\n    resumeHTML = <DragDropContext onDragEnd={onDragEnd}>\r\n    <div className=\"resume-paper-wrap\">\r\n    <GlobalResumeSetting \r\n      globalResumeSettings={globalResumeSettings}\r\n      setGlobalResumeSettings={setGlobalResumeSettings}\r\n      updateGlobalSetting={updateGlobalSetting}\r\n      open={open} \r\n      setOpen={setOpen}>\r\n    </GlobalResumeSetting>\r\n\r\n      <Grid container spacing={2}>\r\n          <Grid item xs={8}>\r\n            <div className=\"layout-options\">\r\n              <div className=\"layout-option-item\">\r\n                <Chip  color=\"primary\" icon={<SettingsOutlinedIcon />} onClick={openGlobalSetting} label=\"Settings\" />\r\n              </div>\r\n              \r\n              <div className=\"layout-option-item\">\r\n                <Chip color=\"primary\" icon={<WebAssetOutlinedIcon />} onClick={() => {\r\n                setSidebar(false)\r\n                const newArr = {...arr, main: [...arr['main'], ...arr['sidebar']], sidebar: []};\r\n                setItems(newArr);\r\n                }} label=\"Single Column\" />\r\n              </div>\r\n\r\n              <div className=\"layout-option-item\">\r\n              <Chip color=\"primary\" icon={<WebOutlinedIcon />} onClick={() => { setSidebar(true) }} label=\"Sidebar\" />\r\n              </div>\r\n\r\n              <div className=\"layout-option-item\">\r\n                {\r\n                  pageTwo ? \r\n                  <Chip color=\"primary\" icon={<AddCircleOutlineOutlinedIcon />} onClick={removeResumePage} label=\"Remove Page\" /> \r\n                  : <Chip color=\"primary\" icon={<AddCircleOutlineOutlinedIcon />} onClick={addResumePage} label=\"Add Page\" />\r\n                }\r\n                \r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"resume-paper-container\" id=\"resumPaperContainer\">\r\n            <Paper className={`resume-paper heading-alignment-${globalResumeSettings.headingAlignment} heading-font-${globalResumeSettings.headingFontSize} subheading-font-${globalResumeSettings.subheadingFontSize} body-font-${globalResumeSettings.bodyFontSize}`} sx={{fontSize: globalResumeSettings.bodyFontSize, color: globalResumeSettings.bodyFontColor}} elevation={3} >\r\n              <Grid container>\r\n                <Grid item xs={12} id=\"header\" className={`${arr.header.length > 0 ? '' : 'no-padding'}`} sx={{backgroundColor: globalResumeSettings.headerBackgroundColor, color: globalResumeSettings.aboutSectionFontColor}}>\r\n                  <Droppable droppableId=\"header\">\r\n                    {(provided, snapshot) => (\r\n                      <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                        <Suspense fallback={<div>Loading</div>}>\r\n                          {arr.header.map((item, index) => {\r\n                            return (\r\n                              <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                  <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'} \r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                    { getComponent(item.componentType, item, 'header') }\r\n                                    <div className=\"overlay\">\r\n                                      <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                        <DragIndicatorIcon/>\r\n                                      </span>\r\n                                      <span className=\"copy-component\">\r\n                                        <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                      <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'header')}/>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                            );\r\n                          }\r\n                          )}\r\n                          {provided.placeholder}\r\n                        </Suspense>\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </Grid>\r\n                <Grid item xs={sidebar ? 7 : 12} id=\"main\" className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"main\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.main.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'} \r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                  \r\n                                  { getComponent(item.componentType, item, 'main') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'main')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'main')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid>\r\n                \r\n                {sidebar ? \r\n                <Grid item xs={5} id=\"sidebar\" sx={{backgroundColor: globalResumeSettings.sidebarBackgroundColor}} className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"sidebar\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over sidebar-column' : 'resume-paper-content sidebar-column'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.sidebar.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n                                  { getComponent(item.componentType, item, 'sidebar') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'sidebar')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'sidebar')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid> : null}\r\n              </Grid>\r\n            </Paper>\r\n            <Box sx={{height: 30}}></Box>             \r\n            {pageTwo ?\r\n            <Paper className={`resume-paper heading-alignment-${globalResumeSettings.headingAlignment} heading-font-${globalResumeSettings.headingFontSize} subheading-font-${globalResumeSettings.subheadingFontSize} body-font-${globalResumeSettings.bodyFontSize}`} sx={{fontSize: globalResumeSettings.bodyFontSize, color: globalResumeSettings.bodyFontColor}} elevation={3} >\r\n              <Grid container>\r\n                <Grid item xs={12} id=\"pageTwo\" className={`${arr.header.length > 0 ? '' : 'padding'}`}>\r\n                <Droppable droppableId=\"pageTwo\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.pageTwo.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'} \r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    key={item.name}>\r\n                                  \r\n                                  { getComponent(item.componentType, item, 'pageTwo') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'pageTwo')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'pageTwo')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            : null}\r\n            </div>     \r\n          </Grid>\r\n          <Grid className=\"component-library-wrap\" item xs={4}>\r\n            <div className=\"component-library-header\">\r\n              <div>\r\n                <span className=\"component-library-title\">All Widgets</span>\r\n              </div>\r\n              <Autocomplete\r\n                id=\"component-library-filter\"\r\n                options={[\r\n                  { label: 'Education', id: 1 },\r\n                  { label: 'Skills', id: 2 },\r\n                ]}\r\n                sx={{ width: 150 }}\r\n                renderInput={(params) => <TextField {...params} placeholder=\"Filter\"  variant=\"standard\" />}\r\n              />\r\n            </div>            \r\n            <Paper style={{padding: '20px'}} className=\"widget-library\" elevation={0}>\r\n\r\n            <Droppable droppableId=\"componentLibrary\">\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'resume-paper-content-draggin-over' : 'resume-paper-content'}>\r\n                      {provided.isDragging}\r\n                      <Suspense fallback={<div>Loading</div>}>\r\n                        {arr.componentLibrary.map((item, index) => {\r\n                          return (\r\n                            <Draggable key={item.name} draggableId={item.name} index={index}>\r\n                              {(provided, snapshot) => (\r\n                                <div className={snapshot.isDragging ? 'resume-section-wrap component-dragging' : 'resume-section-wrap'}\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      key={item.name}>\r\n\r\n                                  { getComponent(item.componentType, item, 'componentLibrary') }\r\n                                  <div className=\"overlay\">\r\n                                    <span className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                                      <DragIndicatorIcon/>\r\n                                    </span>\r\n                                    <span className=\"copy-component\">\r\n                                      <ContentCopyOutlinedIcon onClick={(event) => copyComponent(event, item, index, 'componentLibrary')}/>\r\n                                    </span>\r\n                                    <span className={item.copy ? 'delete-component' : 'd-none'}>\r\n                                        <CloseOutlinedIcon onClick={(event) => deleteComponent(event, item, index, 'componentLibrary')}/>\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        }\r\n                        )}\r\n                        {provided.placeholder}\r\n                      </Suspense>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n\r\n  </DragDropContext>;\r\n  } else {\r\n    resumeHTML = <div className=\"initial-loader\">\r\n                    <CircularProgress />\r\n                </div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"builder-wrap\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <AppBar elevation={0} className=\"global-header\" color=\"inherit\" position=\"fixed\">\r\n            <Toolbar className=\"builder-header\">\r\n              <div className=\"header-filters\">\r\n                <img src={logo} className=\"header-logo\" alt=\"Resume Builder\" />\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link active\" href=\"#\">About</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Experience</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Education</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Skills</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Languages</Link>\r\n                  <Link underline=\"none\" className=\"builder-header-menu-link\" href=\"#\">Achievement</Link>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                    onClick={window.print}\r\n                    variant=\"contained\"\r\n                    color=\"primary\" \r\n                    disableElevation\r\n                    className=\"header-download-button\">\r\n                        Download Resume\r\n                </Button>\r\n                <GoogleLogin></GoogleLogin>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n      \r\n      {resumeHTML}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Builder;","import './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux';\r\n\r\nimport { Container, Box } from '@mui/material';\r\n\r\nimport GlobalHeader from '../GlobalHeader/GlobalHeader';\r\nimport About from '../../pages/About/About';\r\nimport Contact from '../../pages/Contact/Contact';\r\nimport Builder from '../../pages/Builder/Builder';\r\n\r\nfunction App() {\r\nconst isSignedIn = useSelector(state => state.authReducer.isSignedIn);\r\n  return (\r\n      <Router>\r\n        <GlobalHeader/>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/builder\">\r\n              {(isSignedIn || localStorage.getItem('token') !== null) &&(<Builder></Builder>)}\r\n              {(!isSignedIn && localStorage.getItem('token') == null) &&(<Redirect to=\"/\"></Redirect>)}\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact></Contact>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About/>\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Container maxWidth=\"sm\">\r\n                <Box m=\"auto\" textAlign=\"center\">\r\n                  <h1>Home Page</h1>\r\n                </Box> \r\n              </Container>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\n// Or Create your Own theme:\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#09915A'\r\n      },\r\n      // text: {\r\n      //   primary: 'rgba(0, 0, 0, 0.90)',\r\n      //   secondary: 'red',\r\n      // }\r\n    },\r\n    components: {\r\n      MuiButton: {\r\n        variants: [\r\n          {\r\n            props: { variant: 'space-40', color: 'primary' },\r\n            style: {\r\n              paddingLeft: '40px',\r\n              paddingRight: '40px'\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  });\r\n\r\n  export default theme;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authSlice from \"./authSlice\";\r\nimport resumeDataSlice from \"./resumeDataSlice\";\r\nimport globalSettingsSlice from \"./globalSettingsSlice\";\r\n\r\n// export default combineReducers({\r\n//     authReducer: authReducer\r\n// });\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authReducer: authSlice,\r\n    resumeDataReducer: resumeDataSlice,\r\n    globalSettingsReducer: globalSettingsSlice\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme'\nimport {store} from './reducers';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}