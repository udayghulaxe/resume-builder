{"version":3,"sources":["components/BasicInfo/BasicInfoEditor.js","../node_modules/@mui/material/Dialog/dialogClasses.js","../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js"],"names":["BasicInfoEditor","props","useState","editorData","setEditorData","firstime","setFirstTime","dispatch","useDispatch","onDataChange","event","property","newName","target","value","newEditorData","closeEditor","setOpen","useEffect","updateResumeDataReducer","name","componentName","column","componentColumn","data","maxWidth","fullWidth","open","onClose","className","readOnly","autoComplete","variant","label","sx","mb","mt","mr","onChange","fullName","inputProps","style","fontSize","width","size","currentRole","email","phone","website","address","multiline","rows","onClick","console","log","getDialogUtilityClass","slot","generateUtilityClass","dialogClasses","generateUtilityClasses","DialogContext","createContext","_excluded","DialogBackdrop","styled","Backdrop","overrides","styles","backdrop","zIndex","DialogRoot","Modal","overridesResolver","root","position","DialogContainer","ownerState","container","capitalize","scroll","_extends","height","outline","display","justifyContent","alignItems","overflowY","overflowX","textAlign","content","verticalAlign","DialogPaper","Paper","paper","String","paperFullWidth","fullScreen","paperFullScreen","theme","margin","boxShadow","flexDirection","maxHeight","breakpoints","unit","Math","max","values","xs","paperScrollBody","down","borderRadius","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","React","inProps","ref","useThemeProps","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","children","disableEscapeKeyDown","onBackdropClick","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","_jsx","clsx","as","closeAfterTransition","current","appear","in","timeout","role","onMouseDown","currentTarget","elevation","Provider","getDialogContentUtilityClass","DialogContentRoot","dividers","flex","WebkitOverflowScrolling","padding","borderTop","palette","divider","borderBottom","paddingTop","DialogContent","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","spacing","marginLeft","DialogActions"],"mappings":"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","file":"static/js/10.5126f20e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateResumeDataReducer } from '../../reducers/resumeDataSlice';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n\r\nconst BasicInfoEditor = (props) => {\r\n    const [editorData, setEditorData] = useState(props.editorData);\r\n    const [firstime, setFirstTime] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDataChange = (event, property) => {\r\n        const newName = event.target.value;\r\n        let newEditorData = {...editorData};\r\n        newEditorData = {...newEditorData, [property]: newName};\r\n        setEditorData(newEditorData);\r\n    }\r\n\r\n    const onSave = (event) => {\r\n        setEditorData({ ...editorData });\r\n        setFirstTime(true);\r\n        console.log(editorData);\r\n    }\r\n\r\n    const closeEditor = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstime) {\r\n           dispatch(updateResumeDataReducer({ name: props.componentName, column: props.componentColumn, data: editorData }));\r\n           setFirstTime(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorData]);\r\n\r\n\r\n    return (\r\n        <Dialog maxWidth='sm' fullWidth={true} open={props.open} onClose={closeEditor}>\r\n            <DialogContent>\r\n                <div className='editor-wrap'>\r\n                    <div className='editor-heading-wrap'>\r\n                        <TextField fullWidth readOnly autoComplete='off' value='Basic Info' variant=\"standard\" />\r\n                    </div>\r\n                    <div className=\"editor-items-wrap\">\r\n                        <div className='editor-item' >\r\n                            <div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Full Name'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'fullName')}\r\n                                        value={editorData.fullName}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Current Role/Designation'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'currentRole')}\r\n                                        value={editorData.currentRole}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Email'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'email')}\r\n                                        value={editorData.email}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240} }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Phone'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'phone')}\r\n                                        value={editorData.phone}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Website'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'website')}\r\n                                        value={editorData.website}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Address'\r\n                                        sx={{ mb: 1, mt: 1, mr: 1 }}\r\n                                        onChange={(event) => onDataChange(event, 'address')}\r\n                                        value={editorData.address}\r\n                                        inputProps={{ style: { fontSize: 14, width: 240 } }}\r\n                                        size='small'\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={closeEditor}>Cancel</Button>\r\n                <Button onClick={onSave}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BasicInfoEditor;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","import { createContext } from 'react';\nconst DialogContext = /*#__PURE__*/createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\n\nexport default DialogContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/createTransitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n} : {\n  '.MuiDialogTitle-root + &': {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogActions;"],"sourceRoot":""}